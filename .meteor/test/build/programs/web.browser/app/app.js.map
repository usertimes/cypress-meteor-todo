{"version":3,"sources":["meteor://💻app/imports/db/TasksCollection.js","meteor://💻app/imports/ui/App.js","meteor://💻app/imports/ui/LoginForm.js","meteor://💻app/imports/ui/Task.js","meteor://💻app/imports/ui/TaskForm.js","meteor://💻app/imports/testIds.js","meteor://💻app/client/main.js"],"names":["TasksCollection","Mongo","toggleChecked","isChecked","deleteTask","_id","App","user","useTracker","useState","hideCompletedFilter","$ne","userFilter","userId","pendingOnlyFilter","isLoading","noDataAvailable","tasks","pendingTasksCount","Meteor","handler","hideCompleted","sort","createdAt","pendingTasksTitle","logout","testProp","task","LoginForm","submit","e","Task","onDeleteClick","TaskForm","handleSubmit","setText","LOGIN_BUTTON","REMOVE_TODO","CHECKBOX","COUNTER","id","render","document"],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nexport const TasksCollection = new Mongo.Collection('tasks');\n","import { Meteor } from 'meteor/meteor';\nimport React, { useState, Fragment } from 'react';\nimport { useTracker } from 'meteor/react-meteor-data';\nimport { TasksCollection } from '/imports/db/TasksCollection';\nimport { Task } from './Task';\nimport { TaskForm } from './TaskForm';\nimport { LoginForm } from './LoginForm';\nimport { testProp,COUNTER } from '../testIds';\n\nconst toggleChecked = ({ _id, isChecked }) =>\n  Meteor.call('tasks.setIsChecked', _id, !isChecked);\n\nconst deleteTask = ({ _id }) => Meteor.call('tasks.remove', _id);\n\nexport const App = () => {\n  const user = useTracker(() => Meteor.user());\n\n  const [hideCompleted, setHideCompleted] = useState(false);\n\n  const hideCompletedFilter = { isChecked: { $ne: true } };\n\n  const userFilter = user ? { userId: user._id } : {};\n\n  const pendingOnlyFilter = { ...hideCompletedFilter, ...userFilter };\n\n  const { tasks, pendingTasksCount, isLoading } = useTracker(() => {\n    const noDataAvailable = { tasks: [], pendingTasksCount: 0 };\n    if (!Meteor.user()) {\n      return noDataAvailable;\n    }\n    const handler = Meteor.subscribe('tasks');\n\n    if (!handler.ready()) {\n      return { ...noDataAvailable, isLoading: true };\n    }\n\n    const tasks = TasksCollection.find(\n      hideCompleted ? pendingOnlyFilter : userFilter,\n      {\n        sort: { createdAt: -1 },\n      }\n    ).fetch();\n    const pendingTasksCount = TasksCollection.find(pendingOnlyFilter).count();\n\n    return { tasks, pendingTasksCount };\n  });\n\n  const pendingTasksTitle = `${\n    pendingTasksCount ? ` (${pendingTasksCount})` : ''\n  }`;\n\n  const logout = () => Meteor.logout();\n\n  return (\n    <div className=\"app\">\n      <header>\n        <div className=\"app-bar\">\n          <div className=\"app-header\">\n            <h1>\n              📝️ To Do List\n              <span {...testProp(COUNTER)}> {pendingTasksTitle} </span>\n            </h1>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"main\">\n        {user ? (\n          <Fragment>\n            <div className=\"user\" onClick={logout}>\n              {user.username} 🚪\n            </div>\n\n            <TaskForm />\n\n            <div className=\"filter\">\n              <button onClick={() => setHideCompleted(!hideCompleted)}>\n                {hideCompleted ? 'Show All' : 'Hide Completed'}\n              </button>\n            </div>\n\n            {isLoading && <div className=\"loading\">loading...</div>}\n\n            <ul className=\"tasks\">\n              {tasks.map((task) => (\n                <Task\n                  key={task._id}\n                  task={task}\n                  onCheckboxClick={toggleChecked}\n                  onDeleteClick={deleteTask}\n                />\n              ))}\n            </ul>\n          </Fragment>\n        ) : (\n          <LoginForm />\n        )}\n      </div>\n    </div>\n  );\n};\n","import { Meteor } from 'meteor/meteor';\nimport React, { useState } from 'react';\nimport { LOGIN_BUTTON, testProp } from '../testIds';\n\nexport const LoginForm = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const submit = (e) => {\n    e.preventDefault();\n\n    Meteor.loginWithPassword(username, password);\n  };\n\n  return (\n    <form onSubmit={submit} className=\"login-form\">\n      <div>\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          name=\"username\"\n          required\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"password\">Password</label>\n\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          required\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n      <div>\n        <button type=\"submit\" {...testProp(LOGIN_BUTTON)}>\n          Log In\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React from 'react';\nimport { testProp, REMOVE_TODO, CHECKBOX } from '../testIds';\n\nexport const Task = ({ task, onCheckboxClick, onDeleteClick }) => {\n  return (\n    <li>\n      <input\n        className={CHECKBOX}\n        type=\"checkbox\"\n        checked={!!task.isChecked}\n        onClick={() => onCheckboxClick(task)}\n        readOnly\n      />\n      <span>{task.text}</span>\n      <button className={REMOVE_TODO} onClick={() => onDeleteClick(task)}>\n        &times;\n      </button>\n    </li>\n  );\n};\n","import { Meteor } from 'meteor/meteor';\nimport React, { useState } from 'react';\n\nexport const TaskForm = () => {\n  const [text, setText] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!text) return;\n\n    Meteor.call('tasks.insert', text);\n\n    setText('');\n  };\n\n  return (\n    <form className=\"task-form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"add\"\n        placeholder=\"Type to add new tasks\"\n        value={text}\n        onChange={e => setText(e.target.value)}\n      />\n\n      <button type=\"submit\">Add Task</button>\n    </form>\n  );\n};\n","export const LOGIN_BUTTON = 'LOGIN_BUTTON';\nexport const REMOVE_TODO = 'REMOVE_TODO';\nexport const CHECKBOX = 'CHECKBOX';\nexport const COUNTER = 'COUNTER';\n\n// Helper function to select elements.\nexport const testProp = (id) => ({ 'data-test-id': id });\n","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\nimport { App } from '/imports/ui/App';\n\nMeteor.startup(() => {\n  render(<App />, document.getElementById('react-target'));\n});\n"]}