[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"db\":{\"TasksCollection.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// imports/db/TasksCollection.js                                                                              //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nmodule.export({\n  TasksCollection: () => TasksCollection\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nconst TasksCollection = new Mongo.Collection('tasks');\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"ui\":{\"App.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// imports/ui/App.js                                                                                          //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nlet _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  App: () => App\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet React, useState, Fragment;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useState(v) {\n    useState = v;\n  },\n\n  Fragment(v) {\n    Fragment = v;\n  }\n\n}, 1);\nlet useTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  useTracker(v) {\n    useTracker = v;\n  }\n\n}, 2);\nlet TasksCollection;\nmodule.link(\"/imports/db/TasksCollection\", {\n  TasksCollection(v) {\n    TasksCollection = v;\n  }\n\n}, 3);\nlet Task;\nmodule.link(\"./Task\", {\n  Task(v) {\n    Task = v;\n  }\n\n}, 4);\nlet TaskForm;\nmodule.link(\"./TaskForm\", {\n  TaskForm(v) {\n    TaskForm = v;\n  }\n\n}, 5);\nlet LoginForm;\nmodule.link(\"./LoginForm\", {\n  LoginForm(v) {\n    LoginForm = v;\n  }\n\n}, 6);\n\nconst toggleChecked = (_ref) => {\n  let {\n    _id,\n    isChecked\n  } = _ref;\n  return Meteor.call('tasks.setIsChecked', _id, !isChecked);\n};\n\nconst deleteTask = (_ref2) => {\n  let {\n    _id\n  } = _ref2;\n  return Meteor.call('tasks.remove', _id);\n};\n\nconst App = () => {\n  const user = useTracker(() => Meteor.user());\n  const [hideCompleted, setHideCompleted] = useState(false);\n  const hideCompletedFilter = {\n    isChecked: {\n      $ne: true\n    }\n  };\n  const userFilter = user ? {\n    userId: user._id\n  } : {};\n\n  const pendingOnlyFilter = _objectSpread(_objectSpread({}, hideCompletedFilter), userFilter);\n\n  const {\n    tasks,\n    pendingTasksCount,\n    isLoading\n  } = useTracker(() => {\n    const noDataAvailable = {\n      tasks: [],\n      pendingTasksCount: 0\n    };\n\n    if (!Meteor.user()) {\n      return noDataAvailable;\n    }\n\n    const handler = Meteor.subscribe('tasks');\n\n    if (!handler.ready()) {\n      return _objectSpread(_objectSpread({}, noDataAvailable), {}, {\n        isLoading: true\n      });\n    }\n\n    const tasks = TasksCollection.find(hideCompleted ? pendingOnlyFilter : userFilter, {\n      sort: {\n        createdAt: -1\n      }\n    }).fetch();\n    const pendingTasksCount = TasksCollection.find(pendingOnlyFilter).count();\n    return {\n      tasks,\n      pendingTasksCount\n    };\n  });\n  const pendingTasksTitle = \"\".concat(pendingTasksCount ? \" (\".concat(pendingTasksCount, \")\") : '');\n\n  const logout = () => Meteor.logout();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\"\n  }, /*#__PURE__*/React.createElement(\"header\", null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-bar\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app-header\"\n  }, /*#__PURE__*/React.createElement(\"h1\", null, \"\\uD83D\\uDCDD\\uFE0F To Do List\", pendingTasksTitle)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\"\n  }, user ? /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user\",\n    onClick: logout\n  }, user.username, \" \\uD83D\\uDEAA\"), /*#__PURE__*/React.createElement(TaskForm, null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter\"\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setHideCompleted(!hideCompleted)\n  }, hideCompleted ? 'Show All' : 'Hide Completed')), isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"loading\"\n  }, \"loading...\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"tasks\"\n  }, tasks.map(task => /*#__PURE__*/React.createElement(Task, {\n    key: task._id,\n    task: task,\n    onCheckboxClick: toggleChecked,\n    onDeleteClick: deleteTask\n  })))) : /*#__PURE__*/React.createElement(LoginForm, null)));\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"LoginForm.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// imports/ui/LoginForm.js                                                                                    //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nlet _extends;\n\nmodule.link(\"@babel/runtime/helpers/extends\", {\n  default(v) {\n    _extends = v;\n  }\n\n}, 0);\nmodule.export({\n  LoginForm: () => LoginForm\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet React, useState;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useState(v) {\n    useState = v;\n  }\n\n}, 1);\nlet LOGIN_BUTTON, testProp;\nmodule.link(\"../testIds\", {\n  LOGIN_BUTTON(v) {\n    LOGIN_BUTTON = v;\n  },\n\n  testProp(v) {\n    testProp = v;\n  }\n\n}, 2);\n\nconst LoginForm = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const submit = e => {\n    e.preventDefault();\n    Meteor.loginWithPassword(username, password);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submit,\n    className: \"login-form\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"username\"\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Username\",\n    name: \"username\",\n    required: true,\n    onChange: e => setUsername(e.target.value)\n  })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\"\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    required: true,\n    onChange: e => setPassword(e.target.value)\n  })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"button\", _extends({\n    type: \"submit\"\n  }, testProp(LOGIN_BUTTON)), \"Log In\")));\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Task.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// imports/ui/Task.js                                                                                         //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nmodule.export({\n  Task: () => Task\n});\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\n\nconst Task = (_ref) => {\n  let {\n    task,\n    onCheckboxClick,\n    onDeleteClick\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: !!task.isChecked,\n    onClick: () => onCheckboxClick(task),\n    readOnly: true\n  }), /*#__PURE__*/React.createElement(\"span\", null, task.text), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => onDeleteClick(task)\n  }, \"\\xD7\"));\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"TaskForm.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// imports/ui/TaskForm.js                                                                                     //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nmodule.export({\n  TaskForm: () => TaskForm\n});\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet React, useState;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  },\n\n  useState(v) {\n    useState = v;\n  }\n\n}, 1);\n\nconst TaskForm = () => {\n  const [text, setText] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!text) return;\n    Meteor.call('tasks.insert', text);\n    setText('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"task-form\",\n    onSubmit: handleSubmit\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Type to add new tasks\",\n    value: text,\n    onChange: e => setText(e.target.value)\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\"\n  }, \"Add Task\"));\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"testIds.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// imports/testIds.js                                                                                         //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nmodule.export({\n  LOGIN_BUTTON: () => LOGIN_BUTTON,\n  testProp: () => testProp\n});\nconst LOGIN_BUTTON = 'LOGIN_BUTTON';\n\nconst testProp = id => ({\n  'data-test-id': id\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"client\":{\"main.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// client/main.js                                                                                             //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nlet React;\nmodule.link(\"react\", {\n  default(v) {\n    React = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet render;\nmodule.link(\"react-dom\", {\n  render(v) {\n    render = v;\n  }\n\n}, 2);\nlet App;\nmodule.link(\"/imports/ui/App\", {\n  App(v) {\n    App = v;\n  }\n\n}, 3);\nMeteor.startup(() => {\n  render( /*#__PURE__*/React.createElement(App, null), document.getElementById('react-target'));\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".ts\",\n    \".mjs\",\n    \".css\"\n  ]\n});\n\nvar exports = require(\"/client/main.js\");","hash":"11b51f4434d57e76e44212ff663954528c261bed","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/db/TasksCollection.js","imports/ui/App.js","imports/ui/LoginForm.js","imports/ui/Task.js","imports/ui/TaskForm.js","imports/testIds.js","client/main.js"],"names":["module","export","TasksCollection","Mongo","link","v","Collection","_objectSpread","default","App","Meteor","React","useState","Fragment","useTracker","Task","TaskForm","LoginForm","toggleChecked","_id","isChecked","call","deleteTask","user","hideCompleted","setHideCompleted","hideCompletedFilter","$ne","userFilter","userId","pendingOnlyFilter","tasks","pendingTasksCount","isLoading","noDataAvailable","handler","subscribe","ready","find","sort","createdAt","fetch","count","pendingTasksTitle","logout","username","map","task","_extends","LOGIN_BUTTON","testProp","setUsername","password","setPassword","submit","e","preventDefault","loginWithPassword","target","value","onCheckboxClick","onDeleteClick","text","setText","handleSubmit","id","render","startup","document","getElementById"],"mappings":";;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,iBAAe,EAAC,MAAIA;AAArB,CAAd;AAAqD,IAAIC,KAAJ;AAAUH,MAAM,CAACI,IAAP,CAAY,cAAZ,EAA2B;AAACD,OAAK,CAACE,CAAD,EAAG;AAACF,SAAK,GAACE,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAExD,MAAMH,eAAe,GAAG,IAAIC,KAAK,CAACG,UAAV,CAAqB,OAArB,CAAxB,C;;;;;;;;;;;ACFP,IAAIC,aAAJ;;AAAkBP,MAAM,CAACI,IAAP,CAAY,sCAAZ,EAAmD;AAACI,SAAO,CAACH,CAAD,EAAG;AAACE,iBAAa,GAACF,CAAd;AAAgB;;AAA5B,CAAnD,EAAiF,CAAjF;AAAlBL,MAAM,CAACC,MAAP,CAAc;AAACQ,KAAG,EAAC,MAAIA;AAAT,CAAd;AAA6B,IAAIC,MAAJ;AAAWV,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACM,QAAM,CAACL,CAAD,EAAG;AAACK,UAAM,GAACL,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIM,KAAJ,EAAUC,QAAV,EAAmBC,QAAnB;AAA4Bb,MAAM,CAACI,IAAP,CAAY,OAAZ,EAAoB;AAACI,SAAO,CAACH,CAAD,EAAG;AAACM,SAAK,GAACN,CAAN;AAAQ,GAApB;;AAAqBO,UAAQ,CAACP,CAAD,EAAG;AAACO,YAAQ,GAACP,CAAT;AAAW,GAA5C;;AAA6CQ,UAAQ,CAACR,CAAD,EAAG;AAACQ,YAAQ,GAACR,CAAT;AAAW;;AAApE,CAApB,EAA0F,CAA1F;AAA6F,IAAIS,UAAJ;AAAed,MAAM,CAACI,IAAP,CAAY,0BAAZ,EAAuC;AAACU,YAAU,CAACT,CAAD,EAAG;AAACS,cAAU,GAACT,CAAX;AAAa;;AAA5B,CAAvC,EAAqE,CAArE;AAAwE,IAAIH,eAAJ;AAAoBF,MAAM,CAACI,IAAP,CAAY,6BAAZ,EAA0C;AAACF,iBAAe,CAACG,CAAD,EAAG;AAACH,mBAAe,GAACG,CAAhB;AAAkB;;AAAtC,CAA1C,EAAkF,CAAlF;AAAqF,IAAIU,IAAJ;AAASf,MAAM,CAACI,IAAP,CAAY,QAAZ,EAAqB;AAACW,MAAI,CAACV,CAAD,EAAG;AAACU,QAAI,GAACV,CAAL;AAAO;;AAAhB,CAArB,EAAuC,CAAvC;AAA0C,IAAIW,QAAJ;AAAahB,MAAM,CAACI,IAAP,CAAY,YAAZ,EAAyB;AAACY,UAAQ,CAACX,CAAD,EAAG;AAACW,YAAQ,GAACX,CAAT;AAAW;;AAAxB,CAAzB,EAAmD,CAAnD;AAAsD,IAAIY,SAAJ;AAAcjB,MAAM,CAACI,IAAP,CAAY,aAAZ,EAA0B;AAACa,WAAS,CAACZ,CAAD,EAAG;AAACY,aAAS,GAACZ,CAAV;AAAY;;AAA1B,CAA1B,EAAsD,CAAtD;;AAQ1hB,MAAMa,aAAa,GAAG;AAAA,MAAC;AAAEC,OAAF;AAAOC;AAAP,GAAD;AAAA,SACpBV,MAAM,CAACW,IAAP,CAAY,oBAAZ,EAAkCF,GAAlC,EAAuC,CAACC,SAAxC,CADoB;AAAA,CAAtB;;AAGA,MAAME,UAAU,GAAG;AAAA,MAAC;AAAEH;AAAF,GAAD;AAAA,SAAaT,MAAM,CAACW,IAAP,CAAY,cAAZ,EAA4BF,GAA5B,CAAb;AAAA,CAAnB;;AAEO,MAAMV,GAAG,GAAG,MAAM;AACvB,QAAMc,IAAI,GAAGT,UAAU,CAAC,MAAMJ,MAAM,CAACa,IAAP,EAAP,CAAvB;AAEA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAMc,mBAAmB,GAAG;AAAEN,aAAS,EAAE;AAAEO,SAAG,EAAE;AAAP;AAAb,GAA5B;AAEA,QAAMC,UAAU,GAAGL,IAAI,GAAG;AAAEM,UAAM,EAAEN,IAAI,CAACJ;AAAf,GAAH,GAA0B,EAAjD;;AAEA,QAAMW,iBAAiB,mCAAQJ,mBAAR,GAAgCE,UAAhC,CAAvB;;AAEA,QAAM;AAAEG,SAAF;AAASC,qBAAT;AAA4BC;AAA5B,MAA0CnB,UAAU,CAAC,MAAM;AAC/D,UAAMoB,eAAe,GAAG;AAAEH,WAAK,EAAE,EAAT;AAAaC,uBAAiB,EAAE;AAAhC,KAAxB;;AACA,QAAI,CAACtB,MAAM,CAACa,IAAP,EAAL,EAAoB;AAClB,aAAOW,eAAP;AACD;;AACD,UAAMC,OAAO,GAAGzB,MAAM,CAAC0B,SAAP,CAAiB,OAAjB,CAAhB;;AAEA,QAAI,CAACD,OAAO,CAACE,KAAR,EAAL,EAAsB;AACpB,6CAAYH,eAAZ;AAA6BD,iBAAS,EAAE;AAAxC;AACD;;AAED,UAAMF,KAAK,GAAG7B,eAAe,CAACoC,IAAhB,CACZd,aAAa,GAAGM,iBAAH,GAAuBF,UADxB,EAEZ;AACEW,UAAI,EAAE;AAAEC,iBAAS,EAAE,CAAC;AAAd;AADR,KAFY,EAKZC,KALY,EAAd;AAMA,UAAMT,iBAAiB,GAAG9B,eAAe,CAACoC,IAAhB,CAAqBR,iBAArB,EAAwCY,KAAxC,EAA1B;AAEA,WAAO;AAAEX,WAAF;AAASC;AAAT,KAAP;AACD,GApByD,CAA1D;AAsBA,QAAMW,iBAAiB,aACrBX,iBAAiB,eAAQA,iBAAR,SAA+B,EAD3B,CAAvB;;AAIA,QAAMY,MAAM,GAAG,MAAMlC,MAAM,CAACkC,MAAP,EAArB;;AAEA,sBACE;AAAK,aAAS,EAAC;AAAf,kBACE,iDACE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAK,aAAS,EAAC;AAAf,kBACE,iEAEGD,iBAFH,CADF,CADF,CADF,CADF,eAYE;AAAK,aAAS,EAAC;AAAf,KACGpB,IAAI,gBACH,oBAAC,QAAD,qBACE;AAAK,aAAS,EAAC,MAAf;AAAsB,WAAO,EAAEqB;AAA/B,KACGrB,IAAI,CAACsB,QADR,kBADF,eAKE,oBAAC,QAAD,OALF,eAOE;AAAK,aAAS,EAAC;AAAf,kBACE;AAAQ,WAAO,EAAE,MAAMpB,gBAAgB,CAAC,CAACD,aAAF;AAAvC,KACGA,aAAa,GAAG,UAAH,GAAgB,gBADhC,CADF,CAPF,EAaGS,SAAS,iBAAI;AAAK,aAAS,EAAC;AAAf,kBAbhB,eAeE;AAAI,aAAS,EAAC;AAAd,KACGF,KAAK,CAACe,GAAN,CAAUC,IAAI,iBACb,oBAAC,IAAD;AACE,OAAG,EAAEA,IAAI,CAAC5B,GADZ;AAEE,QAAI,EAAE4B,IAFR;AAGE,mBAAe,EAAE7B,aAHnB;AAIE,iBAAa,EAAEI;AAJjB,IADD,CADH,CAfF,CADG,gBA4BH,oBAAC,SAAD,OA7BJ,CAZF,CADF;AA+CD,CAtFM,C;;;;;;;;;;;ACbP,IAAI0B,QAAJ;;AAAahD,MAAM,CAACI,IAAP,CAAY,gCAAZ,EAA6C;AAACI,SAAO,CAACH,CAAD,EAAG;AAAC2C,YAAQ,GAAC3C,CAAT;AAAW;;AAAvB,CAA7C,EAAsE,CAAtE;AAAbL,MAAM,CAACC,MAAP,CAAc;AAACgB,WAAS,EAAC,MAAIA;AAAf,CAAd;AAAyC,IAAIP,MAAJ;AAAWV,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACM,QAAM,CAACL,CAAD,EAAG;AAACK,UAAM,GAACL,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIM,KAAJ,EAAUC,QAAV;AAAmBZ,MAAM,CAACI,IAAP,CAAY,OAAZ,EAAoB;AAACI,SAAO,CAACH,CAAD,EAAG;AAACM,SAAK,GAACN,CAAN;AAAQ,GAApB;;AAAqBO,UAAQ,CAACP,CAAD,EAAG;AAACO,YAAQ,GAACP,CAAT;AAAW;;AAA5C,CAApB,EAAkE,CAAlE;AAAqE,IAAI4C,YAAJ,EAAiBC,QAAjB;AAA0BlD,MAAM,CAACI,IAAP,CAAY,YAAZ,EAAyB;AAAC6C,cAAY,CAAC5C,CAAD,EAAG;AAAC4C,gBAAY,GAAC5C,CAAb;AAAe,GAAhC;;AAAiC6C,UAAQ,CAAC7C,CAAD,EAAG;AAAC6C,YAAQ,GAAC7C,CAAT;AAAW;;AAAxD,CAAzB,EAAmF,CAAnF;;AAIpN,MAAMY,SAAS,GAAG,MAAM;AAC7B,QAAM,CAAC4B,QAAD,EAAWM,WAAX,IAA0BvC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACwC,QAAD,EAAWC,WAAX,IAA0BzC,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAM0C,MAAM,GAAIC,CAAD,IAAO;AACpBA,KAAC,CAACC,cAAF;AAEA9C,UAAM,CAAC+C,iBAAP,CAAyBZ,QAAzB,EAAmCO,QAAnC;AACD,GAJD;;AAMA,sBACE;AAAM,YAAQ,EAAEE,MAAhB;AAAwB,aAAS,EAAC;AAAlC,kBACE,8CACE;AAAO,WAAO,EAAC;AAAf,gBADF,eAEE;AACE,QAAI,EAAC,MADP;AAEE,eAAW,EAAC,UAFd;AAGE,QAAI,EAAC,UAHP;AAIE,YAAQ,MAJV;AAKE,YAAQ,EAAGC,CAAD,IAAOJ,WAAW,CAACI,CAAC,CAACG,MAAF,CAASC,KAAV;AAL9B,IAFF,CADF,eAYE,8CACE;AAAO,WAAO,EAAC;AAAf,gBADF,eAGE;AACE,QAAI,EAAC,UADP;AAEE,eAAW,EAAC,UAFd;AAGE,QAAI,EAAC,UAHP;AAIE,YAAQ,MAJV;AAKE,YAAQ,EAAGJ,CAAD,IAAOF,WAAW,CAACE,CAAC,CAACG,MAAF,CAASC,KAAV;AAL9B,IAHF,CAZF,eAuBE,8CACE;AAAQ,QAAI,EAAC;AAAb,KAA0BT,QAAQ,CAACD,YAAD,CAAlC,YADF,CAvBF,CADF;AA+BD,CAzCM,C;;;;;;;;;;;ACJPjD,MAAM,CAACC,MAAP,CAAc;AAACc,MAAI,EAAC,MAAIA;AAAV,CAAd;AAA+B,IAAIJ,KAAJ;AAAUX,MAAM,CAACI,IAAP,CAAY,OAAZ,EAAoB;AAACI,SAAO,CAACH,CAAD,EAAG;AAACM,SAAK,GAACN,CAAN;AAAQ;;AAApB,CAApB,EAA0C,CAA1C;;AAElC,MAAMU,IAAI,GAAG,UAA8C;AAAA,MAA7C;AAAEgC,QAAF;AAAQa,mBAAR;AAAyBC;AAAzB,GAA6C;AAChE,sBACE,6CACE;AACE,QAAI,EAAC,UADP;AAEE,WAAO,EAAE,CAAC,CAACd,IAAI,CAAC3B,SAFlB;AAGE,WAAO,EAAE,MAAMwC,eAAe,CAACb,IAAD,CAHhC;AAIE,YAAQ;AAJV,IADF,eAOE,kCAAOA,IAAI,CAACe,IAAZ,CAPF,eAQE;AAAQ,WAAO,EAAE,MAAMD,aAAa,CAACd,IAAD;AAApC,YARF,CADF;AAYD,CAbM,C;;;;;;;;;;;ACFP/C,MAAM,CAACC,MAAP,CAAc;AAACe,UAAQ,EAAC,MAAIA;AAAd,CAAd;AAAuC,IAAIN,MAAJ;AAAWV,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACM,QAAM,CAACL,CAAD,EAAG;AAACK,UAAM,GAACL,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIM,KAAJ,EAAUC,QAAV;AAAmBZ,MAAM,CAACI,IAAP,CAAY,OAAZ,EAAoB;AAACI,SAAO,CAACH,CAAD,EAAG;AAACM,SAAK,GAACN,CAAN;AAAQ,GAApB;;AAAqBO,UAAQ,CAACP,CAAD,EAAG;AAACO,YAAQ,GAACP,CAAT;AAAW;;AAA5C,CAApB,EAAkE,CAAlE;;AAGnH,MAAMW,QAAQ,GAAG,MAAM;AAC5B,QAAM,CAAC8C,IAAD,EAAOC,OAAP,IAAkBnD,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMoD,YAAY,GAAGT,CAAC,IAAI;AACxBA,KAAC,CAACC,cAAF;AAEA,QAAI,CAACM,IAAL,EAAW;AAEXpD,UAAM,CAACW,IAAP,CAAY,cAAZ,EAA4ByC,IAA5B;AAEAC,WAAO,CAAC,EAAD,CAAP;AACD,GARD;;AAUA,sBACE;AAAM,aAAS,EAAC,WAAhB;AAA4B,YAAQ,EAAEC;AAAtC,kBACE;AACE,QAAI,EAAC,MADP;AAEE,eAAW,EAAC,uBAFd;AAGE,SAAK,EAAEF,IAHT;AAIE,YAAQ,EAAEP,CAAC,IAAIQ,OAAO,CAACR,CAAC,CAACG,MAAF,CAASC,KAAV;AAJxB,IADF,eAQE;AAAQ,QAAI,EAAC;AAAb,gBARF,CADF;AAYD,CAzBM,C;;;;;;;;;;;ACHP3D,MAAM,CAACC,MAAP,CAAc;AAACgD,cAAY,EAAC,MAAIA,YAAlB;AAA+BC,UAAQ,EAAC,MAAIA;AAA5C,CAAd;AAAO,MAAMD,YAAY,GAAG,cAArB;;AAGA,MAAMC,QAAQ,GAAIe,EAAD,KAAS;AAAE,kBAAgBA;AAAlB,CAAT,CAAjB,C;;;;;;;;;;;ACHP,IAAItD,KAAJ;AAAUX,MAAM,CAACI,IAAP,CAAY,OAAZ,EAAoB;AAACI,SAAO,CAACH,CAAD,EAAG;AAACM,SAAK,GAACN,CAAN;AAAQ;;AAApB,CAApB,EAA0C,CAA1C;AAA6C,IAAIK,MAAJ;AAAWV,MAAM,CAACI,IAAP,CAAY,eAAZ,EAA4B;AAACM,QAAM,CAACL,CAAD,EAAG;AAACK,UAAM,GAACL,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAI6D,MAAJ;AAAWlE,MAAM,CAACI,IAAP,CAAY,WAAZ,EAAwB;AAAC8D,QAAM,CAAC7D,CAAD,EAAG;AAAC6D,UAAM,GAAC7D,CAAP;AAAS;;AAApB,CAAxB,EAA8C,CAA9C;AAAiD,IAAII,GAAJ;AAAQT,MAAM,CAACI,IAAP,CAAY,iBAAZ,EAA8B;AAACK,KAAG,CAACJ,CAAD,EAAG;AAACI,OAAG,GAACJ,CAAJ;AAAM;;AAAd,CAA9B,EAA8C,CAA9C;AAK3LK,MAAM,CAACyD,OAAP,CAAe,MAAM;AACnBD,QAAM,eAAC,oBAAC,GAAD,OAAD,EAAUE,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAV,CAAN;AACD,CAFD,E","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nexport const TasksCollection = new Mongo.Collection('tasks');\n","import { Meteor } from 'meteor/meteor';\nimport React, { useState, Fragment } from 'react';\nimport { useTracker } from 'meteor/react-meteor-data';\nimport { TasksCollection } from '/imports/db/TasksCollection';\nimport { Task } from './Task';\nimport { TaskForm } from './TaskForm';\nimport { LoginForm } from './LoginForm';\n\nconst toggleChecked = ({ _id, isChecked }) =>\n  Meteor.call('tasks.setIsChecked', _id, !isChecked);\n\nconst deleteTask = ({ _id }) => Meteor.call('tasks.remove', _id);\n\nexport const App = () => {\n  const user = useTracker(() => Meteor.user());\n\n  const [hideCompleted, setHideCompleted] = useState(false);\n\n  const hideCompletedFilter = { isChecked: { $ne: true } };\n\n  const userFilter = user ? { userId: user._id } : {};\n\n  const pendingOnlyFilter = { ...hideCompletedFilter, ...userFilter };\n\n  const { tasks, pendingTasksCount, isLoading } = useTracker(() => {\n    const noDataAvailable = { tasks: [], pendingTasksCount: 0 };\n    if (!Meteor.user()) {\n      return noDataAvailable;\n    }\n    const handler = Meteor.subscribe('tasks');\n\n    if (!handler.ready()) {\n      return { ...noDataAvailable, isLoading: true };\n    }\n\n    const tasks = TasksCollection.find(\n      hideCompleted ? pendingOnlyFilter : userFilter,\n      {\n        sort: { createdAt: -1 },\n      }\n    ).fetch();\n    const pendingTasksCount = TasksCollection.find(pendingOnlyFilter).count();\n\n    return { tasks, pendingTasksCount };\n  });\n\n  const pendingTasksTitle = `${\n    pendingTasksCount ? ` (${pendingTasksCount})` : ''\n  }`;\n\n  const logout = () => Meteor.logout();\n\n  return (\n    <div className=\"app\">\n      <header>\n        <div className=\"app-bar\">\n          <div className=\"app-header\">\n            <h1>\n              📝️ To Do List\n              {pendingTasksTitle}\n            </h1>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"main\">\n        {user ? (\n          <Fragment>\n            <div className=\"user\" onClick={logout}>\n              {user.username} 🚪\n            </div>\n\n            <TaskForm />\n\n            <div className=\"filter\">\n              <button onClick={() => setHideCompleted(!hideCompleted)}>\n                {hideCompleted ? 'Show All' : 'Hide Completed'}\n              </button>\n            </div>\n\n            {isLoading && <div className=\"loading\">loading...</div>}\n\n            <ul className=\"tasks\">\n              {tasks.map(task => (\n                <Task\n                  key={task._id}\n                  task={task}\n                  onCheckboxClick={toggleChecked}\n                  onDeleteClick={deleteTask}\n                />\n              ))}\n            </ul>\n          </Fragment>\n        ) : (\n          <LoginForm />\n        )}\n      </div>\n    </div>\n  );\n};\n","import { Meteor } from 'meteor/meteor';\nimport React, { useState } from 'react';\nimport { LOGIN_BUTTON, testProp } from '../testIds';\n\nexport const LoginForm = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const submit = (e) => {\n    e.preventDefault();\n\n    Meteor.loginWithPassword(username, password);\n  };\n\n  return (\n    <form onSubmit={submit} className=\"login-form\">\n      <div>\n        <label htmlFor=\"username\">Username</label>\n        <input\n          type=\"text\"\n          placeholder=\"Username\"\n          name=\"username\"\n          required\n          onChange={(e) => setUsername(e.target.value)}\n        />\n      </div>\n\n      <div>\n        <label htmlFor=\"password\">Password</label>\n\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          required\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n      <div>\n        <button type=\"submit\" {...testProp(LOGIN_BUTTON)}>\n          Log In\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React from 'react';\n\nexport const Task = ({ task, onCheckboxClick, onDeleteClick }) => {\n  return (\n    <li>\n      <input\n        type=\"checkbox\"\n        checked={!!task.isChecked}\n        onClick={() => onCheckboxClick(task)}\n        readOnly\n      />\n      <span>{task.text}</span>\n      <button onClick={() => onDeleteClick(task)}>&times;</button>\n    </li>\n  );\n};\n","import { Meteor } from 'meteor/meteor';\nimport React, { useState } from 'react';\n\nexport const TaskForm = () => {\n  const [text, setText] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!text) return;\n\n    Meteor.call('tasks.insert', text);\n\n    setText('');\n  };\n\n  return (\n    <form className=\"task-form\" onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        placeholder=\"Type to add new tasks\"\n        value={text}\n        onChange={e => setText(e.target.value)}\n      />\n\n      <button type=\"submit\">Add Task</button>\n    </form>\n  );\n};\n","export const LOGIN_BUTTON = 'LOGIN_BUTTON';\n\n// Helper function to select elements.\nexport const testProp = (id) => ({ 'data-test-id': id });\n","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\nimport { App } from '/imports/ui/App';\n\nMeteor.startup(() => {\n  render(<App />, document.getElementById('react-target'));\n});\n"]}}]