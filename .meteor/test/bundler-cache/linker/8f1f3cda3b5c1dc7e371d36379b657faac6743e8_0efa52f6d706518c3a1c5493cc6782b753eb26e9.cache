[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nECMAScript = Package.ecmascript.ECMAScript;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nmeteorInstall = Package.modules.meteorInstall;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"tasksMethods.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// imports/api/tasksMethods.js                                                                  //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 0);\nlet TasksCollection;\nmodule.link(\"/imports/db/TasksCollection\", {\n  TasksCollection(v) {\n    TasksCollection = v;\n  }\n\n}, 1);\n\nfunction cov_1g7q374t3p() {\n  var path = \"/Users/idrismahjoubi/cypress-meteor-react/imports/api/tasksMethods.js\";\n  var hash = \"d466dfd4f2ae811606f078ec1a519cecbbdffd64\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/Users/idrismahjoubi/cypress-meteor-react/imports/api/tasksMethods.js\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 4,\n          column: 0\n        },\n        end: {\n          line: 55,\n          column: 3\n        }\n      },\n      \"1\": {\n        start: {\n          line: 6,\n          column: 4\n        },\n        end: {\n          line: 6,\n          column: 24\n        }\n      },\n      \"2\": {\n        start: {\n          line: 8,\n          column: 4\n        },\n        end: {\n          line: 10,\n          column: 5\n        }\n      },\n      \"3\": {\n        start: {\n          line: 9,\n          column: 6\n        },\n        end: {\n          line: 9,\n          column: 48\n        }\n      },\n      \"4\": {\n        start: {\n          line: 12,\n          column: 4\n        },\n        end: {\n          line: 16,\n          column: 7\n        }\n      },\n      \"5\": {\n        start: {\n          line: 20,\n          column: 4\n        },\n        end: {\n          line: 20,\n          column: 26\n        }\n      },\n      \"6\": {\n        start: {\n          line: 22,\n          column: 4\n        },\n        end: {\n          line: 24,\n          column: 5\n        }\n      },\n      \"7\": {\n        start: {\n          line: 23,\n          column: 6\n        },\n        end: {\n          line: 23,\n          column: 48\n        }\n      },\n      \"8\": {\n        start: {\n          line: 26,\n          column: 17\n        },\n        end: {\n          line: 26,\n          column: 78\n        }\n      },\n      \"9\": {\n        start: {\n          line: 28,\n          column: 4\n        },\n        end: {\n          line: 30,\n          column: 5\n        }\n      },\n      \"10\": {\n        start: {\n          line: 29,\n          column: 6\n        },\n        end: {\n          line: 29,\n          column: 47\n        }\n      },\n      \"11\": {\n        start: {\n          line: 32,\n          column: 4\n        },\n        end: {\n          line: 32,\n          column: 35\n        }\n      },\n      \"12\": {\n        start: {\n          line: 36,\n          column: 4\n        },\n        end: {\n          line: 36,\n          column: 26\n        }\n      },\n      \"13\": {\n        start: {\n          line: 37,\n          column: 4\n        },\n        end: {\n          line: 37,\n          column: 30\n        }\n      },\n      \"14\": {\n        start: {\n          line: 39,\n          column: 4\n        },\n        end: {\n          line: 41,\n          column: 5\n        }\n      },\n      \"15\": {\n        start: {\n          line: 40,\n          column: 6\n        },\n        end: {\n          line: 40,\n          column: 48\n        }\n      },\n      \"16\": {\n        start: {\n          line: 43,\n          column: 17\n        },\n        end: {\n          line: 43,\n          column: 78\n        }\n      },\n      \"17\": {\n        start: {\n          line: 45,\n          column: 4\n        },\n        end: {\n          line: 47,\n          column: 5\n        }\n      },\n      \"18\": {\n        start: {\n          line: 46,\n          column: 6\n        },\n        end: {\n          line: 46,\n          column: 47\n        }\n      },\n      \"19\": {\n        start: {\n          line: 49,\n          column: 4\n        },\n        end: {\n          line: 53,\n          column: 7\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 5,\n            column: 2\n          },\n          end: {\n            line: 5,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 5,\n            column: 23\n          },\n          end: {\n            line: 17,\n            column: 3\n          }\n        },\n        line: 5\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 19,\n            column: 2\n          },\n          end: {\n            line: 19,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 19,\n            column: 25\n          },\n          end: {\n            line: 33,\n            column: 3\n          }\n        },\n        line: 19\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 35,\n            column: 2\n          },\n          end: {\n            line: 35,\n            column: 3\n          }\n        },\n        loc: {\n          start: {\n            line: 35,\n            column: 42\n          },\n          end: {\n            line: 54,\n            column: 3\n          }\n        },\n        line: 35\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 8,\n            column: 4\n          },\n          end: {\n            line: 10,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 8,\n            column: 4\n          },\n          end: {\n            line: 10,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 8,\n            column: 4\n          },\n          end: {\n            line: 10,\n            column: 5\n          }\n        }],\n        line: 8\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 22,\n            column: 4\n          },\n          end: {\n            line: 24,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 22,\n            column: 4\n          },\n          end: {\n            line: 24,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 22,\n            column: 4\n          },\n          end: {\n            line: 24,\n            column: 5\n          }\n        }],\n        line: 22\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 28,\n            column: 4\n          },\n          end: {\n            line: 30,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 28,\n            column: 4\n          },\n          end: {\n            line: 30,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 28,\n            column: 4\n          },\n          end: {\n            line: 30,\n            column: 5\n          }\n        }],\n        line: 28\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 39,\n            column: 4\n          },\n          end: {\n            line: 41,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 39,\n            column: 4\n          },\n          end: {\n            line: 41,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 39,\n            column: 4\n          },\n          end: {\n            line: 41,\n            column: 5\n          }\n        }],\n        line: 39\n      },\n      \"4\": {\n        loc: {\n          start: {\n            line: 45,\n            column: 4\n          },\n          end: {\n            line: 47,\n            column: 5\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 45,\n            column: 4\n          },\n          end: {\n            line: 47,\n            column: 5\n          }\n        }, {\n          start: {\n            line: 45,\n            column: 4\n          },\n          end: {\n            line: 47,\n            column: 5\n          }\n        }],\n        line: 45\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0,\n      \"11\": 0,\n      \"12\": 0,\n      \"13\": 0,\n      \"14\": 0,\n      \"15\": 0,\n      \"16\": 0,\n      \"17\": 0,\n      \"18\": 0,\n      \"19\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0],\n      \"4\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"d466dfd4f2ae811606f078ec1a519cecbbdffd64\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_1g7q374t3p = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_1g7q374t3p();\ncov_1g7q374t3p().s[0]++;\nMeteor.methods({\n  'tasks.insert'(text) {\n    cov_1g7q374t3p().f[0]++;\n    cov_1g7q374t3p().s[1]++;\n    check(text, String);\n    cov_1g7q374t3p().s[2]++;\n\n    if (!this.userId) {\n      cov_1g7q374t3p().b[0][0]++;\n      cov_1g7q374t3p().s[3]++;\n      throw new Meteor.Error('Not authorized.');\n    } else {\n      cov_1g7q374t3p().b[0][1]++;\n    }\n\n    cov_1g7q374t3p().s[4]++;\n    TasksCollection.insert({\n      text,\n      createdAt: new Date(),\n      userId: this.userId\n    });\n  },\n\n  'tasks.remove'(taskId) {\n    cov_1g7q374t3p().f[1]++;\n    cov_1g7q374t3p().s[5]++;\n    check(taskId, String);\n    cov_1g7q374t3p().s[6]++;\n\n    if (!this.userId) {\n      cov_1g7q374t3p().b[1][0]++;\n      cov_1g7q374t3p().s[7]++;\n      throw new Meteor.Error('Not authorized.');\n    } else {\n      cov_1g7q374t3p().b[1][1]++;\n    }\n\n    const task = (cov_1g7q374t3p().s[8]++, TasksCollection.findOne({\n      _id: taskId,\n      userId: this.userId\n    }));\n    cov_1g7q374t3p().s[9]++;\n\n    if (!task) {\n      cov_1g7q374t3p().b[2][0]++;\n      cov_1g7q374t3p().s[10]++;\n      throw new Meteor.Error('Access denied.');\n    } else {\n      cov_1g7q374t3p().b[2][1]++;\n    }\n\n    cov_1g7q374t3p().s[11]++;\n    TasksCollection.remove(taskId);\n  },\n\n  'tasks.setIsChecked'(taskId, isChecked) {\n    cov_1g7q374t3p().f[2]++;\n    cov_1g7q374t3p().s[12]++;\n    check(taskId, String);\n    cov_1g7q374t3p().s[13]++;\n    check(isChecked, Boolean);\n    cov_1g7q374t3p().s[14]++;\n\n    if (!this.userId) {\n      cov_1g7q374t3p().b[3][0]++;\n      cov_1g7q374t3p().s[15]++;\n      throw new Meteor.Error('Not authorized.');\n    } else {\n      cov_1g7q374t3p().b[3][1]++;\n    }\n\n    const task = (cov_1g7q374t3p().s[16]++, TasksCollection.findOne({\n      _id: taskId,\n      userId: this.userId\n    }));\n    cov_1g7q374t3p().s[17]++;\n\n    if (!task) {\n      cov_1g7q374t3p().b[4][0]++;\n      cov_1g7q374t3p().s[18]++;\n      throw new Meteor.Error('Access denied.');\n    } else {\n      cov_1g7q374t3p().b[4][1]++;\n    }\n\n    cov_1g7q374t3p().s[19]++;\n    TasksCollection.update(taskId, {\n      $set: {\n        isChecked\n      }\n    });\n  }\n\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"tasksPublications.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// imports/api/tasksPublications.js                                                             //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet TasksCollection;\nmodule.link(\"/imports/db/TasksCollection\", {\n  TasksCollection(v) {\n    TasksCollection = v;\n  }\n\n}, 1);\n\nfunction cov_9aret2v5j() {\n  var path = \"/Users/idrismahjoubi/cypress-meteor-react/imports/api/tasksPublications.js\";\n  var hash = \"8a4c58a7d4357efc4aa54346f550e60e15593eec\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/Users/idrismahjoubi/cypress-meteor-react/imports/api/tasksPublications.js\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 4,\n          column: 0\n        },\n        end: {\n          line: 6,\n          column: 3\n        }\n      },\n      \"1\": {\n        start: {\n          line: 5,\n          column: 2\n        },\n        end: {\n          line: 5,\n          column: 55\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"publishTasks\",\n        decl: {\n          start: {\n            line: 4,\n            column: 33\n          },\n          end: {\n            line: 4,\n            column: 45\n          }\n        },\n        loc: {\n          start: {\n            line: 4,\n            column: 48\n          },\n          end: {\n            line: 6,\n            column: 1\n          }\n        },\n        line: 4\n      }\n    },\n    branchMap: {},\n    s: {\n      \"0\": 0,\n      \"1\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {},\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"8a4c58a7d4357efc4aa54346f550e60e15593eec\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_9aret2v5j = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_9aret2v5j();\ncov_9aret2v5j().s[0]++;\nMeteor.publish('tasks', function publishTasks() {\n  cov_9aret2v5j().f[0]++;\n  cov_9aret2v5j().s[1]++;\n  return TasksCollection.find({\n    userId: this.userId\n  });\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"db\":{\"TasksCollection.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// imports/db/TasksCollection.js                                                                //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nmodule.export({\n  TasksCollection: () => TasksCollection\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\n\nfunction cov_273dnovt6i() {\n  var path = \"/Users/idrismahjoubi/cypress-meteor-react/imports/db/TasksCollection.js\";\n  var hash = \"70d396568e30bd15b5efea1bf0b57db086140246\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/Users/idrismahjoubi/cypress-meteor-react/imports/db/TasksCollection.js\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 3,\n          column: 31\n        },\n        end: {\n          line: 3,\n          column: 60\n        }\n      }\n    },\n    fnMap: {},\n    branchMap: {},\n    s: {\n      \"0\": 0\n    },\n    f: {},\n    b: {},\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"70d396568e30bd15b5efea1bf0b57db086140246\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_273dnovt6i = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_273dnovt6i();\nconst TasksCollection = (cov_273dnovt6i().s[0]++, new Mongo.Collection('tasks'));\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"server\":{\"coverage.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// server/coverage.js                                                                           //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet WebApp;\nmodule.link(\"meteor/webapp\", {\n  WebApp(v) {\n    WebApp = v;\n  }\n\n}, 1);\n\nfunction cov_2gggx87ym3() {\n  var path = \"/Users/idrismahjoubi/cypress-meteor-react/server/coverage.js\";\n  var hash = \"d2c15fbad76f4151b6c4759b4ef5f26e04209a7e\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/Users/idrismahjoubi/cypress-meteor-react/server/coverage.js\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 5,\n          column: 25\n        },\n        end: {\n          line: 5,\n          column: 63\n        }\n      },\n      \"1\": {\n        start: {\n          line: 8,\n          column: 2\n        },\n        end: {\n          line: 9,\n          column: 29\n        }\n      },\n      \"2\": {\n        start: {\n          line: 14,\n          column: 23\n        },\n        end: {\n          line: 14,\n          column: 38\n        }\n      },\n      \"3\": {\n        start: {\n          line: 16,\n          column: 0\n        },\n        end: {\n          line: 22,\n          column: 1\n        }\n      },\n      \"4\": {\n        start: {\n          line: 17,\n          column: 2\n        },\n        end: {\n          line: 21,\n          column: 5\n        }\n      },\n      \"5\": {\n        start: {\n          line: 18,\n          column: 19\n        },\n        end: {\n          line: 18,\n          column: 52\n        }\n      },\n      \"6\": {\n        start: {\n          line: 19,\n          column: 4\n        },\n        end: {\n          line: 19,\n          column: 61\n        }\n      },\n      \"7\": {\n        start: {\n          line: 20,\n          column: 4\n        },\n        end: {\n          line: 20,\n          column: 36\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 17,\n            column: 45\n          },\n          end: {\n            line: 17,\n            column: 46\n          }\n        },\n        loc: {\n          start: {\n            line: 17,\n            column: 59\n          },\n          end: {\n            line: 21,\n            column: 3\n          }\n        },\n        line: 17\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 5,\n            column: 25\n          },\n          end: {\n            line: 5,\n            column: 63\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 5,\n            column: 25\n          },\n          end: {\n            line: 5,\n            column: 46\n          }\n        }, {\n          start: {\n            line: 5,\n            column: 50\n          },\n          end: {\n            line: 5,\n            column: 63\n          }\n        }],\n        line: 5\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 8,\n            column: 2\n          },\n          end: {\n            line: 9,\n            column: 29\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 8,\n            column: 3\n          },\n          end: {\n            line: 8,\n            column: 32\n          }\n        }, {\n          start: {\n            line: 8,\n            column: 36\n          },\n          end: {\n            line: 8,\n            column: 64\n          }\n        }, {\n          start: {\n            line: 9,\n            column: 2\n          },\n          end: {\n            line: 9,\n            column: 29\n          }\n        }],\n        line: 8\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 16,\n            column: 0\n          },\n          end: {\n            line: 22,\n            column: 1\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 16,\n            column: 0\n          },\n          end: {\n            line: 22,\n            column: 1\n          }\n        }, {\n          start: {\n            line: 16,\n            column: 0\n          },\n          end: {\n            line: 22,\n            column: 1\n          }\n        }],\n        line: 16\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 16,\n            column: 4\n          },\n          end: {\n            line: 16,\n            column: 32\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 16,\n            column: 4\n          },\n          end: {\n            line: 16,\n            column: 13\n          }\n        }, {\n          start: {\n            line: 16,\n            column: 17\n          },\n          end: {\n            line: 16,\n            column: 32\n          }\n        }],\n        line: 16\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"d2c15fbad76f4151b6c4759b4ef5f26e04209a7e\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_2gggx87ym3 = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_2gggx87ym3();\n// Check `BABEL_ENV` to check if we are running in test mode.\nconst babelEnvironment = (cov_2gggx87ym3().s[0]++, (cov_2gggx87ym3().b[0][0]++, process.env.BABEL_ENV) || (cov_2gggx87ym3().b[0][1]++, 'development')); // Detect if we are running in a test environment.\n\nconst isCypress = (cov_2gggx87ym3().s[1]++, (cov_2gggx87ym3().b[1][0]++, typeof window !== 'undefined') && (cov_2gggx87ym3().b[1][1]++, window.Cypress !== undefined) || (cov_2gggx87ym3().b[1][2]++, babelEnvironment === 'test')); // Expose a route so that Cypress can fetch the coverage report for the\n// server-side code. This route has to be configured in `cypress.json` in\n// `env.codeCoverage.url`.\n\nconst ROUTE_COVERAGE = (cov_2gggx87ym3().s[2]++, '/__coverage__');\ncov_2gggx87ym3().s[3]++;\n\nif ((cov_2gggx87ym3().b[3][0]++, isCypress) && (cov_2gggx87ym3().b[3][1]++, Meteor.isServer)) {\n  cov_2gggx87ym3().b[2][0]++;\n  cov_2gggx87ym3().s[4]++;\n  WebApp.connectHandlers.use(ROUTE_COVERAGE, (req, res) => {\n    cov_2gggx87ym3().f[0]++;\n    const result = (cov_2gggx87ym3().s[5]++, {\n      coverage: global.__coverage__\n    });\n    cov_2gggx87ym3().s[6]++;\n    res.writeHead(200, {\n      'Content-Type': 'application/json'\n    });\n    cov_2gggx87ym3().s[7]++;\n    res.end(JSON.stringify(result));\n  });\n} else {\n  cov_2gggx87ym3().b[2][1]++;\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// server/main.js                                                                               //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Accounts;\nmodule.link(\"meteor/accounts-base\", {\n  Accounts(v) {\n    Accounts = v;\n  }\n\n}, 1);\nlet TasksCollection;\nmodule.link(\"/imports/db/TasksCollection\", {\n  TasksCollection(v) {\n    TasksCollection = v;\n  }\n\n}, 2);\nmodule.link(\"/imports/api/tasksMethods\");\nmodule.link(\"/imports/api/tasksPublications\");\nmodule.link(\"./coverage\");\n\nfunction cov_19gjlkite6() {\n  var path = \"/Users/idrismahjoubi/cypress-meteor-react/server/main.js\";\n  var hash = \"a1d793f8ff5b1fe7244b71467fd40a43e97793ae\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/Users/idrismahjoubi/cypress-meteor-react/server/main.js\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 8,\n          column: 19\n        },\n        end: {\n          line: 13,\n          column: 4\n        }\n      },\n      \"1\": {\n        start: {\n          line: 9,\n          column: 2\n        },\n        end: {\n          line: 13,\n          column: 4\n        }\n      },\n      \"2\": {\n        start: {\n          line: 15,\n          column: 22\n        },\n        end: {\n          line: 15,\n          column: 33\n        }\n      },\n      \"3\": {\n        start: {\n          line: 16,\n          column: 22\n        },\n        end: {\n          line: 16,\n          column: 32\n        }\n      },\n      \"4\": {\n        start: {\n          line: 18,\n          column: 0\n        },\n        end: {\n          line: 39,\n          column: 3\n        }\n      },\n      \"5\": {\n        start: {\n          line: 19,\n          column: 2\n        },\n        end: {\n          line: 24,\n          column: 3\n        }\n      },\n      \"6\": {\n        start: {\n          line: 20,\n          column: 4\n        },\n        end: {\n          line: 23,\n          column: 7\n        }\n      },\n      \"7\": {\n        start: {\n          line: 26,\n          column: 15\n        },\n        end: {\n          line: 26,\n          column: 57\n        }\n      },\n      \"8\": {\n        start: {\n          line: 28,\n          column: 2\n        },\n        end: {\n          line: 38,\n          column: 3\n        }\n      },\n      \"9\": {\n        start: {\n          line: 29,\n          column: 4\n        },\n        end: {\n          line: 37,\n          column: 56\n        }\n      },\n      \"10\": {\n        start: {\n          line: 37,\n          column: 28\n        },\n        end: {\n          line: 37,\n          column: 54\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 8,\n            column: 19\n          },\n          end: {\n            line: 8,\n            column: 20\n          }\n        },\n        loc: {\n          start: {\n            line: 9,\n            column: 2\n          },\n          end: {\n            line: 13,\n            column: 4\n          }\n        },\n        line: 9\n      },\n      \"1\": {\n        name: \"(anonymous_1)\",\n        decl: {\n          start: {\n            line: 18,\n            column: 15\n          },\n          end: {\n            line: 18,\n            column: 16\n          }\n        },\n        loc: {\n          start: {\n            line: 18,\n            column: 21\n          },\n          end: {\n            line: 39,\n            column: 1\n          }\n        },\n        line: 18\n      },\n      \"2\": {\n        name: \"(anonymous_2)\",\n        decl: {\n          start: {\n            line: 37,\n            column: 14\n          },\n          end: {\n            line: 37,\n            column: 15\n          }\n        },\n        loc: {\n          start: {\n            line: 37,\n            column: 28\n          },\n          end: {\n            line: 37,\n            column: 54\n          }\n        },\n        line: 37\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 19,\n            column: 2\n          },\n          end: {\n            line: 24,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 19,\n            column: 2\n          },\n          end: {\n            line: 24,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 19,\n            column: 2\n          },\n          end: {\n            line: 24,\n            column: 3\n          }\n        }],\n        line: 19\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 28,\n            column: 2\n          },\n          end: {\n            line: 38,\n            column: 3\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 28,\n            column: 2\n          },\n          end: {\n            line: 38,\n            column: 3\n          }\n        }, {\n          start: {\n            line: 28,\n            column: 2\n          },\n          end: {\n            line: 38,\n            column: 3\n          }\n        }],\n        line: 28\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0\n    },\n    f: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"a1d793f8ff5b1fe7244b71467fd40a43e97793ae\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_19gjlkite6 = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_19gjlkite6();\ncov_19gjlkite6().s[0]++;\n\nconst insertTask = (taskText, user) => {\n  cov_19gjlkite6().f[0]++;\n  cov_19gjlkite6().s[1]++;\n  return TasksCollection.insert({\n    text: taskText,\n    userId: user._id,\n    createdAt: new Date()\n  });\n};\n\nconst SEED_USERNAME = (cov_19gjlkite6().s[2]++, 'usertimes');\nconst SEED_PASSWORD = (cov_19gjlkite6().s[3]++, 'password');\ncov_19gjlkite6().s[4]++;\nMeteor.startup(() => {\n  cov_19gjlkite6().f[1]++;\n  cov_19gjlkite6().s[5]++;\n\n  if (!Accounts.findUserByUsername(SEED_USERNAME)) {\n    cov_19gjlkite6().b[0][0]++;\n    cov_19gjlkite6().s[6]++;\n    Accounts.createUser({\n      username: SEED_USERNAME,\n      password: SEED_PASSWORD\n    });\n  } else {\n    cov_19gjlkite6().b[0][1]++;\n  }\n\n  const user = (cov_19gjlkite6().s[7]++, Accounts.findUserByUsername(SEED_USERNAME));\n  cov_19gjlkite6().s[8]++;\n\n  if (TasksCollection.find().count() === 0) {\n    cov_19gjlkite6().b[1][0]++;\n    cov_19gjlkite6().s[9]++;\n    ['First Task', 'Second Task', 'Third Task', 'Fourth Task', 'Fifth Task', 'Sixth Task', 'Seventh Task'].forEach(taskText => {\n      cov_19gjlkite6().f[2]++;\n      cov_19gjlkite6().s[10]++;\n      return insertTask(taskText, user);\n    });\n  } else {\n    cov_19gjlkite6().b[1][1]++;\n  }\n});\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".ts\",\n    \".mjs\"\n  ]\n});\n\nvar exports = require(\"/server/main.js\");","hash":"59b0af07491c7abba89a86b8ad512dee68b13a02","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/tasksMethods.js","imports/api/tasksPublications.js","imports/db/TasksCollection.js","server/coverage.js","server/main.js"],"names":["Meteor","check","TasksCollection","createdAt","userId","task","_id","$set","isChecked","Mongo","babelEnvironment","isCypress","window","ROUTE_COVERAGE","WebApp","result","coverage","global","__coverage__","res","JSON","insertTask","text","user","SEED_USERNAME","SEED_PASSWORD","Accounts","username","password","taskText"],"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","file":"/app.js","sourcesContent":["import { check } from 'meteor/check';\nimport { TasksCollection } from '/imports/db/TasksCollection';\n\nMeteor.methods({\n  'tasks.insert'(text) {\n    check(text, String);\n\n    if (!this.userId) {\n      throw new Meteor.Error('Not authorized.');\n    }\n\n    TasksCollection.insert({\n      text,\n      createdAt: new Date(),\n      userId: this.userId,\n    });\n  },\n\n  'tasks.remove'(taskId) {\n    check(taskId, String);\n\n    if (!this.userId) {\n      throw new Meteor.Error('Not authorized.');\n    }\n\n    const task = TasksCollection.findOne({ _id: taskId, userId: this.userId });\n\n    if (!task) {\n      throw new Meteor.Error('Access denied.');\n    }\n\n    TasksCollection.remove(taskId);\n  },\n\n  'tasks.setIsChecked'(taskId, isChecked) {\n    check(taskId, String);\n    check(isChecked, Boolean);\n\n    if (!this.userId) {\n      throw new Meteor.Error('Not authorized.');\n    }\n\n    const task = TasksCollection.findOne({ _id: taskId, userId: this.userId });\n\n    if (!task) {\n      throw new Meteor.Error('Access denied.');\n    }\n\n    TasksCollection.update(taskId, {\n      $set: {\n        isChecked,\n      },\n    });\n  },\n});\n","import { Meteor } from 'meteor/meteor';\nimport { TasksCollection } from '/imports/db/TasksCollection';\n\nMeteor.publish('tasks', function publishTasks() {\n  return TasksCollection.find({ userId: this.userId });\n});\n","import { Mongo } from 'meteor/mongo';\n\nexport const TasksCollection = new Mongo.Collection('tasks');\n","import { Meteor } from 'meteor/meteor';\nimport { WebApp } from 'meteor/webapp';\n\n// Check `BABEL_ENV` to check if we are running in test mode.\nconst babelEnvironment = process.env.BABEL_ENV || 'development';\n// Detect if we are running in a test environment.\nconst isCypress =\n  (typeof window !== 'undefined' && window.Cypress !== undefined) ||\n  babelEnvironment === 'test';\n\n// Expose a route so that Cypress can fetch the coverage report for the\n// server-side code. This route has to be configured in `cypress.json` in\n// `env.codeCoverage.url`.\nconst ROUTE_COVERAGE = '/__coverage__';\n\nif (isCypress && Meteor.isServer) {\n  WebApp.connectHandlers.use(ROUTE_COVERAGE, (req, res) => {\n    const result = { coverage: global.__coverage__ };\n    res.writeHead(200, {'Content-Type': 'application/json'});\n    res.end(JSON.stringify(result));\n  });\n}\n\n","import { Meteor } from 'meteor/meteor';\nimport { Accounts } from 'meteor/accounts-base';\nimport { TasksCollection } from '/imports/db/TasksCollection';\nimport '/imports/api/tasksMethods';\nimport '/imports/api/tasksPublications';\nimport './coverage';\n\nconst insertTask = (taskText, user) =>\n  TasksCollection.insert({\n    text: taskText,\n    userId: user._id,\n    createdAt: new Date(),\n  });\n\nconst SEED_USERNAME = 'usertimes';\nconst SEED_PASSWORD = 'password';\n\nMeteor.startup(() => {\n  if (!Accounts.findUserByUsername(SEED_USERNAME)) {\n    Accounts.createUser({\n      username: SEED_USERNAME,\n      password: SEED_PASSWORD,\n    });\n  }\n\n  const user = Accounts.findUserByUsername(SEED_USERNAME);\n\n  if (TasksCollection.find().count() === 0) {\n    [\n      'First Task',\n      'Second Task',\n      'Third Task',\n      'Fourth Task',\n      'Fifth Task',\n      'Sixth Task',\n      'Seventh Task',\n    ].forEach((taskText) => insertTask(taskText, user));\n  }\n});\n"]}}]