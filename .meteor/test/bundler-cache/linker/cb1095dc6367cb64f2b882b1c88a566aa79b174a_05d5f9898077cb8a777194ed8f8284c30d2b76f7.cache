[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar ECMAScript = Package.ecmascript.ECMAScript;\nvar Log = Package.logging.Log;\nvar _ = Package.underscore._;\nvar RoutePolicy = Package.routepolicy.RoutePolicy;\nvar Boilerplate = Package['boilerplate-generator'].Boilerplate;\nvar WebAppHashing = Package['webapp-hashing'].WebAppHashing;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar WebApp, WebAppInternals, main;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"webapp\":{\"webapp_server.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/webapp/webapp_server.js                                                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n!function (module1) {\n  let _objectSpread;\n\n  module1.link(\"@babel/runtime/helpers/objectSpread2\", {\n    default(v) {\n      _objectSpread = v;\n    }\n\n  }, 0);\n  module1.export({\n    WebApp: () => WebApp,\n    WebAppInternals: () => WebAppInternals\n  });\n  let assert;\n  module1.link(\"assert\", {\n    default(v) {\n      assert = v;\n    }\n\n  }, 0);\n  let readFileSync;\n  module1.link(\"fs\", {\n    readFileSync(v) {\n      readFileSync = v;\n    }\n\n  }, 1);\n  let createServer;\n  module1.link(\"http\", {\n    createServer(v) {\n      createServer = v;\n    }\n\n  }, 2);\n  let pathJoin, pathDirname;\n  module1.link(\"path\", {\n    join(v) {\n      pathJoin = v;\n    },\n\n    dirname(v) {\n      pathDirname = v;\n    }\n\n  }, 3);\n  let parseUrl;\n  module1.link(\"url\", {\n    parse(v) {\n      parseUrl = v;\n    }\n\n  }, 4);\n  let createHash;\n  module1.link(\"crypto\", {\n    createHash(v) {\n      createHash = v;\n    }\n\n  }, 5);\n  let connect;\n  module1.link(\"./connect.js\", {\n    connect(v) {\n      connect = v;\n    }\n\n  }, 6);\n  let compress;\n  module1.link(\"compression\", {\n    default(v) {\n      compress = v;\n    }\n\n  }, 7);\n  let cookieParser;\n  module1.link(\"cookie-parser\", {\n    default(v) {\n      cookieParser = v;\n    }\n\n  }, 8);\n  let qs;\n  module1.link(\"qs\", {\n    default(v) {\n      qs = v;\n    }\n\n  }, 9);\n  let parseRequest;\n  module1.link(\"parseurl\", {\n    default(v) {\n      parseRequest = v;\n    }\n\n  }, 10);\n  let basicAuth;\n  module1.link(\"basic-auth-connect\", {\n    default(v) {\n      basicAuth = v;\n    }\n\n  }, 11);\n  let lookupUserAgent;\n  module1.link(\"useragent\", {\n    lookup(v) {\n      lookupUserAgent = v;\n    }\n\n  }, 12);\n  let isModern;\n  module1.link(\"meteor/modern-browsers\", {\n    isModern(v) {\n      isModern = v;\n    }\n\n  }, 13);\n  let send;\n  module1.link(\"send\", {\n    default(v) {\n      send = v;\n    }\n\n  }, 14);\n  let removeExistingSocketFile, registerSocketFileCleanup;\n  module1.link(\"./socket_file.js\", {\n    removeExistingSocketFile(v) {\n      removeExistingSocketFile = v;\n    },\n\n    registerSocketFileCleanup(v) {\n      registerSocketFileCleanup = v;\n    }\n\n  }, 15);\n  let cluster;\n  module1.link(\"cluster\", {\n    default(v) {\n      cluster = v;\n    }\n\n  }, 16);\n  let onMessage;\n  module1.link(\"meteor/inter-process-messaging\", {\n    onMessage(v) {\n      onMessage = v;\n    }\n\n  }, 17);\n  var SHORT_SOCKET_TIMEOUT = 5 * 1000;\n  var LONG_SOCKET_TIMEOUT = 120 * 1000;\n  const WebApp = {};\n  const WebAppInternals = {};\n  const hasOwn = Object.prototype.hasOwnProperty; // backwards compat to 2.0 of connect\n\n  connect.basicAuth = basicAuth;\n  WebAppInternals.NpmModules = {\n    connect: {\n      version: Npm.require('connect/package.json').version,\n      module: connect\n    }\n  }; // Though we might prefer to use web.browser (modern) as the default\n  // architecture, safety requires a more compatible defaultArch.\n\n  WebApp.defaultArch = 'web.browser.legacy'; // XXX maps archs to manifests\n\n  WebApp.clientPrograms = {}; // XXX maps archs to program path on filesystem\n\n  var archPath = {};\n\n  var bundledJsCssUrlRewriteHook = function (url) {\n    var bundledPrefix = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '';\n    return bundledPrefix + url;\n  };\n\n  var sha1 = function (contents) {\n    var hash = createHash('sha1');\n    hash.update(contents);\n    return hash.digest('hex');\n  };\n\n  function shouldCompress(req, res) {\n    if (req.headers['x-no-compression']) {\n      // don't compress responses with this request header\n      return false;\n    } // fallback to standard filter function\n\n\n    return compress.filter(req, res);\n  }\n\n  ; // #BrowserIdentification\n  //\n  // We have multiple places that want to identify the browser: the\n  // unsupported browser page, the appcache package, and, eventually\n  // delivering browser polyfills only as needed.\n  //\n  // To avoid detecting the browser in multiple places ad-hoc, we create a\n  // Meteor \"browser\" object. It uses but does not expose the npm\n  // useragent module (we could choose a different mechanism to identify\n  // the browser in the future if we wanted to).  The browser object\n  // contains\n  //\n  // * `name`: the name of the browser in camel case\n  // * `major`, `minor`, `patch`: integers describing the browser version\n  //\n  // Also here is an early version of a Meteor `request` object, intended\n  // to be a high-level description of the request without exposing\n  // details of connect's low-level `req`.  Currently it contains:\n  //\n  // * `browser`: browser identification object described above\n  // * `url`: parsed url, including parsed query params\n  //\n  // As a temporary hack there is a `categorizeRequest` function on WebApp which\n  // converts a connect `req` to a Meteor `request`. This can go away once smart\n  // packages such as appcache are being passed a `request` object directly when\n  // they serve content.\n  //\n  // This allows `request` to be used uniformly: it is passed to the html\n  // attributes hook, and the appcache package can use it when deciding\n  // whether to generate a 404 for the manifest.\n  //\n  // Real routing / server side rendering will probably refactor this\n  // heavily.\n  // e.g. \"Mobile Safari\" => \"mobileSafari\"\n\n  var camelCase = function (name) {\n    var parts = name.split(' ');\n    parts[0] = parts[0].toLowerCase();\n\n    for (var i = 1; i < parts.length; ++i) {\n      parts[i] = parts[i].charAt(0).toUpperCase() + parts[i].substr(1);\n    }\n\n    return parts.join('');\n  };\n\n  var identifyBrowser = function (userAgentString) {\n    var userAgent = lookupUserAgent(userAgentString);\n    return {\n      name: camelCase(userAgent.family),\n      major: +userAgent.major,\n      minor: +userAgent.minor,\n      patch: +userAgent.patch\n    };\n  }; // XXX Refactor as part of implementing real routing.\n\n\n  WebAppInternals.identifyBrowser = identifyBrowser;\n\n  WebApp.categorizeRequest = function (req) {\n    if (req.browser && req.arch && typeof req.modern === \"boolean\") {\n      // Already categorized.\n      return req;\n    }\n\n    const browser = identifyBrowser(req.headers[\"user-agent\"]);\n    const modern = isModern(browser);\n    const path = typeof req.pathname === \"string\" ? req.pathname : parseRequest(req).pathname;\n    const categorized = {\n      browser,\n      modern,\n      path,\n      arch: WebApp.defaultArch,\n      url: parseUrl(req.url, true),\n      dynamicHead: req.dynamicHead,\n      dynamicBody: req.dynamicBody,\n      headers: req.headers,\n      cookies: req.cookies\n    };\n    const pathParts = path.split(\"/\");\n    const archKey = pathParts[1];\n\n    if (archKey.startsWith(\"__\")) {\n      const archCleaned = \"web.\" + archKey.slice(2);\n\n      if (hasOwn.call(WebApp.clientPrograms, archCleaned)) {\n        pathParts.splice(1, 1); // Remove the archKey part.\n\n        return Object.assign(categorized, {\n          arch: archCleaned,\n          path: pathParts.join(\"/\")\n        });\n      }\n    } // TODO Perhaps one day we could infer Cordova clients here, so that we\n    // wouldn't have to use prefixed \"/__cordova/...\" URLs.\n\n\n    const preferredArchOrder = isModern(browser) ? [\"web.browser\", \"web.browser.legacy\"] : [\"web.browser.legacy\", \"web.browser\"];\n\n    for (const arch of preferredArchOrder) {\n      // If our preferred arch is not available, it's better to use another\n      // client arch that is available than to guarantee the site won't work\n      // by returning an unknown arch. For example, if web.browser.legacy is\n      // excluded using the --exclude-archs command-line option, legacy\n      // clients are better off receiving web.browser (which might actually\n      // work) than receiving an HTTP 404 response. If none of the archs in\n      // preferredArchOrder are defined, only then should we send a 404.\n      if (hasOwn.call(WebApp.clientPrograms, arch)) {\n        return Object.assign(categorized, {\n          arch\n        });\n      }\n    }\n\n    return categorized;\n  }; // HTML attribute hooks: functions to be called to determine any attributes to\n  // be added to the '<html>' tag. Each function is passed a 'request' object (see\n  // #BrowserIdentification) and should return null or object.\n\n\n  var htmlAttributeHooks = [];\n\n  var getHtmlAttributes = function (request) {\n    var combinedAttributes = {};\n\n    _.each(htmlAttributeHooks || [], function (hook) {\n      var attributes = hook(request);\n      if (attributes === null) return;\n      if (typeof attributes !== 'object') throw Error(\"HTML attribute hook must return null or object\");\n\n      _.extend(combinedAttributes, attributes);\n    });\n\n    return combinedAttributes;\n  };\n\n  WebApp.addHtmlAttributeHook = function (hook) {\n    htmlAttributeHooks.push(hook);\n  }; // Serve app HTML for this URL?\n\n\n  var appUrl = function (url) {\n    if (url === '/favicon.ico' || url === '/robots.txt') return false; // NOTE: app.manifest is not a web standard like favicon.ico and\n    // robots.txt. It is a file name we have chosen to use for HTML5\n    // appcache URLs. It is included here to prevent using an appcache\n    // then removing it from poisoning an app permanently. Eventually,\n    // once we have server side routing, this won't be needed as\n    // unknown URLs with return a 404 automatically.\n\n    if (url === '/app.manifest') return false; // Avoid serving app HTML for declared routes such as /sockjs/.\n\n    if (RoutePolicy.classify(url)) return false; // we currently return app HTML on all URLs by default\n\n    return true;\n  }; // We need to calculate the client hash after all packages have loaded\n  // to give them a chance to populate __meteor_runtime_config__.\n  //\n  // Calculating the hash during startup means that packages can only\n  // populate __meteor_runtime_config__ during load, not during startup.\n  //\n  // Calculating instead it at the beginning of main after all startup\n  // hooks had run would allow packages to also populate\n  // __meteor_runtime_config__ during startup, but that's too late for\n  // autoupdate because it needs to have the client hash at startup to\n  // insert the auto update version itself into\n  // __meteor_runtime_config__ to get it to the client.\n  //\n  // An alternative would be to give autoupdate a \"post-start,\n  // pre-listen\" hook to allow it to insert the auto update version at\n  // the right moment.\n\n\n  Meteor.startup(function () {\n    function getter(key) {\n      return function (arch) {\n        arch = arch || WebApp.defaultArch;\n        const program = WebApp.clientPrograms[arch];\n        const value = program && program[key]; // If this is the first time we have calculated this hash,\n        // program[key] will be a thunk (lazy function with no parameters)\n        // that we should call to do the actual computation.\n\n        return typeof value === \"function\" ? program[key] = value() : value;\n      };\n    }\n\n    WebApp.calculateClientHash = WebApp.clientHash = getter(\"version\");\n    WebApp.calculateClientHashRefreshable = getter(\"versionRefreshable\");\n    WebApp.calculateClientHashNonRefreshable = getter(\"versionNonRefreshable\");\n    WebApp.calculateClientHashReplaceable = getter(\"versionReplaceable\");\n    WebApp.getRefreshableAssets = getter(\"refreshableAssets\");\n  }); // When we have a request pending, we want the socket timeout to be long, to\n  // give ourselves a while to serve it, and to allow sockjs long polls to\n  // complete.  On the other hand, we want to close idle sockets relatively\n  // quickly, so that we can shut down relatively promptly but cleanly, without\n  // cutting off anyone's response.\n\n  WebApp._timeoutAdjustmentRequestCallback = function (req, res) {\n    // this is really just req.socket.setTimeout(LONG_SOCKET_TIMEOUT);\n    req.setTimeout(LONG_SOCKET_TIMEOUT); // Insert our new finish listener to run BEFORE the existing one which removes\n    // the response from the socket.\n\n    var finishListeners = res.listeners('finish'); // XXX Apparently in Node 0.12 this event was called 'prefinish'.\n    // https://github.com/joyent/node/commit/7c9b6070\n    // But it has switched back to 'finish' in Node v4:\n    // https://github.com/nodejs/node/pull/1411\n\n    res.removeAllListeners('finish');\n    res.on('finish', function () {\n      res.setTimeout(SHORT_SOCKET_TIMEOUT);\n    });\n\n    _.each(finishListeners, function (l) {\n      res.on('finish', l);\n    });\n  }; // Will be updated by main before we listen.\n  // Map from client arch to boilerplate object.\n  // Boilerplate object has:\n  //   - func: XXX\n  //   - baseData: XXX\n\n\n  var boilerplateByArch = {}; // Register a callback function that can selectively modify boilerplate\n  // data given arguments (request, data, arch). The key should be a unique\n  // identifier, to prevent accumulating duplicate callbacks from the same\n  // call site over time. Callbacks will be called in the order they were\n  // registered. A callback should return false if it did not make any\n  // changes affecting the boilerplate. Passing null deletes the callback.\n  // Any previous callback registered for this key will be returned.\n\n  const boilerplateDataCallbacks = Object.create(null);\n\n  WebAppInternals.registerBoilerplateDataCallback = function (key, callback) {\n    const previousCallback = boilerplateDataCallbacks[key];\n\n    if (typeof callback === \"function\") {\n      boilerplateDataCallbacks[key] = callback;\n    } else {\n      assert.strictEqual(callback, null);\n      delete boilerplateDataCallbacks[key];\n    } // Return the previous callback in case the new callback needs to call\n    // it; for example, when the new callback is a wrapper for the old.\n\n\n    return previousCallback || null;\n  }; // Given a request (as returned from `categorizeRequest`), return the\n  // boilerplate HTML to serve for that request.\n  //\n  // If a previous connect middleware has rendered content for the head or body,\n  // returns the boilerplate with that content patched in otherwise\n  // memoizes on HTML attributes (used by, eg, appcache) and whether inline\n  // scripts are currently allowed.\n  // XXX so far this function is always called with arch === 'web.browser'\n\n\n  function getBoilerplate(request, arch) {\n    return getBoilerplateAsync(request, arch).await();\n  }\n\n  function getBoilerplateAsync(request, arch) {\n    const boilerplate = boilerplateByArch[arch];\n    const data = Object.assign({}, boilerplate.baseData, {\n      htmlAttributes: getHtmlAttributes(request)\n    }, _.pick(request, \"dynamicHead\", \"dynamicBody\"));\n    let madeChanges = false;\n    let promise = Promise.resolve();\n    Object.keys(boilerplateDataCallbacks).forEach(key => {\n      promise = promise.then(() => {\n        const callback = boilerplateDataCallbacks[key];\n        return callback(request, data, arch);\n      }).then(result => {\n        // Callbacks should return false if they did not make any changes.\n        if (result !== false) {\n          madeChanges = true;\n        }\n      });\n    });\n    return promise.then(() => ({\n      stream: boilerplate.toHTMLStream(data),\n      statusCode: data.statusCode,\n      headers: data.headers\n    }));\n  }\n\n  WebAppInternals.generateBoilerplateInstance = function (arch, manifest, additionalOptions) {\n    additionalOptions = additionalOptions || {};\n    const meteorRuntimeConfig = JSON.stringify(encodeURIComponent(JSON.stringify(_objectSpread(_objectSpread({}, __meteor_runtime_config__), additionalOptions.runtimeConfigOverrides || {}))));\n    return new Boilerplate(arch, manifest, _.extend({\n      pathMapper(itemPath) {\n        return pathJoin(archPath[arch], itemPath);\n      },\n\n      baseDataExtension: {\n        additionalStaticJs: _.map(additionalStaticJs || [], function (contents, pathname) {\n          return {\n            pathname: pathname,\n            contents: contents\n          };\n        }),\n        // Convert to a JSON string, then get rid of most weird characters, then\n        // wrap in double quotes. (The outermost JSON.stringify really ought to\n        // just be \"wrap in double quotes\" but we use it to be safe.) This might\n        // end up inside a <script> tag so we need to be careful to not include\n        // \"</script>\", but normal {{spacebars}} escaping escapes too much! See\n        // https://github.com/meteor/meteor/issues/3730\n        meteorRuntimeConfig,\n        meteorRuntimeHash: sha1(meteorRuntimeConfig),\n        rootUrlPathPrefix: __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '',\n        bundledJsCssUrlRewriteHook: bundledJsCssUrlRewriteHook,\n        sriMode: sriMode,\n        inlineScriptsAllowed: WebAppInternals.inlineScriptsAllowed(),\n        inline: additionalOptions.inline\n      }\n    }, additionalOptions));\n  }; // A mapping from url path to architecture (e.g. \"web.browser\") to static\n  // file information with the following fields:\n  // - type: the type of file to be served\n  // - cacheable: optionally, whether the file should be cached or not\n  // - sourceMapUrl: optionally, the url of the source map\n  //\n  // Info also contains one of the following:\n  // - content: the stringified content that should be served at this path\n  // - absolutePath: the absolute path on disk to the file\n  // Serve static files from the manifest or added with\n  // `addStaticJs`. Exported for tests.\n\n\n  WebAppInternals.staticFilesMiddleware = function (staticFilesByArch, req, res, next) {\n    return Promise.asyncApply(() => {\n      if ('GET' != req.method && 'HEAD' != req.method && 'OPTIONS' != req.method) {\n        next();\n        return;\n      }\n\n      var pathname = parseRequest(req).pathname;\n\n      try {\n        pathname = decodeURIComponent(pathname);\n      } catch (e) {\n        next();\n        return;\n      }\n\n      var serveStaticJs = function (s) {\n        res.writeHead(200, {\n          'Content-type': 'application/javascript; charset=UTF-8'\n        });\n        res.write(s);\n        res.end();\n      };\n\n      if (_.has(additionalStaticJs, pathname) && !WebAppInternals.inlineScriptsAllowed()) {\n        serveStaticJs(additionalStaticJs[pathname]);\n        return;\n      }\n\n      const {\n        arch,\n        path\n      } = WebApp.categorizeRequest(req);\n\n      if (!hasOwn.call(WebApp.clientPrograms, arch)) {\n        // We could come here in case we run with some architectures excluded\n        next();\n        return;\n      } // If pauseClient(arch) has been called, program.paused will be a\n      // Promise that will be resolved when the program is unpaused.\n\n\n      const program = WebApp.clientPrograms[arch];\n      Promise.await(program.paused);\n\n      if (path === \"/meteor_runtime_config.js\" && !WebAppInternals.inlineScriptsAllowed()) {\n        serveStaticJs(\"__meteor_runtime_config__ = \".concat(program.meteorRuntimeConfig, \";\"));\n        return;\n      }\n\n      const info = getStaticFileInfo(staticFilesByArch, pathname, path, arch);\n\n      if (!info) {\n        next();\n        return;\n      } // We don't need to call pause because, unlike 'static', once we call into\n      // 'send' and yield to the event loop, we never call another handler with\n      // 'next'.\n      // Cacheable files are files that should never change. Typically\n      // named by their hash (eg meteor bundled js and css files).\n      // We cache them ~forever (1yr).\n\n\n      const maxAge = info.cacheable ? 1000 * 60 * 60 * 24 * 365 : 0;\n\n      if (info.cacheable) {\n        // Since we use req.headers[\"user-agent\"] to determine whether the\n        // client should receive modern or legacy resources, tell the client\n        // to invalidate cached resources when/if its user agent string\n        // changes in the future.\n        res.setHeader(\"Vary\", \"User-Agent\");\n      } // Set the X-SourceMap header, which current Chrome, FireFox, and Safari\n      // understand.  (The SourceMap header is slightly more spec-correct but FF\n      // doesn't understand it.)\n      //\n      // You may also need to enable source maps in Chrome: open dev tools, click\n      // the gear in the bottom right corner, and select \"enable source maps\".\n\n\n      if (info.sourceMapUrl) {\n        res.setHeader('X-SourceMap', __meteor_runtime_config__.ROOT_URL_PATH_PREFIX + info.sourceMapUrl);\n      }\n\n      if (info.type === \"js\" || info.type === \"dynamic js\") {\n        res.setHeader(\"Content-Type\", \"application/javascript; charset=UTF-8\");\n      } else if (info.type === \"css\") {\n        res.setHeader(\"Content-Type\", \"text/css; charset=UTF-8\");\n      } else if (info.type === \"json\") {\n        res.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n      }\n\n      if (info.hash) {\n        res.setHeader('ETag', '\"' + info.hash + '\"');\n      }\n\n      if (info.content) {\n        res.write(info.content);\n        res.end();\n      } else {\n        send(req, info.absolutePath, {\n          maxage: maxAge,\n          dotfiles: 'allow',\n          // if we specified a dotfile in the manifest, serve it\n          lastModified: false // don't set last-modified based on the file date\n\n        }).on('error', function (err) {\n          Log.error(\"Error serving static file \" + err);\n          res.writeHead(500);\n          res.end();\n        }).on('directory', function () {\n          Log.error(\"Unexpected directory \" + info.absolutePath);\n          res.writeHead(500);\n          res.end();\n        }).pipe(res);\n      }\n    });\n  };\n\n  function getStaticFileInfo(staticFilesByArch, originalPath, path, arch) {\n    if (!hasOwn.call(WebApp.clientPrograms, arch)) {\n      return null;\n    } // Get a list of all available static file architectures, with arch\n    // first in the list if it exists.\n\n\n    const staticArchList = Object.keys(staticFilesByArch);\n    const archIndex = staticArchList.indexOf(arch);\n\n    if (archIndex > 0) {\n      staticArchList.unshift(staticArchList.splice(archIndex, 1)[0]);\n    }\n\n    let info = null;\n    staticArchList.some(arch => {\n      const staticFiles = staticFilesByArch[arch];\n\n      function finalize(path) {\n        info = staticFiles[path]; // Sometimes we register a lazy function instead of actual data in\n        // the staticFiles manifest.\n\n        if (typeof info === \"function\") {\n          info = staticFiles[path] = info();\n        }\n\n        return info;\n      } // If staticFiles contains originalPath with the arch inferred above,\n      // use that information.\n\n\n      if (hasOwn.call(staticFiles, originalPath)) {\n        return finalize(originalPath);\n      } // If categorizeRequest returned an alternate path, try that instead.\n\n\n      if (path !== originalPath && hasOwn.call(staticFiles, path)) {\n        return finalize(path);\n      }\n    });\n    return info;\n  } // Parse the passed in port value. Return the port as-is if it's a String\n  // (e.g. a Windows Server style named pipe), otherwise return the port as an\n  // integer.\n  //\n  // DEPRECATED: Direct use of this function is not recommended; it is no\n  // longer used internally, and will be removed in a future release.\n\n\n  WebAppInternals.parsePort = port => {\n    let parsedPort = parseInt(port);\n\n    if (Number.isNaN(parsedPort)) {\n      parsedPort = port;\n    }\n\n    return parsedPort;\n  };\n\n  onMessage(\"webapp-pause-client\", (_ref) => Promise.asyncApply(() => {\n    let {\n      arch\n    } = _ref;\n    WebAppInternals.pauseClient(arch);\n  }));\n  onMessage(\"webapp-reload-client\", (_ref2) => Promise.asyncApply(() => {\n    let {\n      arch\n    } = _ref2;\n    WebAppInternals.generateClientProgram(arch);\n  }));\n\n  function runWebAppServer() {\n    var shuttingDown = false;\n    var syncQueue = new Meteor._SynchronousQueue();\n\n    var getItemPathname = function (itemUrl) {\n      return decodeURIComponent(parseUrl(itemUrl).pathname);\n    };\n\n    WebAppInternals.reloadClientPrograms = function () {\n      syncQueue.runTask(function () {\n        const staticFilesByArch = Object.create(null);\n        const {\n          configJson\n        } = __meteor_bootstrap__;\n        const clientArchs = configJson.clientArchs || Object.keys(configJson.clientPaths);\n\n        try {\n          clientArchs.forEach(arch => {\n            generateClientProgram(arch, staticFilesByArch);\n          });\n          WebAppInternals.staticFilesByArch = staticFilesByArch;\n        } catch (e) {\n          Log.error(\"Error reloading the client program: \" + e.stack);\n          process.exit(1);\n        }\n      });\n    }; // Pause any incoming requests and make them wait for the program to be\n    // unpaused the next time generateClientProgram(arch) is called.\n\n\n    WebAppInternals.pauseClient = function (arch) {\n      syncQueue.runTask(() => {\n        const program = WebApp.clientPrograms[arch];\n        const {\n          unpause\n        } = program;\n        program.paused = new Promise(resolve => {\n          if (typeof unpause === \"function\") {\n            // If there happens to be an existing program.unpause function,\n            // compose it with the resolve function.\n            program.unpause = function () {\n              unpause();\n              resolve();\n            };\n          } else {\n            program.unpause = resolve;\n          }\n        });\n      });\n    };\n\n    WebAppInternals.generateClientProgram = function (arch) {\n      syncQueue.runTask(() => generateClientProgram(arch));\n    };\n\n    function generateClientProgram(arch) {\n      let staticFilesByArch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : WebAppInternals.staticFilesByArch;\n      const clientDir = pathJoin(pathDirname(__meteor_bootstrap__.serverDir), arch); // read the control for the client we'll be serving up\n\n      const programJsonPath = pathJoin(clientDir, \"program.json\");\n      let programJson;\n\n      try {\n        programJson = JSON.parse(readFileSync(programJsonPath));\n      } catch (e) {\n        if (e.code === \"ENOENT\") return;\n        throw e;\n      }\n\n      if (programJson.format !== \"web-program-pre1\") {\n        throw new Error(\"Unsupported format for client assets: \" + JSON.stringify(programJson.format));\n      }\n\n      if (!programJsonPath || !clientDir || !programJson) {\n        throw new Error(\"Client config file not parsed.\");\n      }\n\n      archPath[arch] = clientDir;\n      const staticFiles = staticFilesByArch[arch] = Object.create(null);\n      const {\n        manifest\n      } = programJson;\n      manifest.forEach(item => {\n        if (item.url && item.where === \"client\") {\n          staticFiles[getItemPathname(item.url)] = {\n            absolutePath: pathJoin(clientDir, item.path),\n            cacheable: item.cacheable,\n            hash: item.hash,\n            // Link from source to its map\n            sourceMapUrl: item.sourceMapUrl,\n            type: item.type\n          };\n\n          if (item.sourceMap) {\n            // Serve the source map too, under the specified URL. We assume\n            // all source maps are cacheable.\n            staticFiles[getItemPathname(item.sourceMapUrl)] = {\n              absolutePath: pathJoin(clientDir, item.sourceMap),\n              cacheable: true\n            };\n          }\n        }\n      });\n      const {\n        PUBLIC_SETTINGS\n      } = __meteor_runtime_config__;\n      const configOverrides = {\n        PUBLIC_SETTINGS\n      };\n      const oldProgram = WebApp.clientPrograms[arch];\n      const newProgram = WebApp.clientPrograms[arch] = {\n        format: \"web-program-pre1\",\n        manifest: manifest,\n        // Use arrow functions so that these versions can be lazily\n        // calculated later, and so that they will not be included in the\n        // staticFiles[manifestUrl].content string below.\n        //\n        // Note: these version calculations must be kept in agreement with\n        // CordovaBuilder#appendVersion in tools/cordova/builder.js, or hot\n        // code push will reload Cordova apps unnecessarily.\n        version: () => WebAppHashing.calculateClientHash(manifest, null, configOverrides),\n        versionRefreshable: () => WebAppHashing.calculateClientHash(manifest, type => type === \"css\", configOverrides),\n        versionNonRefreshable: () => WebAppHashing.calculateClientHash(manifest, (type, replaceable) => type !== \"css\" && !replaceable, configOverrides),\n        versionReplaceable: () => WebAppHashing.calculateClientHash(manifest, (_type, replaceable) => {\n          if (Meteor.isProduction && replaceable) {\n            throw new Error('Unexpected replaceable file in production');\n          }\n\n          return replaceable;\n        }, configOverrides),\n        cordovaCompatibilityVersions: programJson.cordovaCompatibilityVersions,\n        PUBLIC_SETTINGS\n      }; // Expose program details as a string reachable via the following URL.\n\n      const manifestUrlPrefix = \"/__\" + arch.replace(/^web\\./, \"\");\n      const manifestUrl = manifestUrlPrefix + getItemPathname(\"/manifest.json\");\n\n      staticFiles[manifestUrl] = () => {\n        if (Package.autoupdate) {\n          const {\n            AUTOUPDATE_VERSION = Package.autoupdate.Autoupdate.autoupdateVersion\n          } = process.env;\n\n          if (AUTOUPDATE_VERSION) {\n            newProgram.version = AUTOUPDATE_VERSION;\n          }\n        }\n\n        if (typeof newProgram.version === \"function\") {\n          newProgram.version = newProgram.version();\n        }\n\n        return {\n          content: JSON.stringify(newProgram),\n          cacheable: false,\n          hash: newProgram.version,\n          type: \"json\"\n        };\n      };\n\n      generateBoilerplateForArch(arch); // If there are any requests waiting on oldProgram.paused, let them\n      // continue now (using the new program).\n\n      if (oldProgram && oldProgram.paused) {\n        oldProgram.unpause();\n      }\n    }\n\n    ;\n    const defaultOptionsForArch = {\n      'web.cordova': {\n        runtimeConfigOverrides: {\n          // XXX We use absoluteUrl() here so that we serve https://\n          // URLs to cordova clients if force-ssl is in use. If we were\n          // to use __meteor_runtime_config__.ROOT_URL instead of\n          // absoluteUrl(), then Cordova clients would immediately get a\n          // HCP setting their DDP_DEFAULT_CONNECTION_URL to\n          // http://example.meteor.com. This breaks the app, because\n          // force-ssl doesn't serve CORS headers on 302\n          // redirects. (Plus it's undesirable to have clients\n          // connecting to http://example.meteor.com when force-ssl is\n          // in use.)\n          DDP_DEFAULT_CONNECTION_URL: process.env.MOBILE_DDP_URL || Meteor.absoluteUrl(),\n          ROOT_URL: process.env.MOBILE_ROOT_URL || Meteor.absoluteUrl()\n        }\n      },\n      \"web.browser\": {\n        runtimeConfigOverrides: {\n          isModern: true\n        }\n      },\n      \"web.browser.legacy\": {\n        runtimeConfigOverrides: {\n          isModern: false\n        }\n      }\n    };\n\n    WebAppInternals.generateBoilerplate = function () {\n      // This boilerplate will be served to the mobile devices when used with\n      // Meteor/Cordova for the Hot-Code Push and since the file will be served by\n      // the device's server, it is important to set the DDP url to the actual\n      // Meteor server accepting DDP connections and not the device's file server.\n      syncQueue.runTask(function () {\n        Object.keys(WebApp.clientPrograms).forEach(generateBoilerplateForArch);\n      });\n    };\n\n    function generateBoilerplateForArch(arch) {\n      const program = WebApp.clientPrograms[arch];\n      const additionalOptions = defaultOptionsForArch[arch] || {};\n      const {\n        baseData\n      } = boilerplateByArch[arch] = WebAppInternals.generateBoilerplateInstance(arch, program.manifest, additionalOptions); // We need the runtime config with overrides for meteor_runtime_config.js:\n\n      program.meteorRuntimeConfig = JSON.stringify(_objectSpread(_objectSpread({}, __meteor_runtime_config__), additionalOptions.runtimeConfigOverrides || null));\n      program.refreshableAssets = baseData.css.map(file => ({\n        url: bundledJsCssUrlRewriteHook(file.url)\n      }));\n    }\n\n    WebAppInternals.reloadClientPrograms(); // webserver\n\n    var app = connect(); // Packages and apps can add handlers that run before any other Meteor\n    // handlers via WebApp.rawConnectHandlers.\n\n    var rawConnectHandlers = connect();\n    app.use(rawConnectHandlers); // Auto-compress any json, javascript, or text.\n\n    app.use(compress({\n      filter: shouldCompress\n    })); // parse cookies into an object\n\n    app.use(cookieParser()); // We're not a proxy; reject (without crashing) attempts to treat us like\n    // one. (See #1212.)\n\n    app.use(function (req, res, next) {\n      if (RoutePolicy.isValidUrl(req.url)) {\n        next();\n        return;\n      }\n\n      res.writeHead(400);\n      res.write(\"Not a proxy\");\n      res.end();\n    }); // Parse the query string into res.query. Used by oauth_server, but it's\n    // generally pretty handy..\n    //\n    // Do this before the next middleware destroys req.url if a path prefix\n    // is set to close #10111.\n\n    app.use(function (request, response, next) {\n      request.query = qs.parse(parseUrl(request.url).query);\n      next();\n    });\n\n    function getPathParts(path) {\n      const parts = path.split(\"/\");\n\n      while (parts[0] === \"\") parts.shift();\n\n      return parts;\n    }\n\n    function isPrefixOf(prefix, array) {\n      return prefix.length <= array.length && prefix.every((part, i) => part === array[i]);\n    } // Strip off the path prefix, if it exists.\n\n\n    app.use(function (request, response, next) {\n      const pathPrefix = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX;\n      const {\n        pathname,\n        search\n      } = parseUrl(request.url); // check if the path in the url starts with the path prefix\n\n      if (pathPrefix) {\n        const prefixParts = getPathParts(pathPrefix);\n        const pathParts = getPathParts(pathname);\n\n        if (isPrefixOf(prefixParts, pathParts)) {\n          request.url = \"/\" + pathParts.slice(prefixParts.length).join(\"/\");\n\n          if (search) {\n            request.url += search;\n          }\n\n          return next();\n        }\n      }\n\n      if (pathname === \"/favicon.ico\" || pathname === \"/robots.txt\") {\n        return next();\n      }\n\n      if (pathPrefix) {\n        response.writeHead(404);\n        response.write(\"Unknown path\");\n        response.end();\n        return;\n      }\n\n      next();\n    }); // Serve static files from the manifest.\n    // This is inspired by the 'static' middleware.\n\n    app.use(function (req, res, next) {\n      WebAppInternals.staticFilesMiddleware(WebAppInternals.staticFilesByArch, req, res, next);\n    }); // Core Meteor packages like dynamic-import can add handlers before\n    // other handlers added by package and application code.\n\n    app.use(WebAppInternals.meteorInternalHandlers = connect()); // Packages and apps can add handlers to this via WebApp.connectHandlers.\n    // They are inserted before our default handler.\n\n    var packageAndAppHandlers = connect();\n    app.use(packageAndAppHandlers);\n    var suppressConnectErrors = false; // connect knows it is an error handler because it has 4 arguments instead of\n    // 3. go figure.  (It is not smart enough to find such a thing if it's hidden\n    // inside packageAndAppHandlers.)\n\n    app.use(function (err, req, res, next) {\n      if (!err || !suppressConnectErrors || !req.headers['x-suppress-error']) {\n        next(err);\n        return;\n      }\n\n      res.writeHead(err.status, {\n        'Content-Type': 'text/plain'\n      });\n      res.end(\"An error message\");\n    });\n    app.use(function (req, res, next) {\n      return Promise.asyncApply(() => {\n        if (!appUrl(req.url)) {\n          return next();\n        } else {\n          var headers = {\n            'Content-Type': 'text/html; charset=utf-8'\n          };\n\n          if (shuttingDown) {\n            headers['Connection'] = 'Close';\n          }\n\n          var request = WebApp.categorizeRequest(req);\n\n          if (request.url.query && request.url.query['meteor_css_resource']) {\n            // In this case, we're requesting a CSS resource in the meteor-specific\n            // way, but we don't have it.  Serve a static css file that indicates that\n            // we didn't have it, so we can detect that and refresh.  Make sure\n            // that any proxies or CDNs don't cache this error!  (Normally proxies\n            // or CDNs are smart enough not to cache error pages, but in order to\n            // make this hack work, we need to return the CSS file as a 200, which\n            // would otherwise be cached.)\n            headers['Content-Type'] = 'text/css; charset=utf-8';\n            headers['Cache-Control'] = 'no-cache';\n            res.writeHead(200, headers);\n            res.write(\".meteor-css-not-found-error { width: 0px;}\");\n            res.end();\n            return;\n          }\n\n          if (request.url.query && request.url.query['meteor_js_resource']) {\n            // Similarly, we're requesting a JS resource that we don't have.\n            // Serve an uncached 404. (We can't use the same hack we use for CSS,\n            // because actually acting on that hack requires us to have the JS\n            // already!)\n            headers['Cache-Control'] = 'no-cache';\n            res.writeHead(404, headers);\n            res.end(\"404 Not Found\");\n            return;\n          }\n\n          if (request.url.query && request.url.query['meteor_dont_serve_index']) {\n            // When downloading files during a Cordova hot code push, we need\n            // to detect if a file is not available instead of inadvertently\n            // downloading the default index page.\n            // So similar to the situation above, we serve an uncached 404.\n            headers['Cache-Control'] = 'no-cache';\n            res.writeHead(404, headers);\n            res.end(\"404 Not Found\");\n            return;\n          }\n\n          const {\n            arch\n          } = request;\n          assert.strictEqual(typeof arch, \"string\", {\n            arch\n          });\n\n          if (!hasOwn.call(WebApp.clientPrograms, arch)) {\n            // We could come here in case we run with some architectures excluded\n            headers['Cache-Control'] = 'no-cache';\n            res.writeHead(404, headers);\n\n            if (Meteor.isDevelopment) {\n              res.end(\"No client program found for the \".concat(arch, \" architecture.\"));\n            } else {\n              // Safety net, but this branch should not be possible.\n              res.end(\"404 Not Found\");\n            }\n\n            return;\n          } // If pauseClient(arch) has been called, program.paused will be a\n          // Promise that will be resolved when the program is unpaused.\n\n\n          Promise.await(WebApp.clientPrograms[arch].paused);\n          return getBoilerplateAsync(request, arch).then((_ref3) => {\n            let {\n              stream,\n              statusCode,\n              headers: newHeaders\n            } = _ref3;\n\n            if (!statusCode) {\n              statusCode = res.statusCode ? res.statusCode : 200;\n            }\n\n            if (newHeaders) {\n              Object.assign(headers, newHeaders);\n            }\n\n            res.writeHead(statusCode, headers);\n            stream.pipe(res, {\n              // End the response when the stream ends.\n              end: true\n            });\n          }).catch(error => {\n            Log.error(\"Error running template: \" + error.stack);\n            res.writeHead(500, headers);\n            res.end();\n          });\n        }\n      });\n    }); // Return 404 by default, if no other handlers serve this URL.\n\n    app.use(function (req, res) {\n      res.writeHead(404);\n      res.end();\n    });\n    var httpServer = createServer(app);\n    var onListeningCallbacks = []; // After 5 seconds w/o data on a socket, kill it.  On the other hand, if\n    // there's an outstanding request, give it a higher timeout instead (to avoid\n    // killing long-polling requests)\n\n    httpServer.setTimeout(SHORT_SOCKET_TIMEOUT); // Do this here, and then also in livedata/stream_server.js, because\n    // stream_server.js kills all the current request handlers when installing its\n    // own.\n\n    httpServer.on('request', WebApp._timeoutAdjustmentRequestCallback); // If the client gave us a bad request, tell it instead of just closing the\n    // socket. This lets load balancers in front of us differentiate between \"a\n    // server is randomly closing sockets for no reason\" and \"client sent a bad\n    // request\".\n    //\n    // This will only work on Node 6; Node 4 destroys the socket before calling\n    // this event. See https://github.com/nodejs/node/pull/4557/ for details.\n\n    httpServer.on('clientError', (err, socket) => {\n      // Pre-Node-6, do nothing.\n      if (socket.destroyed) {\n        return;\n      }\n\n      if (err.message === 'Parse Error') {\n        socket.end('HTTP/1.1 400 Bad Request\\r\\n\\r\\n');\n      } else {\n        // For other errors, use the default behavior as if we had no clientError\n        // handler.\n        socket.destroy(err);\n      }\n    }); // start up app\n\n    _.extend(WebApp, {\n      connectHandlers: packageAndAppHandlers,\n      rawConnectHandlers: rawConnectHandlers,\n      httpServer: httpServer,\n      connectApp: app,\n      // For testing.\n      suppressConnectErrors: function () {\n        suppressConnectErrors = true;\n      },\n      onListening: function (f) {\n        if (onListeningCallbacks) onListeningCallbacks.push(f);else f();\n      },\n      // This can be overridden by users who want to modify how listening works\n      // (eg, to run a proxy like Apollo Engine Proxy in front of the server).\n      startListening: function (httpServer, listenOptions, cb) {\n        httpServer.listen(listenOptions, cb);\n      }\n    }); // Let the rest of the packages (and Meteor.startup hooks) insert connect\n    // middlewares and update __meteor_runtime_config__, then keep going to set up\n    // actually serving HTML.\n\n\n    exports.main = argv => {\n      WebAppInternals.generateBoilerplate();\n\n      const startHttpServer = listenOptions => {\n        WebApp.startListening(httpServer, listenOptions, Meteor.bindEnvironment(() => {\n          if (process.env.METEOR_PRINT_ON_LISTEN) {\n            console.log(\"LISTENING\");\n          }\n\n          const callbacks = onListeningCallbacks;\n          onListeningCallbacks = null;\n          callbacks.forEach(callback => {\n            callback();\n          });\n        }, e => {\n          console.error(\"Error listening:\", e);\n          console.error(e && e.stack);\n        }));\n      };\n\n      let localPort = process.env.PORT || 0;\n      let unixSocketPath = process.env.UNIX_SOCKET_PATH;\n\n      if (unixSocketPath) {\n        if (cluster.isWorker) {\n          const workerName = cluster.worker.process.env.name || cluster.worker.id;\n          unixSocketPath += \".\" + workerName + \".sock\";\n        } // Start the HTTP server using a socket file.\n\n\n        removeExistingSocketFile(unixSocketPath);\n        startHttpServer({\n          path: unixSocketPath\n        });\n        registerSocketFileCleanup(unixSocketPath);\n      } else {\n        localPort = isNaN(Number(localPort)) ? localPort : Number(localPort);\n\n        if (/\\\\\\\\?.+\\\\pipe\\\\?.+/.test(localPort)) {\n          // Start the HTTP server using Windows Server style named pipe.\n          startHttpServer({\n            path: localPort\n          });\n        } else if (typeof localPort === \"number\") {\n          // Start the HTTP server using TCP.\n          startHttpServer({\n            port: localPort,\n            host: process.env.BIND_IP || \"0.0.0.0\"\n          });\n        } else {\n          throw new Error(\"Invalid PORT specified\");\n        }\n      }\n\n      return \"DAEMON\";\n    };\n  }\n\n  var inlineScriptsAllowed = true;\n\n  WebAppInternals.inlineScriptsAllowed = function () {\n    return inlineScriptsAllowed;\n  };\n\n  WebAppInternals.setInlineScriptsAllowed = function (value) {\n    inlineScriptsAllowed = value;\n    WebAppInternals.generateBoilerplate();\n  };\n\n  var sriMode;\n\n  WebAppInternals.enableSubresourceIntegrity = function () {\n    let use_credentials = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    sriMode = use_credentials ? 'use-credentials' : 'anonymous';\n    WebAppInternals.generateBoilerplate();\n  };\n\n  WebAppInternals.setBundledJsCssUrlRewriteHook = function (hookFn) {\n    bundledJsCssUrlRewriteHook = hookFn;\n    WebAppInternals.generateBoilerplate();\n  };\n\n  WebAppInternals.setBundledJsCssPrefix = function (prefix) {\n    var self = this;\n    self.setBundledJsCssUrlRewriteHook(function (url) {\n      return prefix + url;\n    });\n  }; // Packages can call `WebAppInternals.addStaticJs` to specify static\n  // JavaScript to be included in the app. This static JS will be inlined,\n  // unless inline scripts have been disabled, in which case it will be\n  // served under `/<sha1 of contents>`.\n\n\n  var additionalStaticJs = {};\n\n  WebAppInternals.addStaticJs = function (contents) {\n    additionalStaticJs[\"/\" + sha1(contents) + \".js\"] = contents;\n  }; // Exported for tests\n\n\n  WebAppInternals.getBoilerplate = getBoilerplate;\n  WebAppInternals.additionalStaticJs = additionalStaticJs; // Start the server!\n\n  runWebAppServer();\n}.call(this, module);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"connect.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/webapp/connect.js                                                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  connect: () => connect\n});\nlet npmConnect;\nmodule.link(\"connect\", {\n  default(v) {\n    npmConnect = v;\n  }\n\n}, 0);\n\nfunction connect() {\n  for (var _len = arguments.length, connectArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n    connectArgs[_key] = arguments[_key];\n  }\n\n  const handlers = npmConnect.apply(this, connectArgs);\n  const originalUse = handlers.use; // Wrap the handlers.use method so that any provided handler functions\n  // alway run in a Fiber.\n\n  handlers.use = function use() {\n    for (var _len2 = arguments.length, useArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      useArgs[_key2] = arguments[_key2];\n    }\n\n    const {\n      stack\n    } = this;\n    const originalLength = stack.length;\n    const result = originalUse.apply(this, useArgs); // If we just added anything to the stack, wrap each new entry.handle\n    // with a function that calls Promise.asyncApply to ensure the\n    // original handler runs in a Fiber.\n\n    for (let i = originalLength; i < stack.length; ++i) {\n      const entry = stack[i];\n      const originalHandle = entry.handle;\n\n      if (originalHandle.length >= 4) {\n        // If the original handle had four (or more) parameters, the\n        // wrapper must also have four parameters, since connect uses\n        // handle.length to dermine whether to pass the error as the first\n        // argument to the handle function.\n        entry.handle = function handle(err, req, res, next) {\n          return Promise.asyncApply(originalHandle, this, arguments);\n        };\n      } else {\n        entry.handle = function handle(req, res, next) {\n          return Promise.asyncApply(originalHandle, this, arguments);\n        };\n      }\n    }\n\n    return result;\n  };\n\n  return handlers;\n}\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"socket_file.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/webapp/socket_file.js                                                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  removeExistingSocketFile: () => removeExistingSocketFile,\n  registerSocketFileCleanup: () => registerSocketFileCleanup\n});\nlet statSync, unlinkSync, existsSync;\nmodule.link(\"fs\", {\n  statSync(v) {\n    statSync = v;\n  },\n\n  unlinkSync(v) {\n    unlinkSync = v;\n  },\n\n  existsSync(v) {\n    existsSync = v;\n  }\n\n}, 0);\n\nconst removeExistingSocketFile = socketPath => {\n  try {\n    if (statSync(socketPath).isSocket()) {\n      // Since a new socket file will be created, remove the existing\n      // file.\n      unlinkSync(socketPath);\n    } else {\n      throw new Error(\"An existing file was found at \\\"\".concat(socketPath, \"\\\" and it is not \") + 'a socket file. Please confirm PORT is pointing to valid and ' + 'un-used socket file path.');\n    }\n  } catch (error) {\n    // If there is no existing socket file to cleanup, great, we'll\n    // continue normally. If the caught exception represents any other\n    // issue, re-throw.\n    if (error.code !== 'ENOENT') {\n      throw error;\n    }\n  }\n};\n\nconst registerSocketFileCleanup = function (socketPath) {\n  let eventEmitter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : process;\n  ['exit', 'SIGINT', 'SIGHUP', 'SIGTERM'].forEach(signal => {\n    eventEmitter.on(signal, Meteor.bindEnvironment(() => {\n      if (existsSync(socketPath)) {\n        unlinkSync(socketPath);\n      }\n    }));\n  });\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"node_modules\":{\"connect\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/webapp/node_modules/connect/package.json                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exports = {\n  \"name\": \"connect\",\n  \"version\": \"3.6.5\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/webapp/node_modules/connect/index.js                                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"compression\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/webapp/node_modules/compression/package.json                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exports = {\n  \"name\": \"compression\",\n  \"version\": \"1.7.1\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/webapp/node_modules/compression/index.js                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"cookie-parser\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/webapp/node_modules/cookie-parser/package.json                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exports = {\n  \"name\": \"cookie-parser\",\n  \"version\": \"1.4.3\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/webapp/node_modules/cookie-parser/index.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"qs\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/webapp/node_modules/qs/package.json                                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exports = {\n  \"name\": \"qs\",\n  \"version\": \"6.4.0\",\n  \"main\": \"lib/index.js\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"index.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/webapp/node_modules/qs/lib/index.js                                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"parseurl\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/webapp/node_modules/parseurl/package.json                                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exports = {\n  \"name\": \"parseurl\",\n  \"version\": \"1.3.2\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/webapp/node_modules/parseurl/index.js                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"basic-auth-connect\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/webapp/node_modules/basic-auth-connect/package.json                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exports = {\n  \"name\": \"basic-auth-connect\",\n  \"version\": \"1.0.0\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/webapp/node_modules/basic-auth-connect/index.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"useragent\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/webapp/node_modules/useragent/package.json                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exports = {\n  \"name\": \"useragent\",\n  \"version\": \"2.3.0\",\n  \"main\": \"./index.js\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/webapp/node_modules/useragent/index.js                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"send\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/webapp/node_modules/send/package.json                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exports = {\n  \"name\": \"send\",\n  \"version\": \"0.16.1\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/webapp/node_modules/send/index.js                                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.useNode();\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/node_modules/meteor/webapp/webapp_server.js\");\n\n/* Exports */\nPackage._define(\"webapp\", exports, {\n  WebApp: WebApp,\n  WebAppInternals: WebAppInternals,\n  main: main\n});\n\n})();\n","servePath":"/packages/webapp.js","sourceMap":{"version":3,"sources":["packages/webapp/webapp_server.js","packages/webapp/connect.js","packages/webapp/socket_file.js"],"names":["_objectSpread","module1","link","default","v","export","WebApp","WebAppInternals","assert","readFileSync","createServer","pathJoin","pathDirname","join","dirname","parseUrl","parse","createHash","connect","compress","cookieParser","qs","parseRequest","basicAuth","lookupUserAgent","lookup","isModern","send","removeExistingSocketFile","registerSocketFileCleanup","cluster","onMessage","SHORT_SOCKET_TIMEOUT","LONG_SOCKET_TIMEOUT","hasOwn","Object","prototype","hasOwnProperty","NpmModules","version","Npm","require","module","defaultArch","clientPrograms","archPath","bundledJsCssUrlRewriteHook","url","bundledPrefix","__meteor_runtime_config__","ROOT_URL_PATH_PREFIX","sha1","contents","hash","update","digest","shouldCompress","req","res","headers","filter","camelCase","name","parts","split","toLowerCase","i","length","charAt","toUpperCase","substr","identifyBrowser","userAgentString","userAgent","family","major","minor","patch","categorizeRequest","browser","arch","modern","path","pathname","categorized","dynamicHead","dynamicBody","cookies","pathParts","archKey","startsWith","archCleaned","slice","call","splice","assign","preferredArchOrder","htmlAttributeHooks","getHtmlAttributes","request","combinedAttributes","_","each","hook","attributes","Error","extend","addHtmlAttributeHook","push","appUrl","RoutePolicy","classify","Meteor","startup","getter","key","program","value","calculateClientHash","clientHash","calculateClientHashRefreshable","calculateClientHashNonRefreshable","calculateClientHashReplaceable","getRefreshableAssets","_timeoutAdjustmentRequestCallback","setTimeout","finishListeners","listeners","removeAllListeners","on","l","boilerplateByArch","boilerplateDataCallbacks","create","registerBoilerplateDataCallback","callback","previousCallback","strictEqual","getBoilerplate","getBoilerplateAsync","await","boilerplate","data","baseData","htmlAttributes","pick","madeChanges","promise","Promise","resolve","keys","forEach","then","result","stream","toHTMLStream","statusCode","generateBoilerplateInstance","manifest","additionalOptions","meteorRuntimeConfig","JSON","stringify","encodeURIComponent","runtimeConfigOverrides","Boilerplate","pathMapper","itemPath","baseDataExtension","additionalStaticJs","map","meteorRuntimeHash","rootUrlPathPrefix","sriMode","inlineScriptsAllowed","inline","staticFilesMiddleware","staticFilesByArch","next","method","decodeURIComponent","e","serveStaticJs","s","writeHead","write","end","has","paused","info","getStaticFileInfo","maxAge","cacheable","setHeader","sourceMapUrl","type","content","absolutePath","maxage","dotfiles","lastModified","err","Log","error","pipe","originalPath","staticArchList","archIndex","indexOf","unshift","some","staticFiles","finalize","parsePort","port","parsedPort","parseInt","Number","isNaN","pauseClient","generateClientProgram","runWebAppServer","shuttingDown","syncQueue","_SynchronousQueue","getItemPathname","itemUrl","reloadClientPrograms","runTask","configJson","__meteor_bootstrap__","clientArchs","clientPaths","stack","process","exit","unpause","clientDir","serverDir","programJsonPath","programJson","code","format","item","where","sourceMap","PUBLIC_SETTINGS","configOverrides","oldProgram","newProgram","WebAppHashing","versionRefreshable","versionNonRefreshable","replaceable","versionReplaceable","_type","isProduction","cordovaCompatibilityVersions","manifestUrlPrefix","replace","manifestUrl","Package","autoupdate","AUTOUPDATE_VERSION","Autoupdate","autoupdateVersion","env","generateBoilerplateForArch","defaultOptionsForArch","DDP_DEFAULT_CONNECTION_URL","MOBILE_DDP_URL","absoluteUrl","ROOT_URL","MOBILE_ROOT_URL","generateBoilerplate","refreshableAssets","css","file","app","rawConnectHandlers","use","isValidUrl","response","query","getPathParts","shift","isPrefixOf","prefix","array","every","part","pathPrefix","search","prefixParts","meteorInternalHandlers","packageAndAppHandlers","suppressConnectErrors","status","isDevelopment","newHeaders","catch","httpServer","onListeningCallbacks","socket","destroyed","message","destroy","connectHandlers","connectApp","onListening","f","startListening","listenOptions","cb","listen","exports","main","argv","startHttpServer","bindEnvironment","METEOR_PRINT_ON_LISTEN","console","log","callbacks","localPort","PORT","unixSocketPath","UNIX_SOCKET_PATH","isWorker","workerName","worker","id","test","host","BIND_IP","setInlineScriptsAllowed","enableSubresourceIntegrity","use_credentials","setBundledJsCssUrlRewriteHook","hookFn","setBundledJsCssPrefix","self","addStaticJs","npmConnect","connectArgs","handlers","apply","originalUse","useArgs","originalLength","entry","originalHandle","handle","asyncApply","arguments","statSync","unlinkSync","existsSync","socketPath","isSocket","eventEmitter","signal"],"mappings":"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","file":"/packages/webapp.js","sourcesContent":["import assert from \"assert\";\nimport { readFileSync } from \"fs\";\nimport { createServer } from \"http\";\nimport {\n  join as pathJoin,\n  dirname as pathDirname,\n} from \"path\";\nimport { parse as parseUrl } from \"url\";\nimport { createHash } from \"crypto\";\nimport { connect } from \"./connect.js\";\nimport compress from \"compression\";\nimport cookieParser from \"cookie-parser\";\nimport qs from \"qs\";\nimport parseRequest from \"parseurl\";\nimport basicAuth from \"basic-auth-connect\";\nimport { lookup as lookupUserAgent } from \"useragent\";\nimport { isModern } from \"meteor/modern-browsers\";\nimport send from \"send\";\nimport {\n  removeExistingSocketFile,\n  registerSocketFileCleanup,\n} from './socket_file.js';\nimport cluster from \"cluster\";\n\nvar SHORT_SOCKET_TIMEOUT = 5*1000;\nvar LONG_SOCKET_TIMEOUT = 120*1000;\n\nexport const WebApp = {};\nexport const WebAppInternals = {};\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\n// backwards compat to 2.0 of connect\nconnect.basicAuth = basicAuth;\n\nWebAppInternals.NpmModules = {\n  connect: {\n    version: Npm.require('connect/package.json').version,\n    module: connect,\n  }\n};\n\n// Though we might prefer to use web.browser (modern) as the default\n// architecture, safety requires a more compatible defaultArch.\nWebApp.defaultArch = 'web.browser.legacy';\n\n// XXX maps archs to manifests\nWebApp.clientPrograms = {};\n\n// XXX maps archs to program path on filesystem\nvar archPath = {};\n\nvar bundledJsCssUrlRewriteHook = function (url) {\n  var bundledPrefix =\n     __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '';\n  return bundledPrefix + url;\n};\n\nvar sha1 = function (contents) {\n  var hash = createHash('sha1');\n  hash.update(contents);\n  return hash.digest('hex');\n};\n\n function shouldCompress(req, res) {\n  if (req.headers['x-no-compression']) {\n    // don't compress responses with this request header\n    return false;\n  }\n\n  // fallback to standard filter function\n  return compress.filter(req, res);\n};\n\n// #BrowserIdentification\n//\n// We have multiple places that want to identify the browser: the\n// unsupported browser page, the appcache package, and, eventually\n// delivering browser polyfills only as needed.\n//\n// To avoid detecting the browser in multiple places ad-hoc, we create a\n// Meteor \"browser\" object. It uses but does not expose the npm\n// useragent module (we could choose a different mechanism to identify\n// the browser in the future if we wanted to).  The browser object\n// contains\n//\n// * `name`: the name of the browser in camel case\n// * `major`, `minor`, `patch`: integers describing the browser version\n//\n// Also here is an early version of a Meteor `request` object, intended\n// to be a high-level description of the request without exposing\n// details of connect's low-level `req`.  Currently it contains:\n//\n// * `browser`: browser identification object described above\n// * `url`: parsed url, including parsed query params\n//\n// As a temporary hack there is a `categorizeRequest` function on WebApp which\n// converts a connect `req` to a Meteor `request`. This can go away once smart\n// packages such as appcache are being passed a `request` object directly when\n// they serve content.\n//\n// This allows `request` to be used uniformly: it is passed to the html\n// attributes hook, and the appcache package can use it when deciding\n// whether to generate a 404 for the manifest.\n//\n// Real routing / server side rendering will probably refactor this\n// heavily.\n\n\n// e.g. \"Mobile Safari\" => \"mobileSafari\"\nvar camelCase = function (name) {\n  var parts = name.split(' ');\n  parts[0] = parts[0].toLowerCase();\n  for (var i = 1;  i < parts.length;  ++i) {\n    parts[i] = parts[i].charAt(0).toUpperCase() + parts[i].substr(1);\n  }\n  return parts.join('');\n};\n\nvar identifyBrowser = function (userAgentString) {\n  var userAgent = lookupUserAgent(userAgentString);\n  return {\n    name: camelCase(userAgent.family),\n    major: +userAgent.major,\n    minor: +userAgent.minor,\n    patch: +userAgent.patch\n  };\n};\n\n// XXX Refactor as part of implementing real routing.\nWebAppInternals.identifyBrowser = identifyBrowser;\n\nWebApp.categorizeRequest = function (req) {\n  if (req.browser && req.arch && typeof req.modern === \"boolean\") {\n    // Already categorized.\n    return req;\n  }\n\n  const browser = identifyBrowser(req.headers[\"user-agent\"]);\n  const modern = isModern(browser);\n  const path = typeof req.pathname === \"string\"\n   ? req.pathname\n   : parseRequest(req).pathname;\n\n  const categorized = {\n    browser,\n    modern,\n    path,\n    arch: WebApp.defaultArch,\n    url: parseUrl(req.url, true),\n    dynamicHead: req.dynamicHead,\n    dynamicBody: req.dynamicBody,\n    headers: req.headers,\n    cookies: req.cookies,\n  };\n\n  const pathParts = path.split(\"/\");\n  const archKey = pathParts[1];\n\n  if (archKey.startsWith(\"__\")) {\n    const archCleaned = \"web.\" + archKey.slice(2);\n    if (hasOwn.call(WebApp.clientPrograms, archCleaned)) {\n      pathParts.splice(1, 1); // Remove the archKey part.\n      return Object.assign(categorized, {\n        arch: archCleaned,\n        path: pathParts.join(\"/\"),\n      });\n    }\n  }\n\n  // TODO Perhaps one day we could infer Cordova clients here, so that we\n  // wouldn't have to use prefixed \"/__cordova/...\" URLs.\n  const preferredArchOrder = isModern(browser)\n    ? [\"web.browser\", \"web.browser.legacy\"]\n    : [\"web.browser.legacy\", \"web.browser\"];\n\n  for (const arch of preferredArchOrder) {\n    // If our preferred arch is not available, it's better to use another\n    // client arch that is available than to guarantee the site won't work\n    // by returning an unknown arch. For example, if web.browser.legacy is\n    // excluded using the --exclude-archs command-line option, legacy\n    // clients are better off receiving web.browser (which might actually\n    // work) than receiving an HTTP 404 response. If none of the archs in\n    // preferredArchOrder are defined, only then should we send a 404.\n    if (hasOwn.call(WebApp.clientPrograms, arch)) {\n      return Object.assign(categorized, { arch });\n    }\n  }\n\n  return categorized;\n};\n\n// HTML attribute hooks: functions to be called to determine any attributes to\n// be added to the '<html>' tag. Each function is passed a 'request' object (see\n// #BrowserIdentification) and should return null or object.\nvar htmlAttributeHooks = [];\nvar getHtmlAttributes = function (request) {\n  var combinedAttributes  = {};\n  _.each(htmlAttributeHooks || [], function (hook) {\n    var attributes = hook(request);\n    if (attributes === null)\n      return;\n    if (typeof attributes !== 'object')\n      throw Error(\"HTML attribute hook must return null or object\");\n    _.extend(combinedAttributes, attributes);\n  });\n  return combinedAttributes;\n};\nWebApp.addHtmlAttributeHook = function (hook) {\n  htmlAttributeHooks.push(hook);\n};\n\n// Serve app HTML for this URL?\nvar appUrl = function (url) {\n  if (url === '/favicon.ico' || url === '/robots.txt')\n    return false;\n\n  // NOTE: app.manifest is not a web standard like favicon.ico and\n  // robots.txt. It is a file name we have chosen to use for HTML5\n  // appcache URLs. It is included here to prevent using an appcache\n  // then removing it from poisoning an app permanently. Eventually,\n  // once we have server side routing, this won't be needed as\n  // unknown URLs with return a 404 automatically.\n  if (url === '/app.manifest')\n    return false;\n\n  // Avoid serving app HTML for declared routes such as /sockjs/.\n  if (RoutePolicy.classify(url))\n    return false;\n\n  // we currently return app HTML on all URLs by default\n  return true;\n};\n\n\n// We need to calculate the client hash after all packages have loaded\n// to give them a chance to populate __meteor_runtime_config__.\n//\n// Calculating the hash during startup means that packages can only\n// populate __meteor_runtime_config__ during load, not during startup.\n//\n// Calculating instead it at the beginning of main after all startup\n// hooks had run would allow packages to also populate\n// __meteor_runtime_config__ during startup, but that's too late for\n// autoupdate because it needs to have the client hash at startup to\n// insert the auto update version itself into\n// __meteor_runtime_config__ to get it to the client.\n//\n// An alternative would be to give autoupdate a \"post-start,\n// pre-listen\" hook to allow it to insert the auto update version at\n// the right moment.\n\nMeteor.startup(function () {\n  function getter(key) {\n    return function (arch) {\n      arch = arch || WebApp.defaultArch;\n      const program = WebApp.clientPrograms[arch];\n      const value = program && program[key];\n      // If this is the first time we have calculated this hash,\n      // program[key] will be a thunk (lazy function with no parameters)\n      // that we should call to do the actual computation.\n      return typeof value === \"function\"\n        ? program[key] = value()\n        : value;\n    };\n  }\n\n  WebApp.calculateClientHash = WebApp.clientHash = getter(\"version\");\n  WebApp.calculateClientHashRefreshable = getter(\"versionRefreshable\");\n  WebApp.calculateClientHashNonRefreshable = getter(\"versionNonRefreshable\");\n  WebApp.calculateClientHashReplaceable = getter(\"versionReplaceable\");\n  WebApp.getRefreshableAssets = getter(\"refreshableAssets\");\n});\n\n\n\n// When we have a request pending, we want the socket timeout to be long, to\n// give ourselves a while to serve it, and to allow sockjs long polls to\n// complete.  On the other hand, we want to close idle sockets relatively\n// quickly, so that we can shut down relatively promptly but cleanly, without\n// cutting off anyone's response.\nWebApp._timeoutAdjustmentRequestCallback = function (req, res) {\n  // this is really just req.socket.setTimeout(LONG_SOCKET_TIMEOUT);\n  req.setTimeout(LONG_SOCKET_TIMEOUT);\n  // Insert our new finish listener to run BEFORE the existing one which removes\n  // the response from the socket.\n  var finishListeners = res.listeners('finish');\n  // XXX Apparently in Node 0.12 this event was called 'prefinish'.\n  // https://github.com/joyent/node/commit/7c9b6070\n  // But it has switched back to 'finish' in Node v4:\n  // https://github.com/nodejs/node/pull/1411\n  res.removeAllListeners('finish');\n  res.on('finish', function () {\n    res.setTimeout(SHORT_SOCKET_TIMEOUT);\n  });\n  _.each(finishListeners, function (l) { res.on('finish', l); });\n};\n\n\n// Will be updated by main before we listen.\n// Map from client arch to boilerplate object.\n// Boilerplate object has:\n//   - func: XXX\n//   - baseData: XXX\nvar boilerplateByArch = {};\n\n// Register a callback function that can selectively modify boilerplate\n// data given arguments (request, data, arch). The key should be a unique\n// identifier, to prevent accumulating duplicate callbacks from the same\n// call site over time. Callbacks will be called in the order they were\n// registered. A callback should return false if it did not make any\n// changes affecting the boilerplate. Passing null deletes the callback.\n// Any previous callback registered for this key will be returned.\nconst boilerplateDataCallbacks = Object.create(null);\nWebAppInternals.registerBoilerplateDataCallback = function (key, callback) {\n  const previousCallback = boilerplateDataCallbacks[key];\n\n  if (typeof callback === \"function\") {\n    boilerplateDataCallbacks[key] = callback;\n  } else {\n    assert.strictEqual(callback, null);\n    delete boilerplateDataCallbacks[key];\n  }\n\n  // Return the previous callback in case the new callback needs to call\n  // it; for example, when the new callback is a wrapper for the old.\n  return previousCallback || null;\n};\n\n// Given a request (as returned from `categorizeRequest`), return the\n// boilerplate HTML to serve for that request.\n//\n// If a previous connect middleware has rendered content for the head or body,\n// returns the boilerplate with that content patched in otherwise\n// memoizes on HTML attributes (used by, eg, appcache) and whether inline\n// scripts are currently allowed.\n// XXX so far this function is always called with arch === 'web.browser'\nfunction getBoilerplate(request, arch) {\n  return getBoilerplateAsync(request, arch).await();\n}\n\nfunction getBoilerplateAsync(request, arch) {\n  const boilerplate = boilerplateByArch[arch];\n  const data = Object.assign({}, boilerplate.baseData, {\n    htmlAttributes: getHtmlAttributes(request),\n  }, _.pick(request, \"dynamicHead\", \"dynamicBody\"));\n\n  let madeChanges = false;\n  let promise = Promise.resolve();\n\n  Object.keys(boilerplateDataCallbacks).forEach(key => {\n    promise = promise.then(() => {\n      const callback = boilerplateDataCallbacks[key];\n      return callback(request, data, arch);\n    }).then(result => {\n      // Callbacks should return false if they did not make any changes.\n      if (result !== false) {\n        madeChanges = true;\n      }\n    });\n  });\n\n  return promise.then(() => ({\n    stream: boilerplate.toHTMLStream(data),\n    statusCode: data.statusCode,\n    headers: data.headers,\n  }));\n}\n\nWebAppInternals.generateBoilerplateInstance = function (arch,\n                                                        manifest,\n                                                        additionalOptions) {\n  additionalOptions = additionalOptions || {};\n\n  const meteorRuntimeConfig = JSON.stringify(\n    encodeURIComponent(JSON.stringify({\n      ...__meteor_runtime_config__,\n      ...(additionalOptions.runtimeConfigOverrides || {})\n    }))\n  );\n\n  return new Boilerplate(arch, manifest, _.extend({\n    pathMapper(itemPath) {\n      return pathJoin(archPath[arch], itemPath);\n    },\n    baseDataExtension: {\n      additionalStaticJs: _.map(\n        additionalStaticJs || [],\n        function (contents, pathname) {\n          return {\n            pathname: pathname,\n            contents: contents\n          };\n        }\n      ),\n      // Convert to a JSON string, then get rid of most weird characters, then\n      // wrap in double quotes. (The outermost JSON.stringify really ought to\n      // just be \"wrap in double quotes\" but we use it to be safe.) This might\n      // end up inside a <script> tag so we need to be careful to not include\n      // \"</script>\", but normal {{spacebars}} escaping escapes too much! See\n      // https://github.com/meteor/meteor/issues/3730\n      meteorRuntimeConfig,\n      meteorRuntimeHash: sha1(meteorRuntimeConfig),\n      rootUrlPathPrefix: __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '',\n      bundledJsCssUrlRewriteHook: bundledJsCssUrlRewriteHook,\n      sriMode: sriMode,\n      inlineScriptsAllowed: WebAppInternals.inlineScriptsAllowed(),\n      inline: additionalOptions.inline\n    }\n  }, additionalOptions));\n};\n\n// A mapping from url path to architecture (e.g. \"web.browser\") to static\n// file information with the following fields:\n// - type: the type of file to be served\n// - cacheable: optionally, whether the file should be cached or not\n// - sourceMapUrl: optionally, the url of the source map\n//\n// Info also contains one of the following:\n// - content: the stringified content that should be served at this path\n// - absolutePath: the absolute path on disk to the file\n\n// Serve static files from the manifest or added with\n// `addStaticJs`. Exported for tests.\nWebAppInternals.staticFilesMiddleware = async function (\n  staticFilesByArch,\n  req,\n  res,\n  next,\n) {\n  if ('GET' != req.method && 'HEAD' != req.method && 'OPTIONS' != req.method) {\n    next();\n    return;\n  }\n  var pathname = parseRequest(req).pathname;\n  try {\n    pathname = decodeURIComponent(pathname);\n  } catch (e) {\n    next();\n    return;\n  }\n\n  var serveStaticJs = function (s) {\n    res.writeHead(200, {\n      'Content-type': 'application/javascript; charset=UTF-8'\n    });\n    res.write(s);\n    res.end();\n  };\n\n  if (_.has(additionalStaticJs, pathname) &&\n              ! WebAppInternals.inlineScriptsAllowed()) {\n    serveStaticJs(additionalStaticJs[pathname]);\n    return;\n  }\n\n  const { arch, path } = WebApp.categorizeRequest(req);\n\n  if (! hasOwn.call(WebApp.clientPrograms, arch)) {\n    // We could come here in case we run with some architectures excluded\n    next();\n    return;\n  }\n\n  // If pauseClient(arch) has been called, program.paused will be a\n  // Promise that will be resolved when the program is unpaused.\n  const program = WebApp.clientPrograms[arch];\n  await program.paused;\n\n  if (path === \"/meteor_runtime_config.js\" &&\n      ! WebAppInternals.inlineScriptsAllowed()) {\n    serveStaticJs(`__meteor_runtime_config__ = ${program.meteorRuntimeConfig};`);\n    return;\n  }\n\n  const info = getStaticFileInfo(staticFilesByArch, pathname, path, arch);\n  if (! info) {\n    next();\n    return;\n  }\n\n  // We don't need to call pause because, unlike 'static', once we call into\n  // 'send' and yield to the event loop, we never call another handler with\n  // 'next'.\n\n  // Cacheable files are files that should never change. Typically\n  // named by their hash (eg meteor bundled js and css files).\n  // We cache them ~forever (1yr).\n  const maxAge = info.cacheable\n    ? 1000 * 60 * 60 * 24 * 365\n    : 0;\n\n  if (info.cacheable) {\n    // Since we use req.headers[\"user-agent\"] to determine whether the\n    // client should receive modern or legacy resources, tell the client\n    // to invalidate cached resources when/if its user agent string\n    // changes in the future.\n    res.setHeader(\"Vary\", \"User-Agent\");\n  }\n\n  // Set the X-SourceMap header, which current Chrome, FireFox, and Safari\n  // understand.  (The SourceMap header is slightly more spec-correct but FF\n  // doesn't understand it.)\n  //\n  // You may also need to enable source maps in Chrome: open dev tools, click\n  // the gear in the bottom right corner, and select \"enable source maps\".\n  if (info.sourceMapUrl) {\n    res.setHeader('X-SourceMap',\n                  __meteor_runtime_config__.ROOT_URL_PATH_PREFIX +\n                  info.sourceMapUrl);\n  }\n\n  if (info.type === \"js\" ||\n      info.type === \"dynamic js\") {\n    res.setHeader(\"Content-Type\", \"application/javascript; charset=UTF-8\");\n  } else if (info.type === \"css\") {\n    res.setHeader(\"Content-Type\", \"text/css; charset=UTF-8\");\n  } else if (info.type === \"json\") {\n    res.setHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n  }\n\n  if (info.hash) {\n    res.setHeader('ETag', '\"' + info.hash + '\"');\n  }\n\n  if (info.content) {\n    res.write(info.content);\n    res.end();\n  } else {\n    send(req, info.absolutePath, {\n      maxage: maxAge,\n      dotfiles: 'allow', // if we specified a dotfile in the manifest, serve it\n      lastModified: false // don't set last-modified based on the file date\n    }).on('error', function (err) {\n      Log.error(\"Error serving static file \" + err);\n      res.writeHead(500);\n      res.end();\n    }).on('directory', function () {\n      Log.error(\"Unexpected directory \" + info.absolutePath);\n      res.writeHead(500);\n      res.end();\n    }).pipe(res);\n  }\n};\n\nfunction getStaticFileInfo(staticFilesByArch, originalPath, path, arch) {\n  if (! hasOwn.call(WebApp.clientPrograms, arch)) {\n    return null;\n  }\n\n  // Get a list of all available static file architectures, with arch\n  // first in the list if it exists.\n  const staticArchList = Object.keys(staticFilesByArch);\n  const archIndex = staticArchList.indexOf(arch);\n  if (archIndex > 0) {\n    staticArchList.unshift(staticArchList.splice(archIndex, 1)[0]);\n  }\n\n  let info = null;\n\n  staticArchList.some(arch => {\n    const staticFiles = staticFilesByArch[arch];\n\n    function finalize(path) {\n      info = staticFiles[path];\n      // Sometimes we register a lazy function instead of actual data in\n      // the staticFiles manifest.\n      if (typeof info === \"function\") {\n        info = staticFiles[path] = info();\n      }\n      return info;\n    }\n\n    // If staticFiles contains originalPath with the arch inferred above,\n    // use that information.\n    if (hasOwn.call(staticFiles, originalPath)) {\n      return finalize(originalPath);\n    }\n\n    // If categorizeRequest returned an alternate path, try that instead.\n    if (path !== originalPath &&\n        hasOwn.call(staticFiles, path)) {\n      return finalize(path);\n    }\n  });\n\n  return info;\n}\n\n// Parse the passed in port value. Return the port as-is if it's a String\n// (e.g. a Windows Server style named pipe), otherwise return the port as an\n// integer.\n//\n// DEPRECATED: Direct use of this function is not recommended; it is no\n// longer used internally, and will be removed in a future release.\nWebAppInternals.parsePort = port => {\n  let parsedPort = parseInt(port);\n  if (Number.isNaN(parsedPort)) {\n    parsedPort = port;\n  }\n  return parsedPort;\n}\n\nimport { onMessage } from \"meteor/inter-process-messaging\";\n\nonMessage(\"webapp-pause-client\", async ({ arch }) => {\n  WebAppInternals.pauseClient(arch);\n});\n\nonMessage(\"webapp-reload-client\", async ({ arch }) => {\n  WebAppInternals.generateClientProgram(arch);\n});\n\nfunction runWebAppServer() {\n  var shuttingDown = false;\n  var syncQueue = new Meteor._SynchronousQueue();\n\n  var getItemPathname = function (itemUrl) {\n    return decodeURIComponent(parseUrl(itemUrl).pathname);\n  };\n\n  WebAppInternals.reloadClientPrograms = function () {\n    syncQueue.runTask(function() {\n      const staticFilesByArch = Object.create(null);\n\n      const { configJson } = __meteor_bootstrap__;\n      const clientArchs = configJson.clientArchs ||\n        Object.keys(configJson.clientPaths);\n\n      try {\n        clientArchs.forEach(arch => {\n          generateClientProgram(arch, staticFilesByArch);\n        });\n        WebAppInternals.staticFilesByArch = staticFilesByArch;\n      } catch (e) {\n        Log.error(\"Error reloading the client program: \" + e.stack);\n        process.exit(1);\n      }\n    });\n  };\n\n  // Pause any incoming requests and make them wait for the program to be\n  // unpaused the next time generateClientProgram(arch) is called.\n  WebAppInternals.pauseClient = function (arch) {\n    syncQueue.runTask(() => {\n      const program = WebApp.clientPrograms[arch];\n      const { unpause } = program;\n      program.paused = new Promise(resolve => {\n        if (typeof unpause === \"function\") {\n          // If there happens to be an existing program.unpause function,\n          // compose it with the resolve function.\n          program.unpause = function () {\n            unpause();\n            resolve();\n          };\n        } else {\n          program.unpause = resolve;\n        }\n      });\n    });\n  };\n\n  WebAppInternals.generateClientProgram = function (arch) {\n    syncQueue.runTask(() => generateClientProgram(arch));\n  };\n\n  function generateClientProgram(\n    arch,\n    staticFilesByArch = WebAppInternals.staticFilesByArch,\n  ) {\n    const clientDir = pathJoin(\n      pathDirname(__meteor_bootstrap__.serverDir),\n      arch,\n    );\n\n    // read the control for the client we'll be serving up\n    const programJsonPath = pathJoin(clientDir, \"program.json\");\n\n    let programJson;\n    try {\n      programJson = JSON.parse(readFileSync(programJsonPath));\n    } catch (e) {\n      if (e.code === \"ENOENT\") return;\n      throw e;\n    }\n\n    if (programJson.format !== \"web-program-pre1\") {\n      throw new Error(\"Unsupported format for client assets: \" +\n                      JSON.stringify(programJson.format));\n    }\n\n    if (! programJsonPath || ! clientDir || ! programJson) {\n      throw new Error(\"Client config file not parsed.\");\n    }\n\n    archPath[arch] = clientDir;\n    const staticFiles = staticFilesByArch[arch] = Object.create(null);\n\n    const { manifest } = programJson;\n    manifest.forEach(item => {\n      if (item.url && item.where === \"client\") {\n        staticFiles[getItemPathname(item.url)] = {\n          absolutePath: pathJoin(clientDir, item.path),\n          cacheable: item.cacheable,\n          hash: item.hash,\n          // Link from source to its map\n          sourceMapUrl: item.sourceMapUrl,\n          type: item.type\n        };\n\n        if (item.sourceMap) {\n          // Serve the source map too, under the specified URL. We assume\n          // all source maps are cacheable.\n          staticFiles[getItemPathname(item.sourceMapUrl)] = {\n            absolutePath: pathJoin(clientDir, item.sourceMap),\n            cacheable: true\n          };\n        }\n      }\n    });\n\n    const { PUBLIC_SETTINGS } = __meteor_runtime_config__;\n    const configOverrides = {\n      PUBLIC_SETTINGS,\n    };\n\n    const oldProgram = WebApp.clientPrograms[arch];\n    const newProgram = WebApp.clientPrograms[arch] = {\n      format: \"web-program-pre1\",\n      manifest: manifest,\n      // Use arrow functions so that these versions can be lazily\n      // calculated later, and so that they will not be included in the\n      // staticFiles[manifestUrl].content string below.\n      //\n      // Note: these version calculations must be kept in agreement with\n      // CordovaBuilder#appendVersion in tools/cordova/builder.js, or hot\n      // code push will reload Cordova apps unnecessarily.\n      version: () => WebAppHashing.calculateClientHash(\n        manifest, null, configOverrides),\n      versionRefreshable: () => WebAppHashing.calculateClientHash(\n        manifest, type => type === \"css\", configOverrides),\n      versionNonRefreshable: () => WebAppHashing.calculateClientHash(\n        manifest, (type, replaceable) => type !== \"css\" && !replaceable, configOverrides),\n      versionReplaceable: () => WebAppHashing.calculateClientHash(\n        manifest, (_type, replaceable) => {\n          if (Meteor.isProduction && replaceable) {\n            throw new Error('Unexpected replaceable file in production');\n          }\n\n          return replaceable\n        },\n        configOverrides\n      ),\n      cordovaCompatibilityVersions: programJson.cordovaCompatibilityVersions,\n      PUBLIC_SETTINGS,\n    };\n\n    // Expose program details as a string reachable via the following URL.\n    const manifestUrlPrefix = \"/__\" + arch.replace(/^web\\./, \"\");\n    const manifestUrl = manifestUrlPrefix + getItemPathname(\"/manifest.json\");\n\n    staticFiles[manifestUrl] = () => {\n      if (Package.autoupdate) {\n        const {\n          AUTOUPDATE_VERSION =\n            Package.autoupdate.Autoupdate.autoupdateVersion\n        } = process.env;\n\n        if (AUTOUPDATE_VERSION) {\n          newProgram.version = AUTOUPDATE_VERSION;\n        }\n      }\n\n      if (typeof newProgram.version === \"function\") {\n        newProgram.version = newProgram.version();\n      }\n\n      return {\n        content: JSON.stringify(newProgram),\n        cacheable: false,\n        hash: newProgram.version,\n        type: \"json\"\n      };\n    };\n\n    generateBoilerplateForArch(arch);\n\n    // If there are any requests waiting on oldProgram.paused, let them\n    // continue now (using the new program).\n    if (oldProgram &&\n        oldProgram.paused) {\n      oldProgram.unpause();\n    }\n  };\n\n  const defaultOptionsForArch = {\n    'web.cordova': {\n      runtimeConfigOverrides: {\n        // XXX We use absoluteUrl() here so that we serve https://\n        // URLs to cordova clients if force-ssl is in use. If we were\n        // to use __meteor_runtime_config__.ROOT_URL instead of\n        // absoluteUrl(), then Cordova clients would immediately get a\n        // HCP setting their DDP_DEFAULT_CONNECTION_URL to\n        // http://example.meteor.com. This breaks the app, because\n        // force-ssl doesn't serve CORS headers on 302\n        // redirects. (Plus it's undesirable to have clients\n        // connecting to http://example.meteor.com when force-ssl is\n        // in use.)\n        DDP_DEFAULT_CONNECTION_URL: process.env.MOBILE_DDP_URL ||\n          Meteor.absoluteUrl(),\n        ROOT_URL: process.env.MOBILE_ROOT_URL ||\n          Meteor.absoluteUrl()\n      }\n    },\n\n    \"web.browser\": {\n      runtimeConfigOverrides: {\n        isModern: true,\n      }\n    },\n\n    \"web.browser.legacy\": {\n      runtimeConfigOverrides: {\n        isModern: false,\n      }\n    },\n  };\n\n  WebAppInternals.generateBoilerplate = function () {\n    // This boilerplate will be served to the mobile devices when used with\n    // Meteor/Cordova for the Hot-Code Push and since the file will be served by\n    // the device's server, it is important to set the DDP url to the actual\n    // Meteor server accepting DDP connections and not the device's file server.\n    syncQueue.runTask(function() {\n      Object.keys(WebApp.clientPrograms)\n        .forEach(generateBoilerplateForArch);\n    });\n  };\n\n  function generateBoilerplateForArch(arch) {\n    const program = WebApp.clientPrograms[arch];\n    const additionalOptions = defaultOptionsForArch[arch] || {};\n    const { baseData } = boilerplateByArch[arch] =\n      WebAppInternals.generateBoilerplateInstance(\n        arch,\n        program.manifest,\n        additionalOptions,\n      );\n    // We need the runtime config with overrides for meteor_runtime_config.js:\n    program.meteorRuntimeConfig = JSON.stringify({\n      ...__meteor_runtime_config__,\n      ...(additionalOptions.runtimeConfigOverrides || null),\n    });\n    program.refreshableAssets = baseData.css.map(file => ({\n      url: bundledJsCssUrlRewriteHook(file.url),\n    }));\n  }\n\n  WebAppInternals.reloadClientPrograms();\n\n  // webserver\n  var app = connect();\n\n  // Packages and apps can add handlers that run before any other Meteor\n  // handlers via WebApp.rawConnectHandlers.\n  var rawConnectHandlers = connect();\n  app.use(rawConnectHandlers);\n\n  // Auto-compress any json, javascript, or text.\n  app.use(compress({filter: shouldCompress}));\n\n  // parse cookies into an object\n  app.use(cookieParser());\n\n  // We're not a proxy; reject (without crashing) attempts to treat us like\n  // one. (See #1212.)\n  app.use(function(req, res, next) {\n    if (RoutePolicy.isValidUrl(req.url)) {\n      next();\n      return;\n    }\n    res.writeHead(400);\n    res.write(\"Not a proxy\");\n    res.end();\n  });\n\n  // Parse the query string into res.query. Used by oauth_server, but it's\n  // generally pretty handy..\n  //\n  // Do this before the next middleware destroys req.url if a path prefix\n  // is set to close #10111.\n  app.use(function (request, response, next) {\n    request.query = qs.parse(parseUrl(request.url).query);\n    next();\n  });\n\n  function getPathParts(path) {\n    const parts = path.split(\"/\");\n    while (parts[0] === \"\") parts.shift();\n    return parts;\n  }\n\n  function isPrefixOf(prefix, array) {\n    return prefix.length <= array.length &&\n      prefix.every((part, i) => part === array[i]);\n  }\n\n  // Strip off the path prefix, if it exists.\n  app.use(function (request, response, next) {\n    const pathPrefix = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX;\n    const { pathname, search } = parseUrl(request.url);\n\n    // check if the path in the url starts with the path prefix\n    if (pathPrefix) {\n      const prefixParts = getPathParts(pathPrefix);\n      const pathParts = getPathParts(pathname);\n      if (isPrefixOf(prefixParts, pathParts)) {\n        request.url = \"/\" + pathParts.slice(prefixParts.length).join(\"/\");\n        if (search) {\n          request.url += search;\n        }\n        return next();\n      }\n    }\n\n    if (pathname === \"/favicon.ico\" ||\n        pathname === \"/robots.txt\") {\n      return next();\n    }\n\n    if (pathPrefix) {\n      response.writeHead(404);\n      response.write(\"Unknown path\");\n      response.end();\n      return;\n    }\n\n    next();\n  });\n\n  // Serve static files from the manifest.\n  // This is inspired by the 'static' middleware.\n  app.use(function (req, res, next) {\n    WebAppInternals.staticFilesMiddleware(\n      WebAppInternals.staticFilesByArch,\n      req, res, next\n    );\n  });\n\n  // Core Meteor packages like dynamic-import can add handlers before\n  // other handlers added by package and application code.\n  app.use(WebAppInternals.meteorInternalHandlers = connect());\n\n  // Packages and apps can add handlers to this via WebApp.connectHandlers.\n  // They are inserted before our default handler.\n  var packageAndAppHandlers = connect();\n  app.use(packageAndAppHandlers);\n\n  var suppressConnectErrors = false;\n  // connect knows it is an error handler because it has 4 arguments instead of\n  // 3. go figure.  (It is not smart enough to find such a thing if it's hidden\n  // inside packageAndAppHandlers.)\n  app.use(function (err, req, res, next) {\n    if (!err || !suppressConnectErrors || !req.headers['x-suppress-error']) {\n      next(err);\n      return;\n    }\n    res.writeHead(err.status, { 'Content-Type': 'text/plain' });\n    res.end(\"An error message\");\n  });\n\n  app.use(async function (req, res, next) {\n    if (! appUrl(req.url)) {\n      return next();\n\n    } else {\n      var headers = {\n        'Content-Type': 'text/html; charset=utf-8'\n      };\n\n      if (shuttingDown) {\n        headers['Connection'] = 'Close';\n      }\n\n      var request = WebApp.categorizeRequest(req);\n\n      if (request.url.query && request.url.query['meteor_css_resource']) {\n        // In this case, we're requesting a CSS resource in the meteor-specific\n        // way, but we don't have it.  Serve a static css file that indicates that\n        // we didn't have it, so we can detect that and refresh.  Make sure\n        // that any proxies or CDNs don't cache this error!  (Normally proxies\n        // or CDNs are smart enough not to cache error pages, but in order to\n        // make this hack work, we need to return the CSS file as a 200, which\n        // would otherwise be cached.)\n        headers['Content-Type'] = 'text/css; charset=utf-8';\n        headers['Cache-Control'] = 'no-cache';\n        res.writeHead(200, headers);\n        res.write(\".meteor-css-not-found-error { width: 0px;}\");\n        res.end();\n        return;\n      }\n\n      if (request.url.query && request.url.query['meteor_js_resource']) {\n        // Similarly, we're requesting a JS resource that we don't have.\n        // Serve an uncached 404. (We can't use the same hack we use for CSS,\n        // because actually acting on that hack requires us to have the JS\n        // already!)\n        headers['Cache-Control'] = 'no-cache';\n        res.writeHead(404, headers);\n        res.end(\"404 Not Found\");\n        return;\n      }\n\n      if (request.url.query && request.url.query['meteor_dont_serve_index']) {\n        // When downloading files during a Cordova hot code push, we need\n        // to detect if a file is not available instead of inadvertently\n        // downloading the default index page.\n        // So similar to the situation above, we serve an uncached 404.\n        headers['Cache-Control'] = 'no-cache';\n        res.writeHead(404, headers);\n        res.end(\"404 Not Found\");\n        return;\n      }\n\n      const { arch } = request;\n      assert.strictEqual(typeof arch, \"string\", { arch });\n\n      if (! hasOwn.call(WebApp.clientPrograms, arch)) {\n        // We could come here in case we run with some architectures excluded\n        headers['Cache-Control'] = 'no-cache';\n        res.writeHead(404, headers);\n        if (Meteor.isDevelopment) {\n          res.end(`No client program found for the ${arch} architecture.`);\n        } else {\n          // Safety net, but this branch should not be possible.\n          res.end(\"404 Not Found\");\n        }\n        return;\n      }\n\n      // If pauseClient(arch) has been called, program.paused will be a\n      // Promise that will be resolved when the program is unpaused.\n      await WebApp.clientPrograms[arch].paused;\n\n      return getBoilerplateAsync(request, arch).then(({\n        stream,\n        statusCode,\n        headers: newHeaders,\n      }) => {\n        if (!statusCode) {\n          statusCode = res.statusCode ? res.statusCode : 200;\n        }\n\n        if (newHeaders) {\n          Object.assign(headers, newHeaders);\n        }\n\n        res.writeHead(statusCode, headers);\n\n        stream.pipe(res, {\n          // End the response when the stream ends.\n          end: true,\n        });\n\n      }).catch(error => {\n        Log.error(\"Error running template: \" + error.stack);\n        res.writeHead(500, headers);\n        res.end();\n      });\n    }\n  });\n\n  // Return 404 by default, if no other handlers serve this URL.\n  app.use(function (req, res) {\n    res.writeHead(404);\n    res.end();\n  });\n\n\n  var httpServer = createServer(app);\n  var onListeningCallbacks = [];\n\n  // After 5 seconds w/o data on a socket, kill it.  On the other hand, if\n  // there's an outstanding request, give it a higher timeout instead (to avoid\n  // killing long-polling requests)\n  httpServer.setTimeout(SHORT_SOCKET_TIMEOUT);\n\n  // Do this here, and then also in livedata/stream_server.js, because\n  // stream_server.js kills all the current request handlers when installing its\n  // own.\n  httpServer.on('request', WebApp._timeoutAdjustmentRequestCallback);\n\n  // If the client gave us a bad request, tell it instead of just closing the\n  // socket. This lets load balancers in front of us differentiate between \"a\n  // server is randomly closing sockets for no reason\" and \"client sent a bad\n  // request\".\n  //\n  // This will only work on Node 6; Node 4 destroys the socket before calling\n  // this event. See https://github.com/nodejs/node/pull/4557/ for details.\n  httpServer.on('clientError', (err, socket) => {\n    // Pre-Node-6, do nothing.\n    if (socket.destroyed) {\n      return;\n    }\n\n    if (err.message === 'Parse Error') {\n      socket.end('HTTP/1.1 400 Bad Request\\r\\n\\r\\n');\n    } else {\n      // For other errors, use the default behavior as if we had no clientError\n      // handler.\n      socket.destroy(err);\n    }\n  });\n\n  // start up app\n  _.extend(WebApp, {\n    connectHandlers: packageAndAppHandlers,\n    rawConnectHandlers: rawConnectHandlers,\n    httpServer: httpServer,\n    connectApp: app,\n    // For testing.\n    suppressConnectErrors: function () {\n      suppressConnectErrors = true;\n    },\n    onListening: function (f) {\n      if (onListeningCallbacks)\n        onListeningCallbacks.push(f);\n      else\n        f();\n    },\n    // This can be overridden by users who want to modify how listening works\n    // (eg, to run a proxy like Apollo Engine Proxy in front of the server).\n    startListening: function (httpServer, listenOptions, cb) {\n      httpServer.listen(listenOptions, cb);\n    },\n  });\n\n  // Let the rest of the packages (and Meteor.startup hooks) insert connect\n  // middlewares and update __meteor_runtime_config__, then keep going to set up\n  // actually serving HTML.\n  exports.main = argv => {\n    WebAppInternals.generateBoilerplate();\n\n    const startHttpServer = listenOptions => {\n      WebApp.startListening(httpServer, listenOptions, Meteor.bindEnvironment(() => {\n        if (process.env.METEOR_PRINT_ON_LISTEN) {\n          console.log(\"LISTENING\");\n        }\n        const callbacks = onListeningCallbacks;\n        onListeningCallbacks = null;\n        callbacks.forEach(callback => { callback(); });\n      }, e => {\n        console.error(\"Error listening:\", e);\n        console.error(e && e.stack);\n      }));\n    };\n\n    let localPort = process.env.PORT || 0;\n    let unixSocketPath = process.env.UNIX_SOCKET_PATH;\n\n    if (unixSocketPath) {\n      if (cluster.isWorker) {\n        const workerName = cluster.worker.process.env.name || cluster.worker.id\n        unixSocketPath += \".\" + workerName + \".sock\";\n      }\n      // Start the HTTP server using a socket file.\n      removeExistingSocketFile(unixSocketPath);\n      startHttpServer({ path: unixSocketPath });\n      registerSocketFileCleanup(unixSocketPath);\n    } else {\n      localPort = isNaN(Number(localPort)) ? localPort : Number(localPort);\n      if (/\\\\\\\\?.+\\\\pipe\\\\?.+/.test(localPort)) {\n        // Start the HTTP server using Windows Server style named pipe.\n        startHttpServer({ path: localPort });\n      } else if (typeof localPort === \"number\") {\n        // Start the HTTP server using TCP.\n        startHttpServer({\n          port: localPort,\n          host: process.env.BIND_IP || \"0.0.0.0\"\n        });\n      } else {\n        throw new Error(\"Invalid PORT specified\");\n      }\n    }\n\n    return \"DAEMON\";\n  };\n}\n\nvar inlineScriptsAllowed = true;\n\nWebAppInternals.inlineScriptsAllowed = function () {\n  return inlineScriptsAllowed;\n};\n\nWebAppInternals.setInlineScriptsAllowed = function (value) {\n  inlineScriptsAllowed = value;\n  WebAppInternals.generateBoilerplate();\n};\n\nvar sriMode;\n\nWebAppInternals.enableSubresourceIntegrity = function(use_credentials = false) {\n  sriMode = use_credentials ? 'use-credentials' : 'anonymous';\n  WebAppInternals.generateBoilerplate();\n};\n\nWebAppInternals.setBundledJsCssUrlRewriteHook = function (hookFn) {\n  bundledJsCssUrlRewriteHook = hookFn;\n  WebAppInternals.generateBoilerplate();\n};\n\nWebAppInternals.setBundledJsCssPrefix = function (prefix) {\n  var self = this;\n  self.setBundledJsCssUrlRewriteHook(\n    function (url) {\n      return prefix + url;\n  });\n};\n\n// Packages can call `WebAppInternals.addStaticJs` to specify static\n// JavaScript to be included in the app. This static JS will be inlined,\n// unless inline scripts have been disabled, in which case it will be\n// served under `/<sha1 of contents>`.\nvar additionalStaticJs = {};\nWebAppInternals.addStaticJs = function (contents) {\n  additionalStaticJs[\"/\" + sha1(contents) + \".js\"] = contents;\n};\n\n// Exported for tests\nWebAppInternals.getBoilerplate = getBoilerplate;\nWebAppInternals.additionalStaticJs = additionalStaticJs;\n\n// Start the server!\nrunWebAppServer();\n","import npmConnect from \"connect\";\n\nexport function connect(...connectArgs) {\n  const handlers = npmConnect.apply(this, connectArgs);\n  const originalUse = handlers.use;\n\n  // Wrap the handlers.use method so that any provided handler functions\n  // alway run in a Fiber.\n  handlers.use = function use(...useArgs) {\n    const { stack } = this;\n    const originalLength = stack.length;\n    const result = originalUse.apply(this, useArgs);\n\n    // If we just added anything to the stack, wrap each new entry.handle\n    // with a function that calls Promise.asyncApply to ensure the\n    // original handler runs in a Fiber.\n    for (let i = originalLength; i < stack.length; ++i) {\n      const entry = stack[i];\n      const originalHandle = entry.handle;\n\n      if (originalHandle.length >= 4) {\n        // If the original handle had four (or more) parameters, the\n        // wrapper must also have four parameters, since connect uses\n        // handle.length to dermine whether to pass the error as the first\n        // argument to the handle function.\n        entry.handle = function handle(err, req, res, next) {\n          return Promise.asyncApply(originalHandle, this, arguments);\n        };\n      } else {\n        entry.handle = function handle(req, res, next) {\n          return Promise.asyncApply(originalHandle, this, arguments);\n        };\n      }\n    }\n\n    return result;\n  };\n\n  return handlers;\n}\n","import { statSync, unlinkSync, existsSync } from 'fs';\n\n// Since a new socket file will be created when the HTTP server\n// starts up, if found remove the existing file.\n//\n// WARNING:\n// This will remove the configured socket file without warning. If\n// the configured socket file is already in use by another application,\n// it will still be removed. Node does not provide a reliable way to\n// differentiate between a socket file that is already in use by\n// another application or a stale socket file that has been\n// left over after a SIGKILL. Since we have no reliable way to\n// differentiate between these two scenarios, the best course of\n// action during startup is to remove any existing socket file. This\n// is not the safest course of action as removing the existing socket\n// file could impact an application using it, but this approach helps\n// ensure the HTTP server can startup without manual\n// intervention (e.g. asking for the verification and cleanup of socket\n// files before allowing the HTTP server to be started).\n//\n// The above being said, as long as the socket file path is\n// configured carefully when the application is deployed (and extra\n// care is taken to make sure the configured path is unique and doesn't\n// conflict with another socket file path), then there should not be\n// any issues with this approach.\nexport const removeExistingSocketFile = (socketPath) => {\n  try {\n    if (statSync(socketPath).isSocket()) {\n      // Since a new socket file will be created, remove the existing\n      // file.\n      unlinkSync(socketPath);\n    } else {\n      throw new Error(\n        `An existing file was found at \"${socketPath}\" and it is not ` +\n        'a socket file. Please confirm PORT is pointing to valid and ' +\n        'un-used socket file path.'\n      );\n    }\n  } catch (error) {\n    // If there is no existing socket file to cleanup, great, we'll\n    // continue normally. If the caught exception represents any other\n    // issue, re-throw.\n    if (error.code !== 'ENOENT') {\n      throw error;\n    }\n  }\n};\n\n// Remove the socket file when done to avoid leaving behind a stale one.\n// Note - a stale socket file is still left behind if the running node\n// process is killed via signal 9 - SIGKILL.\nexport const registerSocketFileCleanup =\n  (socketPath, eventEmitter = process) => {\n    ['exit', 'SIGINT', 'SIGHUP', 'SIGTERM'].forEach(signal => {\n      eventEmitter.on(signal, Meteor.bindEnvironment(() => {\n        if (existsSync(socketPath)) {\n          unlinkSync(socketPath);\n        }\n      }));\n    });\n  };\n"]}}]