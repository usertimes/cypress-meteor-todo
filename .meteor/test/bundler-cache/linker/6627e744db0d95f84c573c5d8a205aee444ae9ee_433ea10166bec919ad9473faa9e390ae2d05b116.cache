[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package.modules.meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Symbol = Package['ecmascript-runtime-client'].Symbol;\nvar Map = Package['ecmascript-runtime-client'].Map;\nvar Set = Package['ecmascript-runtime-client'].Set;\n\n/* Package-scope variables */\nvar Random;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"random\":{\"main_client.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/random/main_client.js                                                               //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nmodule.export({\n  Random: function () {\n    return Random;\n  }\n});\nvar BrowserRandomGenerator;\nmodule.link(\"./BrowserRandomGenerator\", {\n  \"default\": function (v) {\n    BrowserRandomGenerator = v;\n  }\n}, 0);\nvar createAleaGeneratorWithGeneratedSeed;\nmodule.link(\"./createAleaGenerator\", {\n  \"default\": function (v) {\n    createAleaGeneratorWithGeneratedSeed = v;\n  }\n}, 1);\nvar createRandom;\nmodule.link(\"./createRandom\", {\n  \"default\": function (v) {\n    createRandom = v;\n  }\n}, 2);\nvar generator;\n\nif (typeof window !== 'undefined' && window.crypto && window.crypto.getRandomValues) {\n  generator = new BrowserRandomGenerator();\n} else {\n  // On IE 10 and below, there's no browser crypto API\n  // available. Fall back to Alea\n  //\n  // XXX looks like at the moment, we use Alea in IE 11 as well,\n  // which has `window.msCrypto` instead of `window.crypto`.\n  generator = createAleaGeneratorWithGeneratedSeed();\n}\n\nvar Random = createRandom(generator);\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"AbstractRandomGenerator.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/random/AbstractRandomGenerator.js                                                   //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nmodule.export({\n  \"default\": function () {\n    return RandomGenerator;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar UNMISTAKABLE_CHARS = '23456789ABCDEFGHJKLMNPQRSTWXYZabcdefghijkmnopqrstuvwxyz';\nvar BASE64_CHARS = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ' + '0123456789-_'; // `type` is one of `RandomGenerator.Type` as defined below.\n//\n// options:\n// - seeds: (required, only for RandomGenerator.Type.ALEA) an array\n//   whose items will be `toString`ed and used as the seed to the Alea\n//   algorithm\n\nvar RandomGenerator = /*#__PURE__*/function () {\n  function RandomGenerator() {}\n\n  var _proto = RandomGenerator.prototype;\n\n  /**\n   * @name Random.fraction\n   * @summary Return a number between 0 and 1, like `Math.random`.\n   * @locus Anywhere\n   */\n  _proto.fraction = function () {\n    function fraction() {\n      throw new Error(\"Unknown random generator type\");\n    }\n\n    return fraction;\n  }()\n  /**\n   * @name Random.hexString\n   * @summary Return a random string of `n` hexadecimal digits.\n   * @locus Anywhere\n   * @param {Number} n Length of the string\n   */\n  ;\n\n  _proto.hexString = function () {\n    function hexString(digits) {\n      return this._randomString(digits, '0123456789abcdef');\n    }\n\n    return hexString;\n  }();\n\n  _proto._randomString = function () {\n    function _randomString(charsCount, alphabet) {\n      var result = '';\n\n      for (var i = 0; i < charsCount; i++) {\n        result += this.choice(alphabet);\n      }\n\n      return result;\n    }\n\n    return _randomString;\n  }()\n  /**\n   * @name Random.id\n   * @summary Return a unique identifier, such as `\"Jjwjg6gouWLXhMGKW\"`, that is\n   * likely to be unique in the whole world.\n   * @locus Anywhere\n   * @param {Number} [n] Optional length of the identifier in characters\n   *   (defaults to 17)\n   */\n  ;\n\n  _proto.id = function () {\n    function id(charsCount) {\n      // 17 characters is around 96 bits of entropy, which is the amount of\n      // state in the Alea PRNG.\n      if (charsCount === undefined) {\n        charsCount = 17;\n      }\n\n      return this._randomString(charsCount, UNMISTAKABLE_CHARS);\n    }\n\n    return id;\n  }()\n  /**\n   * @name Random.secret\n   * @summary Return a random string of printable characters with 6 bits of\n   * entropy per character. Use `Random.secret` for security-critical secrets\n   * that are intended for machine, rather than human, consumption.\n   * @locus Anywhere\n   * @param {Number} [n] Optional length of the secret string (defaults to 43\n   *   characters, or 256 bits of entropy)\n   */\n  ;\n\n  _proto.secret = function () {\n    function secret(charsCount) {\n      // Default to 256 bits of entropy, or 43 characters at 6 bits per\n      // character.\n      if (charsCount === undefined) {\n        charsCount = 43;\n      }\n\n      return this._randomString(charsCount, BASE64_CHARS);\n    }\n\n    return secret;\n  }()\n  /**\n   * @name Random.choice\n   * @summary Return a random element of the given array or string.\n   * @locus Anywhere\n   * @param {Array|String} arrayOrString Array or string to choose from\n   */\n  ;\n\n  _proto.choice = function () {\n    function choice(arrayOrString) {\n      var index = Math.floor(this.fraction() * arrayOrString.length);\n\n      if (typeof arrayOrString === 'string') {\n        return arrayOrString.substr(index, 1);\n      }\n\n      return arrayOrString[index];\n    }\n\n    return choice;\n  }();\n\n  return RandomGenerator;\n}();\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"AleaRandomGenerator.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/random/AleaRandomGenerator.js                                                       //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 0);\nmodule.export({\n  \"default\": function () {\n    return AleaRandomGenerator;\n  }\n});\nvar RandomGenerator;\nmodule.link(\"./AbstractRandomGenerator\", {\n  \"default\": function (v) {\n    RandomGenerator = v;\n  }\n}, 0);\n\n// Alea PRNG, which is not cryptographically strong\n// see http://baagoe.org/en/wiki/Better_random_numbers_for_javascript\n// for a full discussion and Alea implementation.\nfunction Alea(seeds) {\n  function Mash() {\n    var n = 0xefc8249d;\n\n    var mash = function (data) {\n      data = data.toString();\n\n      for (var i = 0; i < data.length; i++) {\n        n += data.charCodeAt(i);\n        var h = 0.02519603282416938 * n;\n        n = h >>> 0;\n        h -= n;\n        h *= n;\n        n = h >>> 0;\n        h -= n;\n        n += h * 0x100000000; // 2^32\n      }\n\n      return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n    };\n\n    mash.version = 'Mash 0.9';\n    return mash;\n  }\n\n  var s0 = 0;\n  var s1 = 0;\n  var s2 = 0;\n  var c = 1;\n\n  if (seeds.length === 0) {\n    seeds = [+new Date()];\n  }\n\n  var mash = Mash();\n  s0 = mash(' ');\n  s1 = mash(' ');\n  s2 = mash(' ');\n\n  for (var i = 0; i < seeds.length; i++) {\n    s0 -= mash(seeds[i]);\n\n    if (s0 < 0) {\n      s0 += 1;\n    }\n\n    s1 -= mash(seeds[i]);\n\n    if (s1 < 0) {\n      s1 += 1;\n    }\n\n    s2 -= mash(seeds[i]);\n\n    if (s2 < 0) {\n      s2 += 1;\n    }\n  }\n\n  mash = null;\n\n  var random = function () {\n    var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n\n    s0 = s1;\n    s1 = s2;\n    return s2 = t - (c = t | 0);\n  };\n\n  random.uint32 = function () {\n    return random() * 0x100000000;\n  }; // 2^32\n\n\n  random.fract53 = function () {\n    return random() + (random() * 0x200000 | 0) * 1.1102230246251565e-16;\n  }; // 2^-53\n\n\n  random.version = 'Alea 0.9';\n  random.args = seeds;\n  return random;\n} // options:\n// - seeds: an array\n//   whose items will be `toString`ed and used as the seed to the Alea\n//   algorithm\n\n\nvar AleaRandomGenerator = /*#__PURE__*/function (_RandomGenerator) {\n  _inheritsLoose(AleaRandomGenerator, _RandomGenerator);\n\n  function AleaRandomGenerator() {\n    var _this;\n\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$seeds = _ref.seeds,\n        seeds = _ref$seeds === void 0 ? [] : _ref$seeds;\n\n    _this = _RandomGenerator.call(this) || this;\n\n    if (!seeds) {\n      throw new Error('No seeds were provided for Alea PRNG');\n    }\n\n    _this.alea = Alea(seeds);\n    return _this;\n  }\n  /**\n   * @name Random.fraction\n   * @summary Return a number between 0 and 1, like `Math.random`.\n   * @locus Anywhere\n   */\n\n\n  var _proto = AleaRandomGenerator.prototype;\n\n  _proto.fraction = function () {\n    function fraction() {\n      return this.alea();\n    }\n\n    return fraction;\n  }();\n\n  return AleaRandomGenerator;\n}(RandomGenerator);\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"BrowserRandomGenerator.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/random/BrowserRandomGenerator.js                                                    //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 0);\nmodule.export({\n  \"default\": function () {\n    return BrowserRandomGenerator;\n  }\n});\nvar RandomGenerator;\nmodule.link(\"./AbstractRandomGenerator\", {\n  \"default\": function (v) {\n    RandomGenerator = v;\n  }\n}, 0);\n\nvar BrowserRandomGenerator = /*#__PURE__*/function (_RandomGenerator) {\n  _inheritsLoose(BrowserRandomGenerator, _RandomGenerator);\n\n  function BrowserRandomGenerator() {\n    return _RandomGenerator.apply(this, arguments) || this;\n  }\n\n  var _proto = BrowserRandomGenerator.prototype;\n\n  /**\n   * @name Random.fraction\n   * @summary Return a number between 0 and 1, like `Math.random`.\n   * @locus Anywhere\n   */\n  _proto.fraction = function () {\n    function fraction() {\n      var array = new Uint32Array(1);\n      window.crypto.getRandomValues(array);\n      return array[0] * 2.3283064365386963e-10; // 2^-32\n    }\n\n    return fraction;\n  }();\n\n  return BrowserRandomGenerator;\n}(RandomGenerator);\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createAleaGenerator.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/random/createAleaGenerator.js                                                       //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nmodule.export({\n  \"default\": function () {\n    return createAleaGenerator;\n  }\n});\nvar AleaRandomGenerator;\nmodule.link(\"./AleaRandomGenerator\", {\n  \"default\": function (v) {\n    AleaRandomGenerator = v;\n  }\n}, 0);\n// instantiate RNG.  Heuristically collect entropy from various sources when a\n// cryptographic PRNG isn't available.\n// client sources\nvar height = typeof window !== 'undefined' && window.innerHeight || typeof document !== 'undefined' && document.documentElement && document.documentElement.clientHeight || typeof document !== 'undefined' && document.body && document.body.clientHeight || 1;\nvar width = typeof window !== 'undefined' && window.innerWidth || typeof document !== 'undefined' && document.documentElement && document.documentElement.clientWidth || typeof document !== 'undefined' && document.body && document.body.clientWidth || 1;\nvar agent = typeof navigator !== 'undefined' && navigator.userAgent || '';\n\nfunction createAleaGenerator() {\n  return new AleaRandomGenerator({\n    seeds: [new Date(), height, width, agent, Math.random()]\n  });\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"createRandom.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                              //\n// packages/random/createRandom.js                                                              //\n//                                                                                              //\n//////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                //\nmodule.export({\n  \"default\": function () {\n    return createRandom;\n  }\n});\nvar AleaRandomGenerator;\nmodule.link(\"./AleaRandomGenerator\", {\n  \"default\": function (v) {\n    AleaRandomGenerator = v;\n  }\n}, 0);\nvar createAleaGeneratorWithGeneratedSeed;\nmodule.link(\"./createAleaGenerator\", {\n  \"default\": function (v) {\n    createAleaGeneratorWithGeneratedSeed = v;\n  }\n}, 1);\n\nfunction createRandom(generator) {\n  // Create a non-cryptographically secure PRNG with a given seed (using\n  // the Alea algorithm)\n  generator.createWithSeeds = function () {\n    for (var _len = arguments.length, seeds = new Array(_len), _key = 0; _key < _len; _key++) {\n      seeds[_key] = arguments[_key];\n    }\n\n    if (seeds.length === 0) {\n      throw new Error('No seeds were provided');\n    }\n\n    return new AleaRandomGenerator({\n      seeds: seeds\n    });\n  }; // Used like `Random`, but much faster and not cryptographically\n  // secure\n\n\n  generator.insecure = createAleaGeneratorWithGeneratedSeed();\n  return generator;\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/node_modules/meteor/random/main_client.js\");\n\n/* Exports */\nPackage._define(\"random\", exports, {\n  Random: Random\n});\n\n})();\n","servePath":"/packages/random.js","sourceMap":{"version":3,"sources":["packages/random/main_client.js","packages/random/AbstractRandomGenerator.js","packages/random/AleaRandomGenerator.js","packages/random/BrowserRandomGenerator.js","packages/random/createAleaGenerator.js","packages/random/createRandom.js"],"names":["module","export","Random","BrowserRandomGenerator","link","v","createAleaGeneratorWithGeneratedSeed","createRandom","generator","window","crypto","getRandomValues","RandomGenerator","Meteor","UNMISTAKABLE_CHARS","BASE64_CHARS","fraction","Error","hexString","digits","_randomString","charsCount","alphabet","result","i","choice","id","undefined","secret","arrayOrString","index","Math","floor","length","substr","_inheritsLoose","default","AleaRandomGenerator","Alea","seeds","Mash","n","mash","data","toString","charCodeAt","h","version","s0","s1","s2","c","Date","random","t","uint32","fract53","args","alea","array","Uint32Array","createAleaGenerator","height","innerHeight","document","documentElement","clientHeight","body","width","innerWidth","clientWidth","agent","navigator","userAgent","createWithSeeds","insecure"],"mappings":"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","file":"/packages/random.js","sourcesContent":["// We use cryptographically strong PRNGs (window.crypto.getRandomValues())\n// when available. If these PRNGs fail, we fall back to the Alea PRNG, which is \n// not cryptographically strong, and we seed it with various sources \n// such as the date, Math.random, and window size on the client.\n// When using window.crypto.getRandomValues() or alea, the primitive is fraction \n// and we use that to construct hex string.\n\nimport BrowserRandomGenerator from './BrowserRandomGenerator';\nimport createAleaGeneratorWithGeneratedSeed from './createAleaGenerator';\nimport createRandom from './createRandom';\n\nlet generator;\nif (typeof window !== 'undefined' && window.crypto &&\n  window.crypto.getRandomValues) {\n  generator = new BrowserRandomGenerator();\n} else {\n  // On IE 10 and below, there's no browser crypto API\n  // available. Fall back to Alea\n  //\n  // XXX looks like at the moment, we use Alea in IE 11 as well,\n  // which has `window.msCrypto` instead of `window.crypto`.\n  generator = createAleaGeneratorWithGeneratedSeed();\n}\n\n\nexport const Random = createRandom(generator);\n","// We use cryptographically strong PRNGs (crypto.getRandomBytes() on the server,\n// window.crypto.getRandomValues() in the browser) when available. If these\n// PRNGs fail, we fall back to the Alea PRNG, which is not cryptographically\n// strong, and we seed it with various sources such as the date, Math.random,\n// and window size on the client.  When using crypto.getRandomValues(), our\n// primitive is hexString(), from which we construct fraction(). When using\n// window.crypto.getRandomValues() or alea, the primitive is fraction and we use\n// that to construct hex string.\n\nimport { Meteor } from 'meteor/meteor';\n\nconst UNMISTAKABLE_CHARS = '23456789ABCDEFGHJKLMNPQRSTWXYZabcdefghijkmnopqrstuvwxyz';\nconst BASE64_CHARS = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n  '0123456789-_';\n\n// `type` is one of `RandomGenerator.Type` as defined below.\n//\n// options:\n// - seeds: (required, only for RandomGenerator.Type.ALEA) an array\n//   whose items will be `toString`ed and used as the seed to the Alea\n//   algorithm\nexport default class RandomGenerator {\n\n  /**\n   * @name Random.fraction\n   * @summary Return a number between 0 and 1, like `Math.random`.\n   * @locus Anywhere\n   */\n  fraction () {\n    throw new Error(`Unknown random generator type`);\n  }\n\n  /**\n   * @name Random.hexString\n   * @summary Return a random string of `n` hexadecimal digits.\n   * @locus Anywhere\n   * @param {Number} n Length of the string\n   */\n  hexString (digits) {\n    return this._randomString(digits, '0123456789abcdef');\n  }\n\n  _randomString (charsCount, alphabet) {\n    let result = '';\n    for (let i = 0; i < charsCount; i++) {\t\n      result += this.choice(alphabet);\n    }\n    return result;\n  }\n\n  /**\n   * @name Random.id\n   * @summary Return a unique identifier, such as `\"Jjwjg6gouWLXhMGKW\"`, that is\n   * likely to be unique in the whole world.\n   * @locus Anywhere\n   * @param {Number} [n] Optional length of the identifier in characters\n   *   (defaults to 17)\n   */\n  id (charsCount) {\n    // 17 characters is around 96 bits of entropy, which is the amount of\n    // state in the Alea PRNG.\n    if (charsCount === undefined) {\n      charsCount = 17;\n    }\n\n    return this._randomString(charsCount, UNMISTAKABLE_CHARS);\n  }\n\n  /**\n   * @name Random.secret\n   * @summary Return a random string of printable characters with 6 bits of\n   * entropy per character. Use `Random.secret` for security-critical secrets\n   * that are intended for machine, rather than human, consumption.\n   * @locus Anywhere\n   * @param {Number} [n] Optional length of the secret string (defaults to 43\n   *   characters, or 256 bits of entropy)\n   */\n  secret (charsCount) {\n    // Default to 256 bits of entropy, or 43 characters at 6 bits per\n    // character.\n    if (charsCount === undefined) {\n      charsCount = 43;\n    }\n\n    return this._randomString(charsCount, BASE64_CHARS);\n  }\n\n  /**\n   * @name Random.choice\n   * @summary Return a random element of the given array or string.\n   * @locus Anywhere\n   * @param {Array|String} arrayOrString Array or string to choose from\n   */\n  choice (arrayOrString) {\n    const index = Math.floor(this.fraction() * arrayOrString.length);\n    if (typeof arrayOrString === 'string') {\n      return arrayOrString.substr(index, 1);\n    }\n    return arrayOrString[index];\n  }\n}\n","import RandomGenerator from './AbstractRandomGenerator';\n\n// Alea PRNG, which is not cryptographically strong\n// see http://baagoe.org/en/wiki/Better_random_numbers_for_javascript\n// for a full discussion and Alea implementation.\nfunction Alea(seeds) {\n  function Mash() {\n    let n = 0xefc8249d;\n\n    const mash = (data) => {\n      data = data.toString();\n      for (let i = 0; i < data.length; i++) {\n        n += data.charCodeAt(i);\n        let h = 0.02519603282416938 * n;\n        n = h >>> 0;\n        h -= n;\n        h *= n;\n        n = h >>> 0;\n        h -= n;\n        n += h * 0x100000000; // 2^32\n      }\n      return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n    };\n\n    mash.version = 'Mash 0.9';\n    return mash;\n  }\n\n  let s0 = 0;\n  let s1 = 0;\n  let s2 = 0;\n  let c = 1;\n  if (seeds.length === 0) {\n    seeds = [+new Date];\n  }\n  let mash = Mash();\n  s0 = mash(' ');\n  s1 = mash(' ');\n  s2 = mash(' ');\n\n  for (let i = 0; i < seeds.length; i++) {\n    s0 -= mash(seeds[i]);\n    if (s0 < 0) {\n      s0 += 1;\n    }\n    s1 -= mash(seeds[i]);\n    if (s1 < 0) {\n      s1 += 1;\n    }\n    s2 -= mash(seeds[i]);\n    if (s2 < 0) {\n      s2 += 1;\n    }\n  }\n  mash = null;\n\n  const random = () => {\n    const t = (2091639 * s0) + (c * 2.3283064365386963e-10); // 2^-32\n    s0 = s1;\n    s1 = s2;\n    return s2 = t - (c = t | 0);\n  };\n\n  random.uint32 = () => random() * 0x100000000; // 2^32\n  random.fract53 = () => random() +\n        ((random() * 0x200000 | 0) * 1.1102230246251565e-16); // 2^-53\n\n  random.version = 'Alea 0.9';\n  random.args = seeds;\n  return random;\n}\n\n// options:\n// - seeds: an array\n//   whose items will be `toString`ed and used as the seed to the Alea\n//   algorithm\nexport default class AleaRandomGenerator extends RandomGenerator {\n  constructor ({ seeds = [] } = {}) {\n    super();\n    if (!seeds) {\n      throw new Error('No seeds were provided for Alea PRNG');\n    }\n    this.alea = Alea(seeds);\n  }\n\n  /**\n   * @name Random.fraction\n   * @summary Return a number between 0 and 1, like `Math.random`.\n   * @locus Anywhere\n   */\n  fraction () {\n    return this.alea();\n  }\n}\n","import RandomGenerator from './AbstractRandomGenerator';\n\n// cryptographically strong PRNGs available in modern browsers\nexport default class BrowserRandomGenerator extends RandomGenerator {\n  /**\n   * @name Random.fraction\n   * @summary Return a number between 0 and 1, like `Math.random`.\n   * @locus Anywhere\n   */\n  fraction () {\n    const array = new Uint32Array(1);\n    window.crypto.getRandomValues(array);\n    return array[0] * 2.3283064365386963e-10; // 2^-32\n  }\n}\n","import AleaRandomGenerator from './AleaRandomGenerator';\n\n// instantiate RNG.  Heuristically collect entropy from various sources when a\n// cryptographic PRNG isn't available.\n\n// client sources\nconst height = (typeof window !== 'undefined' && window.innerHeight) ||\n      (typeof document !== 'undefined'\n       && document.documentElement\n       && document.documentElement.clientHeight) ||\n      (typeof document !== 'undefined'\n       && document.body\n       && document.body.clientHeight) ||\n      1;\n\nconst width = (typeof window !== 'undefined' && window.innerWidth) ||\n      (typeof document !== 'undefined'\n       && document.documentElement\n       && document.documentElement.clientWidth) ||\n      (typeof document !== 'undefined'\n       && document.body\n       && document.body.clientWidth) ||\n      1;\n\nconst agent = (typeof navigator !== 'undefined' && navigator.userAgent) || '';\n\nexport default function createAleaGenerator() {\n  return new AleaRandomGenerator({\n    seeds: [new Date, height, width, agent, Math.random()],\n  });\n}\n","import AleaRandomGenerator from './AleaRandomGenerator'\nimport createAleaGeneratorWithGeneratedSeed from './createAleaGenerator';\n\nexport default function createRandom(generator) {\n  // Create a non-cryptographically secure PRNG with a given seed (using\n  // the Alea algorithm)\n  generator.createWithSeeds = (...seeds) => {\n    if (seeds.length === 0) {\n      throw new Error('No seeds were provided');\n    }\n    return new AleaRandomGenerator({ seeds });\n  };\n\n  // Used like `Random`, but much faster and not cryptographically\n  // secure\n  generator.insecure = createAleaGeneratorWithGeneratedSeed();\n\n  return generator;\n}\n"]}}]