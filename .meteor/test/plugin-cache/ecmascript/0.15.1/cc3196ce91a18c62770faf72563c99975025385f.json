{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/idrismahjoubi/cypress-meteor-react/packages/base64/base64.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/base64/base64.js","filename":"/Users/idrismahjoubi/cypress-meteor-react/packages/base64/base64.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"test","cwd":"/Users/idrismahjoubi/cypress-meteor-react","root":"/Users/idrismahjoubi/cypress-meteor-react","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/idrismahjoubi/cypress-meteor-react/packages/base64/base64.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/base64/base64.js"}},"code":"module.export({\n  Base64: function () {\n    return Base64;\n  }\n});\n// Base 64 encoding\nvar BASE_64_CHARS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nvar BASE_64_VALS = Object.create(null);\n\nvar getChar = function (val) {\n  return BASE_64_CHARS.charAt(val);\n};\n\nvar getVal = function (ch) {\n  return ch === '=' ? -1 : BASE_64_VALS[ch];\n};\n\nfor (var i = 0; i < BASE_64_CHARS.length; i++) {\n  BASE_64_VALS[getChar(i)] = i;\n}\n\n;\n\nvar encode = function (array) {\n  if (typeof array === \"string\") {\n    var str = array;\n    array = newBinary(str.length);\n\n    for (var _i = 0; _i < str.length; _i++) {\n      var ch = str.charCodeAt(_i);\n\n      if (ch > 0xFF) {\n        throw new Error(\"Not ascii. Base64.encode can only take ascii strings.\");\n      }\n\n      array[_i] = ch;\n    }\n  }\n\n  var answer = [];\n  var a = null;\n  var b = null;\n  var c = null;\n  var d = null;\n\n  for (var _i2 = 0; _i2 < array.length; _i2++) {\n    switch (_i2 % 3) {\n      case 0:\n        a = array[_i2] >> 2 & 0x3F;\n        b = (array[_i2] & 0x03) << 4;\n        break;\n\n      case 1:\n        b = b | array[_i2] >> 4 & 0xF;\n        c = (array[_i2] & 0xF) << 2;\n        break;\n\n      case 2:\n        c = c | array[_i2] >> 6 & 0x03;\n        d = array[_i2] & 0x3F;\n        answer.push(getChar(a));\n        answer.push(getChar(b));\n        answer.push(getChar(c));\n        answer.push(getChar(d));\n        a = null;\n        b = null;\n        c = null;\n        d = null;\n        break;\n    }\n  }\n\n  if (a != null) {\n    answer.push(getChar(a));\n    answer.push(getChar(b));\n\n    if (c == null) {\n      answer.push('=');\n    } else {\n      answer.push(getChar(c));\n    }\n\n    if (d == null) {\n      answer.push('=');\n    }\n  }\n\n  return answer.join(\"\");\n}; // XXX This is a weird place for this to live, but it's used both by\n// this package and 'ejson', and we can't put it in 'ejson' without\n// introducing a circular dependency. It should probably be in its own\n// package or as a helper in a package that both 'base64' and 'ejson'\n// use.\n\n\nvar newBinary = function (len) {\n  if (typeof Uint8Array === 'undefined' || typeof ArrayBuffer === 'undefined') {\n    var ret = [];\n\n    for (var _i3 = 0; _i3 < len; _i3++) {\n      ret.push(0);\n    }\n\n    ret.$Uint8ArrayPolyfill = true;\n    return ret;\n  }\n\n  return new Uint8Array(new ArrayBuffer(len));\n};\n\nvar decode = function (str) {\n  var len = Math.floor(str.length * 3 / 4);\n\n  if (str.charAt(str.length - 1) == '=') {\n    len--;\n\n    if (str.charAt(str.length - 2) == '=') {\n      len--;\n    }\n  }\n\n  var arr = newBinary(len);\n  var one = null;\n  var two = null;\n  var three = null;\n  var j = 0;\n\n  for (var _i4 = 0; _i4 < str.length; _i4++) {\n    var c = str.charAt(_i4);\n    var v = getVal(c);\n\n    switch (_i4 % 4) {\n      case 0:\n        if (v < 0) {\n          throw new Error('invalid base64 string');\n        }\n\n        one = v << 2;\n        break;\n\n      case 1:\n        if (v < 0) {\n          throw new Error('invalid base64 string');\n        }\n\n        one = one | v >> 4;\n        arr[j++] = one;\n        two = (v & 0x0F) << 4;\n        break;\n\n      case 2:\n        if (v >= 0) {\n          two = two | v >> 2;\n          arr[j++] = two;\n          three = (v & 0x03) << 6;\n        }\n\n        break;\n\n      case 3:\n        if (v >= 0) {\n          arr[j++] = three | v;\n        }\n\n        break;\n    }\n  }\n\n  return arr;\n};\n\nvar Base64 = {\n  encode: encode,\n  decode: decode,\n  newBinary: newBinary\n};","map":{"version":3,"sources":["packages/base64/base64.js"],"names":["module","export","Base64","BASE_64_CHARS","BASE_64_VALS","Object","create","getChar","val","charAt","getVal","ch","i","length","encode","array","str","newBinary","charCodeAt","Error","answer","a","b","c","d","push","join","len","Uint8Array","ArrayBuffer","ret","$Uint8ArrayPolyfill","decode","Math","floor","arr","one","two","three","j","v"],"mappings":"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","sourcesContent":["// Base 64 encoding\n\nconst BASE_64_CHARS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\nconst BASE_64_VALS = Object.create(null);\n\nconst getChar = val => BASE_64_CHARS.charAt(val);\nconst getVal = ch => ch === '=' ? -1 : BASE_64_VALS[ch];\n\nfor (let i = 0; i < BASE_64_CHARS.length; i++) {\n  BASE_64_VALS[getChar(i)] = i;\n};\n\nconst encode = array => {\n  if (typeof array === \"string\") {\n    const str = array;\n    array = newBinary(str.length);\n    for (let i = 0; i < str.length; i++) {\n      const ch = str.charCodeAt(i);\n      if (ch > 0xFF) {\n        throw new Error(\n          \"Not ascii. Base64.encode can only take ascii strings.\");\n      }\n\n      array[i] = ch;\n    }\n  }\n\n  const answer = [];\n  let a = null;\n  let b = null;\n  let c = null;\n  let d = null;\n\n  for (let i = 0; i < array.length; i++) {\n    switch (i % 3) {\n      case 0:\n        a = (array[i] >> 2) & 0x3F;\n        b = (array[i] & 0x03) << 4;\n        break;\n      case 1:\n        b = b | (array[i] >> 4) & 0xF;\n        c = (array[i] & 0xF) << 2;\n        break;\n      case 2:\n        c = c | (array[i] >> 6) & 0x03;\n        d = array[i] & 0x3F;\n        answer.push(getChar(a));\n        answer.push(getChar(b));\n        answer.push(getChar(c));\n        answer.push(getChar(d));\n        a = null;\n        b = null;\n        c = null;\n        d = null;\n        break;\n    }\n  }\n\n  if (a != null) {\n    answer.push(getChar(a));\n    answer.push(getChar(b));\n    if (c == null) {\n      answer.push('=');\n    } else {\n      answer.push(getChar(c));\n    }\n\n    if (d == null) {\n      answer.push('=');\n    }\n  }\n\n  return answer.join(\"\");\n};\n\n\n\n// XXX This is a weird place for this to live, but it's used both by\n// this package and 'ejson', and we can't put it in 'ejson' without\n// introducing a circular dependency. It should probably be in its own\n// package or as a helper in a package that both 'base64' and 'ejson'\n// use.\nconst newBinary = len => {\n  if (typeof Uint8Array === 'undefined' || typeof ArrayBuffer === 'undefined') {\n    const ret = [];\n    for (let i = 0; i < len; i++) {\n      ret.push(0);\n    }\n\n    ret.$Uint8ArrayPolyfill = true;\n    return ret;\n  }\n  return new Uint8Array(new ArrayBuffer(len));\n};\n\nconst decode = str => {\n  let len = Math.floor((str.length * 3) / 4);\n  if (str.charAt(str.length - 1) == '=') {\n    len--;\n    if (str.charAt(str.length - 2) == '=') {\n      len--;\n    }\n  }\n\n  const arr = newBinary(len);\n\n  let one = null;\n  let two = null;\n  let three = null;\n\n  let j = 0;\n\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charAt(i);\n    const v = getVal(c);\n    switch (i % 4) {\n      case 0:\n        if (v < 0) {\n          throw new Error('invalid base64 string');\n        }\n\n        one = v << 2;\n        break;\n      case 1:\n        if (v < 0) {\n          throw new Error('invalid base64 string');\n        }\n\n        one = one | (v >> 4);\n        arr[j++] = one;\n        two = (v & 0x0F) << 4;\n        break;\n      case 2:\n        if (v >= 0) {\n          two = two | (v >> 2);\n          arr[j++] = two;\n          three = (v & 0x03) << 6;\n        }\n\n        break;\n      case 3:\n        if (v >= 0) {\n          arr[j++] = three | v;\n        }\n\n        break;\n    }\n  }\n\n  return arr;\n};\n\nexport const Base64 = { encode, decode, newBinary };\n"]},"sourceType":"module","hash":"cc3196ce91a18c62770faf72563c99975025385f"}
