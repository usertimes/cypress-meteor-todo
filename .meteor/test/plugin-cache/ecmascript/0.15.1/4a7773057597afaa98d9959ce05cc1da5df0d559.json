{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/idrismahjoubi/cypress-meteor-react/packages/webapp/socket_file.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/webapp/socket_file.js","filename":"/Users/idrismahjoubi/cypress-meteor-react/packages/webapp/socket_file.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"test","cwd":"/Users/idrismahjoubi/cypress-meteor-react","root":"/Users/idrismahjoubi/cypress-meteor-react","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/idrismahjoubi/cypress-meteor-react/packages/webapp/socket_file.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/webapp/socket_file.js"}},"code":"module.export({\n  removeExistingSocketFile: () => removeExistingSocketFile,\n  registerSocketFileCleanup: () => registerSocketFileCleanup\n});\nlet statSync, unlinkSync, existsSync;\nmodule.link(\"fs\", {\n  statSync(v) {\n    statSync = v;\n  },\n\n  unlinkSync(v) {\n    unlinkSync = v;\n  },\n\n  existsSync(v) {\n    existsSync = v;\n  }\n\n}, 0);\n\nconst removeExistingSocketFile = socketPath => {\n  try {\n    if (statSync(socketPath).isSocket()) {\n      // Since a new socket file will be created, remove the existing\n      // file.\n      unlinkSync(socketPath);\n    } else {\n      throw new Error(\"An existing file was found at \\\"\".concat(socketPath, \"\\\" and it is not \") + 'a socket file. Please confirm PORT is pointing to valid and ' + 'un-used socket file path.');\n    }\n  } catch (error) {\n    // If there is no existing socket file to cleanup, great, we'll\n    // continue normally. If the caught exception represents any other\n    // issue, re-throw.\n    if (error.code !== 'ENOENT') {\n      throw error;\n    }\n  }\n};\n\nconst registerSocketFileCleanup = function (socketPath) {\n  let eventEmitter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : process;\n  ['exit', 'SIGINT', 'SIGHUP', 'SIGTERM'].forEach(signal => {\n    eventEmitter.on(signal, Meteor.bindEnvironment(() => {\n      if (existsSync(socketPath)) {\n        unlinkSync(socketPath);\n      }\n    }));\n  });\n};","map":{"version":3,"sources":["packages/webapp/socket_file.js"],"names":["module","export","removeExistingSocketFile","registerSocketFileCleanup","statSync","unlinkSync","existsSync","link","v","socketPath","isSocket","Error","error","code","eventEmitter","process","forEach","signal","on","Meteor","bindEnvironment"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,wBAAwB,EAAC,MAAIA,wBAA9B;AAAuDC,EAAAA,yBAAyB,EAAC,MAAIA;AAArF,CAAd;AAA+H,IAAIC,QAAJ,EAAaC,UAAb,EAAwBC,UAAxB;AAAmCN,MAAM,CAACO,IAAP,CAAY,IAAZ,EAAiB;AAACH,EAAAA,QAAQ,CAACI,CAAD,EAAG;AAACJ,IAAAA,QAAQ,GAACI,CAAT;AAAW,GAAxB;;AAAyBH,EAAAA,UAAU,CAACG,CAAD,EAAG;AAACH,IAAAA,UAAU,GAACG,CAAX;AAAa,GAApD;;AAAqDF,EAAAA,UAAU,CAACE,CAAD,EAAG;AAACF,IAAAA,UAAU,GAACE,CAAX;AAAa;;AAAhF,CAAjB,EAAmG,CAAnG;;AAyB3J,MAAMN,wBAAwB,GAAIO,UAAD,IAAgB;AACtD,MAAI;AACF,QAAIL,QAAQ,CAACK,UAAD,CAAR,CAAqBC,QAArB,EAAJ,EAAqC;AACnC;AACA;AACAL,MAAAA,UAAU,CAACI,UAAD,CAAV;AACD,KAJD,MAIO;AACL,YAAM,IAAIE,KAAJ,CACJ,0CAAkCF,UAAlC,yBACA,8DADA,GAEA,2BAHI,CAAN;AAKD;AACF,GAZD,CAYE,OAAOG,KAAP,EAAc;AACd;AACA;AACA;AACA,QAAIA,KAAK,CAACC,IAAN,KAAe,QAAnB,EAA6B;AAC3B,YAAMD,KAAN;AACD;AACF;AACF,CArBM;;AA0BA,MAAMT,yBAAyB,GACpC,UAACM,UAAD,EAAwC;AAAA,MAA3BK,YAA2B,uEAAZC,OAAY;AACtC,GAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,EAA6B,SAA7B,EAAwCC,OAAxC,CAAgDC,MAAM,IAAI;AACxDH,IAAAA,YAAY,CAACI,EAAb,CAAgBD,MAAhB,EAAwBE,MAAM,CAACC,eAAP,CAAuB,MAAM;AACnD,UAAId,UAAU,CAACG,UAAD,CAAd,EAA4B;AAC1BJ,QAAAA,UAAU,CAACI,UAAD,CAAV;AACD;AACF,KAJuB,CAAxB;AAKD,GAND;AAOD,CATI","sourcesContent":["import { statSync, unlinkSync, existsSync } from 'fs';\n\n// Since a new socket file will be created when the HTTP server\n// starts up, if found remove the existing file.\n//\n// WARNING:\n// This will remove the configured socket file without warning. If\n// the configured socket file is already in use by another application,\n// it will still be removed. Node does not provide a reliable way to\n// differentiate between a socket file that is already in use by\n// another application or a stale socket file that has been\n// left over after a SIGKILL. Since we have no reliable way to\n// differentiate between these two scenarios, the best course of\n// action during startup is to remove any existing socket file. This\n// is not the safest course of action as removing the existing socket\n// file could impact an application using it, but this approach helps\n// ensure the HTTP server can startup without manual\n// intervention (e.g. asking for the verification and cleanup of socket\n// files before allowing the HTTP server to be started).\n//\n// The above being said, as long as the socket file path is\n// configured carefully when the application is deployed (and extra\n// care is taken to make sure the configured path is unique and doesn't\n// conflict with another socket file path), then there should not be\n// any issues with this approach.\nexport const removeExistingSocketFile = (socketPath) => {\n  try {\n    if (statSync(socketPath).isSocket()) {\n      // Since a new socket file will be created, remove the existing\n      // file.\n      unlinkSync(socketPath);\n    } else {\n      throw new Error(\n        `An existing file was found at \"${socketPath}\" and it is not ` +\n        'a socket file. Please confirm PORT is pointing to valid and ' +\n        'un-used socket file path.'\n      );\n    }\n  } catch (error) {\n    // If there is no existing socket file to cleanup, great, we'll\n    // continue normally. If the caught exception represents any other\n    // issue, re-throw.\n    if (error.code !== 'ENOENT') {\n      throw error;\n    }\n  }\n};\n\n// Remove the socket file when done to avoid leaving behind a stale one.\n// Note - a stale socket file is still left behind if the running node\n// process is killed via signal 9 - SIGKILL.\nexport const registerSocketFileCleanup =\n  (socketPath, eventEmitter = process) => {\n    ['exit', 'SIGINT', 'SIGHUP', 'SIGTERM'].forEach(signal => {\n      eventEmitter.on(signal, Meteor.bindEnvironment(() => {\n        if (existsSync(socketPath)) {\n          unlinkSync(socketPath);\n        }\n      }));\n    });\n  };\n"]},"sourceType":"module","hash":"4a7773057597afaa98d9959ce05cc1da5df0d559"}
