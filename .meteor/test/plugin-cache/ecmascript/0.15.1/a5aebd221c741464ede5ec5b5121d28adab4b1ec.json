{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/idrismahjoubi/cypress-meteor-react/packages/random/AleaRandomGenerator.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/random/AleaRandomGenerator.js","filename":"/Users/idrismahjoubi/cypress-meteor-react/packages/random/AleaRandomGenerator.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"test","cwd":"/Users/idrismahjoubi/cypress-meteor-react","root":"/Users/idrismahjoubi/cypress-meteor-react","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/idrismahjoubi/cypress-meteor-react/packages/random/AleaRandomGenerator.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/random/AleaRandomGenerator.js"}},"code":"module.export({\n  default: () => AleaRandomGenerator\n});\nlet RandomGenerator;\nmodule.link(\"./AbstractRandomGenerator\", {\n  default(v) {\n    RandomGenerator = v;\n  }\n\n}, 0);\n\n// Alea PRNG, which is not cryptographically strong\n// see http://baagoe.org/en/wiki/Better_random_numbers_for_javascript\n// for a full discussion and Alea implementation.\nfunction Alea(seeds) {\n  function Mash() {\n    let n = 0xefc8249d;\n\n    const mash = data => {\n      data = data.toString();\n\n      for (let i = 0; i < data.length; i++) {\n        n += data.charCodeAt(i);\n        let h = 0.02519603282416938 * n;\n        n = h >>> 0;\n        h -= n;\n        h *= n;\n        n = h >>> 0;\n        h -= n;\n        n += h * 0x100000000; // 2^32\n      }\n\n      return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n    };\n\n    mash.version = 'Mash 0.9';\n    return mash;\n  }\n\n  let s0 = 0;\n  let s1 = 0;\n  let s2 = 0;\n  let c = 1;\n\n  if (seeds.length === 0) {\n    seeds = [+new Date()];\n  }\n\n  let mash = Mash();\n  s0 = mash(' ');\n  s1 = mash(' ');\n  s2 = mash(' ');\n\n  for (let i = 0; i < seeds.length; i++) {\n    s0 -= mash(seeds[i]);\n\n    if (s0 < 0) {\n      s0 += 1;\n    }\n\n    s1 -= mash(seeds[i]);\n\n    if (s1 < 0) {\n      s1 += 1;\n    }\n\n    s2 -= mash(seeds[i]);\n\n    if (s2 < 0) {\n      s2 += 1;\n    }\n  }\n\n  mash = null;\n\n  const random = () => {\n    const t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n\n    s0 = s1;\n    s1 = s2;\n    return s2 = t - (c = t | 0);\n  };\n\n  random.uint32 = () => random() * 0x100000000; // 2^32\n\n\n  random.fract53 = () => random() + (random() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n\n\n  random.version = 'Alea 0.9';\n  random.args = seeds;\n  return random;\n} // options:\n// - seeds: an array\n//   whose items will be `toString`ed and used as the seed to the Alea\n//   algorithm\n\n\nclass AleaRandomGenerator extends RandomGenerator {\n  constructor() {\n    let {\n      seeds = []\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super();\n\n    if (!seeds) {\n      throw new Error('No seeds were provided for Alea PRNG');\n    }\n\n    this.alea = Alea(seeds);\n  }\n  /**\n   * @name Random.fraction\n   * @summary Return a number between 0 and 1, like `Math.random`.\n   * @locus Anywhere\n   */\n\n\n  fraction() {\n    return this.alea();\n  }\n\n}","map":{"version":3,"sources":["packages/random/AleaRandomGenerator.js"],"names":["module","export","default","AleaRandomGenerator","RandomGenerator","link","v","Alea","seeds","Mash","n","mash","data","toString","i","length","charCodeAt","h","version","s0","s1","s2","c","Date","random","t","uint32","fract53","args","constructor","Error","alea","fraction"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,OAAO,EAAC,MAAIC;AAAb,CAAd;AAAiD,IAAIC,eAAJ;AAAoBJ,MAAM,CAACK,IAAP,CAAY,2BAAZ,EAAwC;AAACH,EAAAA,OAAO,CAACI,CAAD,EAAG;AAACF,IAAAA,eAAe,GAACE,CAAhB;AAAkB;;AAA9B,CAAxC,EAAwE,CAAxE;;AAErE;AACA;AACA;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,WAASC,IAAT,GAAgB;AACd,QAAIC,CAAC,GAAG,UAAR;;AAEA,UAAMC,IAAI,GAAIC,IAAD,IAAU;AACrBA,MAAAA,IAAI,GAAGA,IAAI,CAACC,QAAL,EAAP;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpCJ,QAAAA,CAAC,IAAIE,IAAI,CAACI,UAAL,CAAgBF,CAAhB,CAAL;AACA,YAAIG,CAAC,GAAG,sBAAsBP,CAA9B;AACAA,QAAAA,CAAC,GAAGO,CAAC,KAAK,CAAV;AACAA,QAAAA,CAAC,IAAIP,CAAL;AACAO,QAAAA,CAAC,IAAIP,CAAL;AACAA,QAAAA,CAAC,GAAGO,CAAC,KAAK,CAAV;AACAA,QAAAA,CAAC,IAAIP,CAAL;AACAA,QAAAA,CAAC,IAAIO,CAAC,GAAG,WAAT,CARoC,CAQd;AACvB;;AACD,aAAO,CAACP,CAAC,KAAK,CAAP,IAAY,sBAAnB,CAZqB,CAYsB;AAC5C,KAbD;;AAeAC,IAAAA,IAAI,CAACO,OAAL,GAAe,UAAf;AACA,WAAOP,IAAP;AACD;;AAED,MAAIQ,EAAE,GAAG,CAAT;AACA,MAAIC,EAAE,GAAG,CAAT;AACA,MAAIC,EAAE,GAAG,CAAT;AACA,MAAIC,CAAC,GAAG,CAAR;;AACA,MAAId,KAAK,CAACO,MAAN,KAAiB,CAArB,EAAwB;AACtBP,IAAAA,KAAK,GAAG,CAAC,CAAC,IAAIe,IAAJ,EAAF,CAAR;AACD;;AACD,MAAIZ,IAAI,GAAGF,IAAI,EAAf;AACAU,EAAAA,EAAE,GAAGR,IAAI,CAAC,GAAD,CAAT;AACAS,EAAAA,EAAE,GAAGT,IAAI,CAAC,GAAD,CAAT;AACAU,EAAAA,EAAE,GAAGV,IAAI,CAAC,GAAD,CAAT;;AAEA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,KAAK,CAACO,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCK,IAAAA,EAAE,IAAIR,IAAI,CAACH,KAAK,CAACM,CAAD,CAAN,CAAV;;AACA,QAAIK,EAAE,GAAG,CAAT,EAAY;AACVA,MAAAA,EAAE,IAAI,CAAN;AACD;;AACDC,IAAAA,EAAE,IAAIT,IAAI,CAACH,KAAK,CAACM,CAAD,CAAN,CAAV;;AACA,QAAIM,EAAE,GAAG,CAAT,EAAY;AACVA,MAAAA,EAAE,IAAI,CAAN;AACD;;AACDC,IAAAA,EAAE,IAAIV,IAAI,CAACH,KAAK,CAACM,CAAD,CAAN,CAAV;;AACA,QAAIO,EAAE,GAAG,CAAT,EAAY;AACVA,MAAAA,EAAE,IAAI,CAAN;AACD;AACF;;AACDV,EAAAA,IAAI,GAAG,IAAP;;AAEA,QAAMa,MAAM,GAAG,MAAM;AACnB,UAAMC,CAAC,GAAI,UAAUN,EAAX,GAAkBG,CAAC,GAAG,sBAAhC,CADmB,CACsC;;AACzDH,IAAAA,EAAE,GAAGC,EAAL;AACAA,IAAAA,EAAE,GAAGC,EAAL;AACA,WAAOA,EAAE,GAAGI,CAAC,IAAIH,CAAC,GAAGG,CAAC,GAAG,CAAZ,CAAb;AACD,GALD;;AAOAD,EAAAA,MAAM,CAACE,MAAP,GAAgB,MAAMF,MAAM,KAAK,WAAjC,CA1DmB,CA0D2B;;;AAC9CA,EAAAA,MAAM,CAACG,OAAP,GAAiB,MAAMH,MAAM,KACtB,CAACA,MAAM,KAAK,QAAX,GAAsB,CAAvB,IAA4B,sBADnC,CA3DmB,CA4DyC;;;AAE5DA,EAAAA,MAAM,CAACN,OAAP,GAAiB,UAAjB;AACAM,EAAAA,MAAM,CAACI,IAAP,GAAcpB,KAAd;AACA,SAAOgB,MAAP;AACD,C,CAED;AACA;AACA;AACA;;;AACe,MAAMrB,mBAAN,SAAkCC,eAAlC,CAAkD;AAC/DyB,EAAAA,WAAW,GAAuB;AAAA,QAArB;AAAErB,MAAAA,KAAK,GAAG;AAAV,KAAqB,uEAAJ,EAAI;AAChC;;AACA,QAAI,CAACA,KAAL,EAAY;AACV,YAAM,IAAIsB,KAAJ,CAAU,sCAAV,CAAN;AACD;;AACD,SAAKC,IAAL,GAAYxB,IAAI,CAACC,KAAD,CAAhB;AACD;AAED;AACF;AACA;AACA;AACA;;;AACEwB,EAAAA,QAAQ,GAAI;AACV,WAAO,KAAKD,IAAL,EAAP;AACD;;AAhB8D","sourcesContent":["import RandomGenerator from './AbstractRandomGenerator';\n\n// Alea PRNG, which is not cryptographically strong\n// see http://baagoe.org/en/wiki/Better_random_numbers_for_javascript\n// for a full discussion and Alea implementation.\nfunction Alea(seeds) {\n  function Mash() {\n    let n = 0xefc8249d;\n\n    const mash = (data) => {\n      data = data.toString();\n      for (let i = 0; i < data.length; i++) {\n        n += data.charCodeAt(i);\n        let h = 0.02519603282416938 * n;\n        n = h >>> 0;\n        h -= n;\n        h *= n;\n        n = h >>> 0;\n        h -= n;\n        n += h * 0x100000000; // 2^32\n      }\n      return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n    };\n\n    mash.version = 'Mash 0.9';\n    return mash;\n  }\n\n  let s0 = 0;\n  let s1 = 0;\n  let s2 = 0;\n  let c = 1;\n  if (seeds.length === 0) {\n    seeds = [+new Date];\n  }\n  let mash = Mash();\n  s0 = mash(' ');\n  s1 = mash(' ');\n  s2 = mash(' ');\n\n  for (let i = 0; i < seeds.length; i++) {\n    s0 -= mash(seeds[i]);\n    if (s0 < 0) {\n      s0 += 1;\n    }\n    s1 -= mash(seeds[i]);\n    if (s1 < 0) {\n      s1 += 1;\n    }\n    s2 -= mash(seeds[i]);\n    if (s2 < 0) {\n      s2 += 1;\n    }\n  }\n  mash = null;\n\n  const random = () => {\n    const t = (2091639 * s0) + (c * 2.3283064365386963e-10); // 2^-32\n    s0 = s1;\n    s1 = s2;\n    return s2 = t - (c = t | 0);\n  };\n\n  random.uint32 = () => random() * 0x100000000; // 2^32\n  random.fract53 = () => random() +\n        ((random() * 0x200000 | 0) * 1.1102230246251565e-16); // 2^-53\n\n  random.version = 'Alea 0.9';\n  random.args = seeds;\n  return random;\n}\n\n// options:\n// - seeds: an array\n//   whose items will be `toString`ed and used as the seed to the Alea\n//   algorithm\nexport default class AleaRandomGenerator extends RandomGenerator {\n  constructor ({ seeds = [] } = {}) {\n    super();\n    if (!seeds) {\n      throw new Error('No seeds were provided for Alea PRNG');\n    }\n    this.alea = Alea(seeds);\n  }\n\n  /**\n   * @name Random.fraction\n   * @summary Return a number between 0 and 1, like `Math.random`.\n   * @locus Anywhere\n   */\n  fraction () {\n    return this.alea();\n  }\n}\n"]},"sourceType":"module","hash":"a5aebd221c741464ede5ec5b5121d28adab4b1ec"}
