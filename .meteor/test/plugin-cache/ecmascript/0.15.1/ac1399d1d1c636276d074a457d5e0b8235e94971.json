{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/idrismahjoubi/cypress-meteor-react/imports/api/server/coverage.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"imports/api/server/coverage.js","filename":"/Users/idrismahjoubi/cypress-meteor-react/imports/api/server/coverage.js","inputSourceMap":{"version":3,"sources":["imports/api/server/coverage.js"],"names":["Meteor","express","WebApp","babelEnvironment","process","env","BABEL_ENV","isCypress","window","Cypress","undefined","app","ROUTE_COVERAGE","get","bindEnvironment","req","res","result","coverage","global","__coverage__","send","connectHandlers","use"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeY;;;;;;;;;AAfZ,SAASA,MAAT,QAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,MAAT,QAAuB,eAAvB,C,CAEA;;AACA,MAAMC,gBAAgB,6BAAG,6BAAAC,OAAO,CAACC,GAAR,CAAYC,SAAZ,kCAAyB,aAAzB,CAAH,CAAtB,C,CACA;;AACA,MAAMC,SAAS,6BACZ,oCAAOC,MAAP,KAAkB,WAAlB,kCAAiCA,MAAM,CAACC,OAAP,KAAmBC,SAApD,CAAD,iCACAP,gBAAgB,KAAK,MADrB,CADa,CAAf;AAIA,MAAMQ,GAAG,6BAAGV,OAAO,EAAV,CAAT,C,CAEA;AACA;AACA;;AACA,MAAMW,cAAc,6BAAG,eAAH,CAApB;;;AAEA,IAAIL,SAAJ,EAAe;AAAA;AAAA;AACbI,EAAAA,GAAG,CAACE,GAAJ,CACED,cADF,EAEEZ,MAAM,CAACc,eAAP,CAAuB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAAA;AACnC,UAAMC,MAAM,6BAAG;AAAEC,MAAAA,QAAQ,EAAEC,MAAM,CAACC;AAAnB,KAAH,CAAZ;AADmC;AAEnCJ,IAAAA,GAAG,CAACK,IAAJ,CAASJ,MAAT;AACD,GAHD,CAFF;AAOD,CARD;AAAA;AAAA;;;AAUAf,MAAM,CAACoB,eAAP,CAAuBC,GAAvB,CAA2BZ,GAA3B","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport express from 'express';\nimport { WebApp } from 'meteor/webapp';\n\n// Check `BABEL_ENV` to check if we are running in test mode.\nconst babelEnvironment = process.env.BABEL_ENV || 'development';\n// Detect if we are running a test environment.\nconst isCypress =\n  (typeof window !== 'undefined' && window.Cypress !== undefined) ||\n  babelEnvironment === 'test';\n\nconst app = express();\n\n// Expose a route so that Cypress can fetch the coverage report for the\n// server-side code. This route has to be configured in `cypress.json` in\n// `env.codeCoverage.url`.\nconst ROUTE_COVERAGE = '/__coverage__';\n\nif (isCypress) {\n  app.get(\n    ROUTE_COVERAGE,\n    Meteor.bindEnvironment((req, res) => {\n      const result = { coverage: global.__coverage__ };\n      res.send(result);\n    })\n  );\n}\n\nWebApp.connectHandlers.use(app);\n"]},"targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"test","cwd":"/Users/idrismahjoubi/cypress-meteor-react","root":"/Users/idrismahjoubi/cypress-meteor-react","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/idrismahjoubi/cypress-meteor-react/imports/api/server/coverage.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/server/coverage.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet express;\nmodule.link(\"express\", {\n  default(v) {\n    express = v;\n  }\n\n}, 1);\nlet WebApp;\nmodule.link(\"meteor/webapp\", {\n  WebApp(v) {\n    WebApp = v;\n  }\n\n}, 2);\n\nfunction cov_1etptv58u0() {\n  var path = \"/Users/idrismahjoubi/cypress-meteor-react/imports/api/server/coverage.js\";\n  var hash = \"a88b9204d6f8ecb6e51a049843e6c4dc2ed53cba\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"/Users/idrismahjoubi/cypress-meteor-react/imports/api/server/coverage.js\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 6,\n          column: 25\n        },\n        end: {\n          line: 6,\n          column: 63\n        }\n      },\n      \"1\": {\n        start: {\n          line: 9,\n          column: 2\n        },\n        end: {\n          line: 10,\n          column: 29\n        }\n      },\n      \"2\": {\n        start: {\n          line: 12,\n          column: 12\n        },\n        end: {\n          line: 12,\n          column: 21\n        }\n      },\n      \"3\": {\n        start: {\n          line: 17,\n          column: 23\n        },\n        end: {\n          line: 17,\n          column: 38\n        }\n      },\n      \"4\": {\n        start: {\n          line: 19,\n          column: 0\n        },\n        end: {\n          line: 27,\n          column: 1\n        }\n      },\n      \"5\": {\n        start: {\n          line: 20,\n          column: 2\n        },\n        end: {\n          line: 26,\n          column: 4\n        }\n      },\n      \"6\": {\n        start: {\n          line: 23,\n          column: 21\n        },\n        end: {\n          line: 23,\n          column: 54\n        }\n      },\n      \"7\": {\n        start: {\n          line: 24,\n          column: 6\n        },\n        end: {\n          line: 24,\n          column: 23\n        }\n      },\n      \"8\": {\n        start: {\n          line: 29,\n          column: 0\n        },\n        end: {\n          line: 29,\n          column: 32\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 22,\n            column: 27\n          },\n          end: {\n            line: 22,\n            column: 28\n          }\n        },\n        loc: {\n          start: {\n            line: 22,\n            column: 41\n          },\n          end: {\n            line: 25,\n            column: 5\n          }\n        },\n        line: 22\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 6,\n            column: 25\n          },\n          end: {\n            line: 6,\n            column: 63\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 6,\n            column: 25\n          },\n          end: {\n            line: 6,\n            column: 46\n          }\n        }, {\n          start: {\n            line: 6,\n            column: 50\n          },\n          end: {\n            line: 6,\n            column: 63\n          }\n        }],\n        line: 6\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 9,\n            column: 2\n          },\n          end: {\n            line: 10,\n            column: 29\n          }\n        },\n        type: \"binary-expr\",\n        locations: [{\n          start: {\n            line: 9,\n            column: 3\n          },\n          end: {\n            line: 9,\n            column: 32\n          }\n        }, {\n          start: {\n            line: 9,\n            column: 36\n          },\n          end: {\n            line: 9,\n            column: 64\n          }\n        }, {\n          start: {\n            line: 10,\n            column: 2\n          },\n          end: {\n            line: 10,\n            column: 29\n          }\n        }],\n        line: 9\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 19,\n            column: 0\n          },\n          end: {\n            line: 27,\n            column: 1\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 19,\n            column: 0\n          },\n          end: {\n            line: 27,\n            column: 1\n          }\n        }, {\n          start: {\n            line: 19,\n            column: 0\n          },\n          end: {\n            line: 27,\n            column: 1\n          }\n        }],\n        line: 19\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0, 0],\n      \"2\": [0, 0]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"a88b9204d6f8ecb6e51a049843e6c4dc2ed53cba\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_1etptv58u0 = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_1etptv58u0();\n// Check `BABEL_ENV` to check if we are running in test mode.\nconst babelEnvironment = (cov_1etptv58u0().s[0]++, (cov_1etptv58u0().b[0][0]++, process.env.BABEL_ENV) || (cov_1etptv58u0().b[0][1]++, 'development')); // Detect if we are running a test environment.\n\nconst isCypress = (cov_1etptv58u0().s[1]++, (cov_1etptv58u0().b[1][0]++, typeof window !== 'undefined') && (cov_1etptv58u0().b[1][1]++, window.Cypress !== undefined) || (cov_1etptv58u0().b[1][2]++, babelEnvironment === 'test'));\nconst app = (cov_1etptv58u0().s[2]++, express()); // Expose a route so that Cypress can fetch the coverage report for the\n// server-side code. This route has to be configured in `cypress.json` in\n// `env.codeCoverage.url`.\n\nconst ROUTE_COVERAGE = (cov_1etptv58u0().s[3]++, '/__coverage__');\ncov_1etptv58u0().s[4]++;\n\nif (isCypress) {\n  cov_1etptv58u0().b[2][0]++;\n  cov_1etptv58u0().s[5]++;\n  app.get(ROUTE_COVERAGE, Meteor.bindEnvironment((req, res) => {\n    cov_1etptv58u0().f[0]++;\n    const result = (cov_1etptv58u0().s[6]++, {\n      coverage: global.__coverage__\n    });\n    cov_1etptv58u0().s[7]++;\n    res.send(result);\n  }));\n} else {\n  cov_1etptv58u0().b[2][1]++;\n}\n\ncov_1etptv58u0().s[8]++;\nWebApp.connectHandlers.use(app);","map":{"version":3,"sources":["imports/api/server/coverage.js"],"names":["babelEnvironment","isCypress","window","app","express","ROUTE_COVERAGE","result","coverage","global","__coverage__","res","WebApp"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeY;;;;;;;;;AAXZ;AACA,MAAMA,gBAAgB,IAAA,cAAA,GAAA,CAAA,CAAA,CAAA,KAAG,CAAA,cAAA,GAAA,CAAA,CAAA,CAAA,EAAA,CAAA,KAAA,OAAO,CAAP,GAAA,CAAA,SAAA,MAAA,cAAA,GAAA,CAAA,CAAA,CAAA,EAAA,CAAA,KAAzB,aAAyB,CAAH,CAAtB,C,CACA;;AACA,MAAMC,SAAS,IAAA,cAAA,GAAA,CAAA,CAAA,CAAA,KACZ,CAAA,cAAA,GAAA,CAAA,CAAA,CAAA,EAAA,CAAA,KAAA,OAAA,MAAA,KAAA,WAAA,MAAA,cAAA,GAAA,CAAA,CAAA,CAAA,EAAA,CAAA,KAAiCC,MAAM,CAANA,OAAAA,KAAlC,SAAC,MAAD,cAAA,GAAA,CAAA,CAAA,CAAA,EAAA,CAAA,KACAF,gBAAgB,KAFlB,MACG,CADY,CAAf;AAIA,MAAMG,GAAG,IAAA,cAAA,GAAA,CAAA,CAAA,CAAA,KAAGC,OAAZ,EAAS,CAAT,C,CAEA;AACA;AACA;;AACA,MAAMC,cAAc,IAAA,cAAA,GAAA,CAAA,CAAA,CAAA,KAApB,eAAoB,CAApB;;;AAEA,IAAA,SAAA,EAAe;AAAA,EAAA,cAAA,GAAA,CAAA,CAAA,CAAA,EAAA,CAAA;AAAA,EAAA,cAAA,GAAA,CAAA,CAAA,CAAA;AACbF,EAAAA,GAAG,CAAHA,GAAAA,CAAAA,cAAAA,EAEE,MAAM,CAAN,eAAA,CAAuB,CAAA,GAAA,EAAA,GAAA,KAAc;AAAA,IAAA,cAAA,GAAA,CAAA,CAAA,CAAA;AACnC,UAAMG,MAAM,IAAA,cAAA,GAAA,CAAA,CAAA,CAAA,KAAG;AAAEC,MAAAA,QAAQ,EAAEC,MAAM,CAACC;AAAnB,KAAH,CAAZ;AADmC,IAAA,cAAA,GAAA,CAAA,CAAA,CAAA;AAEnCC,IAAAA,GAAG,CAAHA,IAAAA,CAAAA,MAAAA;AAJJP,GAEE,CAFFA;AADF,CAAA,MAAA;AAAA,EAAA,cAAA,GAAA,CAAA,CAAA,CAAA,EAAA,CAAA;AAAA;;;AAUAQ,MAAM,CAANA,eAAAA,CAAAA,GAAAA,CAAAA,GAAAA","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport express from 'express';\nimport { WebApp } from 'meteor/webapp';\n\n// Check `BABEL_ENV` to check if we are running in test mode.\nconst babelEnvironment = process.env.BABEL_ENV || 'development';\n// Detect if we are running a test environment.\nconst isCypress =\n  (typeof window !== 'undefined' && window.Cypress !== undefined) ||\n  babelEnvironment === 'test';\n\nconst app = express();\n\n// Expose a route so that Cypress can fetch the coverage report for the\n// server-side code. This route has to be configured in `cypress.json` in\n// `env.codeCoverage.url`.\nconst ROUTE_COVERAGE = '/__coverage__';\n\nif (isCypress) {\n  app.get(\n    ROUTE_COVERAGE,\n    Meteor.bindEnvironment((req, res) => {\n      const result = { coverage: global.__coverage__ };\n      res.send(result);\n    })\n  );\n}\n\nWebApp.connectHandlers.use(app);\n"]},"sourceType":"module","hash":"ac1399d1d1c636276d074a457d5e0b8235e94971"}
