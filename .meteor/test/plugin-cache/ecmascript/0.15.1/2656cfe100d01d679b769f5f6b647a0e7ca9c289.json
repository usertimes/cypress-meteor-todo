{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/idrismahjoubi/cypress-meteor-react/packages/socket-stream-client/browser.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/socket-stream-client/browser.js","filename":"/Users/idrismahjoubi/cypress-meteor-react/packages/socket-stream-client/browser.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"test","cwd":"/Users/idrismahjoubi/cypress-meteor-react","root":"/Users/idrismahjoubi/cypress-meteor-react","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/idrismahjoubi/cypress-meteor-react/packages/socket-stream-client/browser.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/socket-stream-client/browser.js"}},"code":"var _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\n\nvar _assertThisInitialized;\n\nmodule.link(\"@babel/runtime/helpers/assertThisInitialized\", {\n  default: function (v) {\n    _assertThisInitialized = v;\n  }\n}, 1);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 2);\nmodule.export({\n  ClientStream: function () {\n    return ClientStream;\n  }\n});\nvar toSockjsUrl, toWebsocketUrl;\nmodule.link(\"./urls.js\", {\n  toSockjsUrl: function (v) {\n    toSockjsUrl = v;\n  },\n  toWebsocketUrl: function (v) {\n    toWebsocketUrl = v;\n  }\n}, 0);\nvar StreamClientCommon;\nmodule.link(\"./common.js\", {\n  StreamClientCommon: function (v) {\n    StreamClientCommon = v;\n  }\n}, 1);\nmodule.link(\"./sockjs-0.3.4.js\");\n\nvar ClientStream = /*#__PURE__*/function (_StreamClientCommon) {\n  _inheritsLoose(ClientStream, _StreamClientCommon);\n\n  // @param url {String} URL to Meteor app\n  //   \"http://subdomain.meteor.com/\" or \"/\" or\n  //   \"ddp+sockjs://foo-**.meteor.com/sockjs\"\n  function ClientStream(url, options) {\n    var _this;\n\n    _this = _StreamClientCommon.call(this, options) || this;\n\n    _this._initCommon(_this.options); //// Constants\n    // how long between hearing heartbeat from the server until we declare\n    // the connection dead. heartbeats come every 45s (stream_server.js)\n    //\n    // NOTE: this is a older timeout mechanism. We now send heartbeats at\n    // the DDP level (https://github.com/meteor/meteor/pull/1865), and\n    // expect those timeouts to kill a non-responsive connection before\n    // this timeout fires. This is kept around for compatibility (when\n    // talking to a server that doesn't support DDP heartbeats) and can be\n    // removed later.\n\n\n    _this.HEARTBEAT_TIMEOUT = 100 * 1000;\n    _this.rawUrl = url;\n    _this.socket = null;\n    _this.lastError = null;\n    _this.heartbeatTimer = null; // Listen to global 'online' event if we are running in a browser.\n    // (IE8 does not support addEventListener)\n\n    if (typeof window !== 'undefined' && window.addEventListener) window.addEventListener('online', _this._online.bind(_assertThisInitialized(_this)), false\n    /* useCapture. make FF3.6 happy. */\n    ); //// Kickoff!\n\n    _this._launchConnection();\n\n    return _this;\n  } // data is a utf8 string. Data sent while not connected is dropped on\n  // the floor, and it is up the user of this API to retransmit lost\n  // messages on 'reset'\n\n\n  var _proto = ClientStream.prototype;\n\n  _proto.send = function () {\n    function send(data) {\n      if (this.currentStatus.connected) {\n        this.socket.send(data);\n      }\n    }\n\n    return send;\n  }() // Changes where this connection points\n  ;\n\n  _proto._changeUrl = function () {\n    function _changeUrl(url) {\n      this.rawUrl = url;\n    }\n\n    return _changeUrl;\n  }();\n\n  _proto._connected = function () {\n    function _connected() {\n      if (this.connectionTimer) {\n        clearTimeout(this.connectionTimer);\n        this.connectionTimer = null;\n      }\n\n      if (this.currentStatus.connected) {\n        // already connected. do nothing. this probably shouldn't happen.\n        return;\n      } // update status\n\n\n      this.currentStatus.status = 'connected';\n      this.currentStatus.connected = true;\n      this.currentStatus.retryCount = 0;\n      this.statusChanged(); // fire resets. This must come after status change so that clients\n      // can call send from within a reset callback.\n\n      this.forEachCallback('reset', function (callback) {\n        callback();\n      });\n    }\n\n    return _connected;\n  }();\n\n  _proto._cleanup = function () {\n    function _cleanup(maybeError) {\n      this._clearConnectionAndHeartbeatTimers();\n\n      if (this.socket) {\n        this.socket.onmessage = this.socket.onclose = this.socket.onerror = this.socket.onheartbeat = function () {};\n\n        this.socket.close();\n        this.socket = null;\n      }\n\n      this.forEachCallback('disconnect', function (callback) {\n        callback(maybeError);\n      });\n    }\n\n    return _cleanup;\n  }();\n\n  _proto._clearConnectionAndHeartbeatTimers = function () {\n    function _clearConnectionAndHeartbeatTimers() {\n      if (this.connectionTimer) {\n        clearTimeout(this.connectionTimer);\n        this.connectionTimer = null;\n      }\n\n      if (this.heartbeatTimer) {\n        clearTimeout(this.heartbeatTimer);\n        this.heartbeatTimer = null;\n      }\n    }\n\n    return _clearConnectionAndHeartbeatTimers;\n  }();\n\n  _proto._heartbeat_timeout = function () {\n    function _heartbeat_timeout() {\n      console.log('Connection timeout. No sockjs heartbeat received.');\n\n      this._lostConnection(new this.ConnectionError(\"Heartbeat timed out\"));\n    }\n\n    return _heartbeat_timeout;\n  }();\n\n  _proto._heartbeat_received = function () {\n    function _heartbeat_received() {\n      // If we've already permanently shut down this stream, the timeout is\n      // already cleared, and we don't need to set it again.\n      if (this._forcedToDisconnect) return;\n      if (this.heartbeatTimer) clearTimeout(this.heartbeatTimer);\n      this.heartbeatTimer = setTimeout(this._heartbeat_timeout.bind(this), this.HEARTBEAT_TIMEOUT);\n    }\n\n    return _heartbeat_received;\n  }();\n\n  _proto._sockjsProtocolsWhitelist = function () {\n    function _sockjsProtocolsWhitelist() {\n      // only allow polling protocols. no streaming.  streaming\n      // makes safari spin.\n      var protocolsWhitelist = ['xdr-polling', 'xhr-polling', 'iframe-xhr-polling', 'jsonp-polling']; // iOS 4 and 5 and below crash when using websockets over certain\n      // proxies. this seems to be resolved with iOS 6. eg\n      // https://github.com/LearnBoost/socket.io/issues/193#issuecomment-7308865.\n      //\n      // iOS <4 doesn't support websockets at all so sockjs will just\n      // immediately fall back to http\n\n      var noWebsockets = navigator && /iPhone|iPad|iPod/.test(navigator.userAgent) && /OS 4_|OS 5_/.test(navigator.userAgent);\n      if (!noWebsockets) protocolsWhitelist = ['websocket'].concat(protocolsWhitelist);\n      return protocolsWhitelist;\n    }\n\n    return _sockjsProtocolsWhitelist;\n  }();\n\n  _proto._launchConnection = function () {\n    function _launchConnection() {\n      var _this2 = this;\n\n      this._cleanup(); // cleanup the old socket, if there was one.\n\n\n      var options = _objectSpread({\n        protocols_whitelist: this._sockjsProtocolsWhitelist()\n      }, this.options._sockjsOptions);\n\n      var hasSockJS = typeof SockJS === \"function\";\n      this.socket = hasSockJS // Convert raw URL to SockJS URL each time we open a connection, so\n      // that we can connect to random hostnames and get around browser\n      // per-host connection limits.\n      ? new SockJS(toSockjsUrl(this.rawUrl), undefined, options) : new WebSocket(toWebsocketUrl(this.rawUrl));\n\n      this.socket.onopen = function (data) {\n        _this2.lastError = null;\n\n        _this2._connected();\n      };\n\n      this.socket.onmessage = function (data) {\n        _this2.lastError = null;\n\n        _this2._heartbeat_received();\n\n        if (_this2.currentStatus.connected) {\n          _this2.forEachCallback('message', function (callback) {\n            callback(data.data);\n          });\n        }\n      };\n\n      this.socket.onclose = function () {\n        _this2._lostConnection();\n      };\n\n      this.socket.onerror = function (error) {\n        var lastError = _this2.lastError;\n        _this2.lastError = error;\n        if (lastError) return;\n        console.log('stream error', error, new Date().toDateString());\n      };\n\n      this.socket.onheartbeat = function () {\n        _this2.lastError = null;\n\n        _this2._heartbeat_received();\n      };\n\n      if (this.connectionTimer) clearTimeout(this.connectionTimer);\n      this.connectionTimer = setTimeout(function () {\n        _this2._lostConnection(new _this2.ConnectionError(\"DDP connection timed out\"));\n      }, this.CONNECT_TIMEOUT);\n    }\n\n    return _launchConnection;\n  }();\n\n  return ClientStream;\n}(StreamClientCommon);","map":{"version":3,"sources":["packages/socket-stream-client/browser.js"],"names":["_objectSpread","module","link","default","v","_assertThisInitialized","_inheritsLoose","export","ClientStream","toSockjsUrl","toWebsocketUrl","StreamClientCommon","url","options","_initCommon","HEARTBEAT_TIMEOUT","rawUrl","socket","lastError","heartbeatTimer","window","addEventListener","_online","bind","_launchConnection","send","data","currentStatus","connected","_changeUrl","_connected","connectionTimer","clearTimeout","status","retryCount","statusChanged","forEachCallback","callback","_cleanup","maybeError","_clearConnectionAndHeartbeatTimers","onmessage","onclose","onerror","onheartbeat","close","_heartbeat_timeout","console","log","_lostConnection","ConnectionError","_heartbeat_received","_forcedToDisconnect","setTimeout","_sockjsProtocolsWhitelist","protocolsWhitelist","noWebsockets","navigator","test","userAgent","concat","protocols_whitelist","_sockjsOptions","hasSockJS","SockJS","undefined","WebSocket","onopen","error","Date","toDateString","CONNECT_TIMEOUT"],"mappings":"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","sourcesContent":["import {\n  toSockjsUrl,\n  toWebsocketUrl,\n} from \"./urls.js\";\n\nimport { StreamClientCommon } from \"./common.js\";\n\n// Statically importing SockJS here will prevent native WebSocket usage\n// below (in favor of SockJS), but will ensure maximum compatibility for\n// clients stuck in unusual networking environments.\nimport \"./sockjs-0.3.4.js\";\n\nexport class ClientStream extends StreamClientCommon {\n  // @param url {String} URL to Meteor app\n  //   \"http://subdomain.meteor.com/\" or \"/\" or\n  //   \"ddp+sockjs://foo-**.meteor.com/sockjs\"\n  constructor(url, options) {\n    super(options);\n\n    this._initCommon(this.options);\n\n    //// Constants\n\n    // how long between hearing heartbeat from the server until we declare\n    // the connection dead. heartbeats come every 45s (stream_server.js)\n    //\n    // NOTE: this is a older timeout mechanism. We now send heartbeats at\n    // the DDP level (https://github.com/meteor/meteor/pull/1865), and\n    // expect those timeouts to kill a non-responsive connection before\n    // this timeout fires. This is kept around for compatibility (when\n    // talking to a server that doesn't support DDP heartbeats) and can be\n    // removed later.\n    this.HEARTBEAT_TIMEOUT = 100 * 1000;\n\n    this.rawUrl = url;\n    this.socket = null;\n    this.lastError = null;\n\n    this.heartbeatTimer = null;\n\n    // Listen to global 'online' event if we are running in a browser.\n    // (IE8 does not support addEventListener)\n    if (typeof window !== 'undefined' && window.addEventListener)\n      window.addEventListener(\n        'online',\n        this._online.bind(this),\n        false /* useCapture. make FF3.6 happy. */\n      );\n\n    //// Kickoff!\n    this._launchConnection();\n  }\n\n  // data is a utf8 string. Data sent while not connected is dropped on\n  // the floor, and it is up the user of this API to retransmit lost\n  // messages on 'reset'\n  send(data) {\n    if (this.currentStatus.connected) {\n      this.socket.send(data);\n    }\n  }\n\n  // Changes where this connection points\n  _changeUrl(url) {\n    this.rawUrl = url;\n  }\n\n  _connected() {\n    if (this.connectionTimer) {\n      clearTimeout(this.connectionTimer);\n      this.connectionTimer = null;\n    }\n\n    if (this.currentStatus.connected) {\n      // already connected. do nothing. this probably shouldn't happen.\n      return;\n    }\n\n    // update status\n    this.currentStatus.status = 'connected';\n    this.currentStatus.connected = true;\n    this.currentStatus.retryCount = 0;\n    this.statusChanged();\n\n    // fire resets. This must come after status change so that clients\n    // can call send from within a reset callback.\n    this.forEachCallback('reset', callback => {\n      callback();\n    });\n  }\n\n  _cleanup(maybeError) {\n    this._clearConnectionAndHeartbeatTimers();\n    if (this.socket) {\n      this.socket.onmessage = this.socket.onclose = this.socket.onerror = this.socket.onheartbeat = () => {};\n      this.socket.close();\n      this.socket = null;\n    }\n\n    this.forEachCallback('disconnect', callback => {\n      callback(maybeError);\n    });\n  }\n\n  _clearConnectionAndHeartbeatTimers() {\n    if (this.connectionTimer) {\n      clearTimeout(this.connectionTimer);\n      this.connectionTimer = null;\n    }\n    if (this.heartbeatTimer) {\n      clearTimeout(this.heartbeatTimer);\n      this.heartbeatTimer = null;\n    }\n  }\n\n  _heartbeat_timeout() {\n    console.log('Connection timeout. No sockjs heartbeat received.');\n    this._lostConnection(new this.ConnectionError(\"Heartbeat timed out\"));\n  }\n\n  _heartbeat_received() {\n    // If we've already permanently shut down this stream, the timeout is\n    // already cleared, and we don't need to set it again.\n    if (this._forcedToDisconnect) return;\n    if (this.heartbeatTimer) clearTimeout(this.heartbeatTimer);\n    this.heartbeatTimer = setTimeout(\n      this._heartbeat_timeout.bind(this),\n      this.HEARTBEAT_TIMEOUT\n    );\n  }\n\n  _sockjsProtocolsWhitelist() {\n    // only allow polling protocols. no streaming.  streaming\n    // makes safari spin.\n    var protocolsWhitelist = [\n      'xdr-polling',\n      'xhr-polling',\n      'iframe-xhr-polling',\n      'jsonp-polling'\n    ];\n\n    // iOS 4 and 5 and below crash when using websockets over certain\n    // proxies. this seems to be resolved with iOS 6. eg\n    // https://github.com/LearnBoost/socket.io/issues/193#issuecomment-7308865.\n    //\n    // iOS <4 doesn't support websockets at all so sockjs will just\n    // immediately fall back to http\n    var noWebsockets =\n      navigator &&\n      /iPhone|iPad|iPod/.test(navigator.userAgent) &&\n      /OS 4_|OS 5_/.test(navigator.userAgent);\n\n    if (!noWebsockets)\n      protocolsWhitelist = ['websocket'].concat(protocolsWhitelist);\n\n    return protocolsWhitelist;\n  }\n\n  _launchConnection() {\n    this._cleanup(); // cleanup the old socket, if there was one.\n\n    var options = {\n      protocols_whitelist: this._sockjsProtocolsWhitelist(),\n      ...this.options._sockjsOptions\n    };\n\n    const hasSockJS = typeof SockJS === \"function\";\n\n    this.socket = hasSockJS\n      // Convert raw URL to SockJS URL each time we open a connection, so\n      // that we can connect to random hostnames and get around browser\n      // per-host connection limits.\n      ? new SockJS(toSockjsUrl(this.rawUrl), undefined, options)\n      : new WebSocket(toWebsocketUrl(this.rawUrl));\n\n    this.socket.onopen = data => {\n      this.lastError = null;\n      this._connected();\n    };\n\n    this.socket.onmessage = data => {\n      this.lastError = null;\n      this._heartbeat_received();\n      if (this.currentStatus.connected) {\n        this.forEachCallback('message', callback => {\n          callback(data.data);\n        });\n      }\n    };\n\n    this.socket.onclose = () => {\n      this._lostConnection();\n    };\n\n    this.socket.onerror = error => {\n      const { lastError } = this;\n      this.lastError = error;\n      if (lastError) return;\n      console.log(\n        'stream error',\n        error,\n        new Date().toDateString()\n      );\n    };\n\n    this.socket.onheartbeat = () => {\n      this.lastError = null;\n      this._heartbeat_received();\n    };\n\n    if (this.connectionTimer) clearTimeout(this.connectionTimer);\n    this.connectionTimer = setTimeout(() => {\n      this._lostConnection(\n        new this.ConnectionError(\"DDP connection timed out\")\n      );\n    }, this.CONNECT_TIMEOUT);\n  }\n}\n"]},"sourceType":"module","hash":"2656cfe100d01d679b769f5f6b647a0e7ca9c289"}
