{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/idrismahjoubi/cypress-meteor-react/packages/socket-stream-client/node.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/socket-stream-client/node.js","filename":"/Users/idrismahjoubi/cypress-meteor-react/packages/socket-stream-client/node.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"test","cwd":"/Users/idrismahjoubi/cypress-meteor-react","root":"/Users/idrismahjoubi/cypress-meteor-react","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/idrismahjoubi/cypress-meteor-react/packages/socket-stream-client/node.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/socket-stream-client/node.js"}},"code":"!function (module1) {\n  module1.export({\n    ClientStream: () => ClientStream\n  });\n  let Meteor;\n  module1.link(\"meteor/meteor\", {\n    Meteor(v) {\n      Meteor = v;\n    }\n\n  }, 0);\n  let toWebsocketUrl;\n  module1.link(\"./urls.js\", {\n    toWebsocketUrl(v) {\n      toWebsocketUrl = v;\n    }\n\n  }, 1);\n  let StreamClientCommon;\n  module1.link(\"./common.js\", {\n    StreamClientCommon(v) {\n      StreamClientCommon = v;\n    }\n\n  }, 2);\n\n  class ClientStream extends StreamClientCommon {\n    constructor(endpoint, options) {\n      super(options);\n      this.client = null; // created in _launchConnection\n\n      this.endpoint = endpoint;\n      this.headers = this.options.headers || Object.create(null);\n      this.npmFayeOptions = this.options.npmFayeOptions || Object.create(null);\n\n      this._initCommon(this.options); //// Kickoff!\n\n\n      this._launchConnection();\n    } // data is a utf8 string. Data sent while not connected is dropped on\n    // the floor, and it is up the user of this API to retransmit lost\n    // messages on 'reset'\n\n\n    send(data) {\n      if (this.currentStatus.connected) {\n        this.client.send(data);\n      }\n    } // Changes where this connection points\n\n\n    _changeUrl(url) {\n      this.endpoint = url;\n    }\n\n    _onConnect(client) {\n      if (client !== this.client) {\n        // This connection is not from the last call to _launchConnection.\n        // But _launchConnection calls _cleanup which closes previous connections.\n        // It's our belief that this stifles future 'open' events, but maybe\n        // we are wrong?\n        throw new Error('Got open from inactive client ' + !!this.client);\n      }\n\n      if (this._forcedToDisconnect) {\n        // We were asked to disconnect between trying to open the connection and\n        // actually opening it. Let's just pretend this never happened.\n        this.client.close();\n        this.client = null;\n        return;\n      }\n\n      if (this.currentStatus.connected) {\n        // We already have a connection. It must have been the case that we\n        // started two parallel connection attempts (because we wanted to\n        // 'reconnect now' on a hanging connection and we had no way to cancel the\n        // connection attempt.) But this shouldn't happen (similarly to the client\n        // !== this.client check above).\n        throw new Error('Two parallel connections?');\n      }\n\n      this._clearConnectionTimer(); // update status\n\n\n      this.currentStatus.status = 'connected';\n      this.currentStatus.connected = true;\n      this.currentStatus.retryCount = 0;\n      this.statusChanged(); // fire resets. This must come after status change so that clients\n      // can call send from within a reset callback.\n\n      this.forEachCallback('reset', callback => {\n        callback();\n      });\n    }\n\n    _cleanup(maybeError) {\n      this._clearConnectionTimer();\n\n      if (this.client) {\n        var client = this.client;\n        this.client = null;\n        client.close();\n        this.forEachCallback('disconnect', callback => {\n          callback(maybeError);\n        });\n      }\n    }\n\n    _clearConnectionTimer() {\n      if (this.connectionTimer) {\n        clearTimeout(this.connectionTimer);\n        this.connectionTimer = null;\n      }\n    }\n\n    _getProxyUrl(targetUrl) {\n      // Similar to code in tools/http-helpers.js.\n      var proxy = process.env.HTTP_PROXY || process.env.http_proxy || null;\n      var noproxy = process.env.NO_PROXY || process.env.no_proxy || null; // if we're going to a secure url, try the https_proxy env variable first.\n\n      if (targetUrl.match(/^wss:/) || targetUrl.match(/^https:/)) {\n        proxy = process.env.HTTPS_PROXY || process.env.https_proxy || proxy;\n      }\n\n      if (targetUrl.indexOf('localhost') != -1 || targetUrl.indexOf('127.0.0.1') != -1) {\n        return null;\n      }\n\n      if (noproxy) {\n        for (let item of noproxy.split(',')) {\n          if (targetUrl.indexOf(item.trim().replace(/\\*/, '')) !== -1) {\n            proxy = null;\n          }\n        }\n      }\n\n      return proxy;\n    }\n\n    _launchConnection() {\n      var _this = this;\n\n      this._cleanup(); // cleanup the old socket, if there was one.\n      // Since server-to-server DDP is still an experimental feature, we only\n      // require the module if we actually create a server-to-server\n      // connection.\n\n\n      var FayeWebSocket = Npm.require('faye-websocket');\n\n      var deflate = Npm.require('permessage-deflate');\n\n      var targetUrl = toWebsocketUrl(this.endpoint);\n      var fayeOptions = {\n        headers: this.headers,\n        extensions: [deflate]\n      };\n      fayeOptions = Object.assign(fayeOptions, this.npmFayeOptions);\n\n      var proxyUrl = this._getProxyUrl(targetUrl);\n\n      if (proxyUrl) {\n        fayeOptions.proxy = {\n          origin: proxyUrl\n        };\n      } // We would like to specify 'ddp' as the subprotocol here. The npm module we\n      // used to use as a client would fail the handshake if we ask for a\n      // subprotocol and the server doesn't send one back (and sockjs doesn't).\n      // Faye doesn't have that behavior; it's unclear from reading RFC 6455 if\n      // Faye is erroneous or not.  So for now, we don't specify protocols.\n\n\n      var subprotocols = [];\n      var client = this.client = new FayeWebSocket.Client(targetUrl, subprotocols, fayeOptions);\n\n      this._clearConnectionTimer();\n\n      this.connectionTimer = Meteor.setTimeout(() => {\n        this._lostConnection(new this.ConnectionError('DDP connection timed out'));\n      }, this.CONNECT_TIMEOUT);\n      this.client.on('open', Meteor.bindEnvironment(() => {\n        return this._onConnect(client);\n      }, 'stream connect callback'));\n\n      var clientOnIfCurrent = (event, description, callback) => {\n        this.client.on(event, Meteor.bindEnvironment(function () {\n          // Ignore events from any connection we've already cleaned up.\n          if (client !== _this.client) return;\n          callback(...arguments);\n        }, description));\n      };\n\n      clientOnIfCurrent('error', 'stream error callback', error => {\n        if (!this.options._dontPrintErrors) Meteor._debug('stream error', error.message); // Faye's 'error' object is not a JS error (and among other things,\n        // doesn't stringify well). Convert it to one.\n\n        this._lostConnection(new this.ConnectionError(error.message));\n      });\n      clientOnIfCurrent('close', 'stream close callback', () => {\n        this._lostConnection();\n      });\n      clientOnIfCurrent('message', 'stream message callback', message => {\n        // Ignore binary frames, where message.data is a Buffer\n        if (typeof message.data !== 'string') return;\n        this.forEachCallback('message', callback => {\n          callback(message.data);\n        });\n      });\n    }\n\n  }\n}.call(this, module);","map":{"version":3,"sources":["packages/socket-stream-client/node.js"],"names":["module1","export","ClientStream","Meteor","link","v","toWebsocketUrl","StreamClientCommon","constructor","endpoint","options","client","headers","Object","create","npmFayeOptions","_initCommon","_launchConnection","send","data","currentStatus","connected","_changeUrl","url","_onConnect","Error","_forcedToDisconnect","close","_clearConnectionTimer","status","retryCount","statusChanged","forEachCallback","callback","_cleanup","maybeError","connectionTimer","clearTimeout","_getProxyUrl","targetUrl","proxy","process","env","HTTP_PROXY","http_proxy","noproxy","NO_PROXY","no_proxy","match","HTTPS_PROXY","https_proxy","indexOf","item","split","trim","replace","FayeWebSocket","Npm","require","deflate","fayeOptions","extensions","assign","proxyUrl","origin","subprotocols","Client","setTimeout","_lostConnection","ConnectionError","CONNECT_TIMEOUT","on","bindEnvironment","clientOnIfCurrent","event","description","error","_dontPrintErrors","_debug","message"],"mappings":"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","sourcesContent":["import { Meteor } from \"meteor/meteor\";\nimport { toWebsocketUrl } from \"./urls.js\";\nimport { StreamClientCommon } from \"./common.js\";\n\n// @param endpoint {String} URL to Meteor app\n//   \"http://subdomain.meteor.com/\" or \"/\" or\n//   \"ddp+sockjs://foo-**.meteor.com/sockjs\"\n//\n// We do some rewriting of the URL to eventually make it \"ws://\" or \"wss://\",\n// whatever was passed in.  At the very least, what Meteor.absoluteUrl() returns\n// us should work.\n//\n// We don't do any heartbeating. (The logic that did this in sockjs was removed,\n// because it used a built-in sockjs mechanism. We could do it with WebSocket\n// ping frames or with DDP-level messages.)\nexport class ClientStream extends StreamClientCommon {\n  constructor(endpoint, options) {\n    super(options);\n\n    this.client = null; // created in _launchConnection\n    this.endpoint = endpoint;\n\n    this.headers = this.options.headers || Object.create(null);\n    this.npmFayeOptions = this.options.npmFayeOptions || Object.create(null);\n\n    this._initCommon(this.options);\n\n    //// Kickoff!\n    this._launchConnection();\n  }\n\n  // data is a utf8 string. Data sent while not connected is dropped on\n  // the floor, and it is up the user of this API to retransmit lost\n  // messages on 'reset'\n  send(data) {\n    if (this.currentStatus.connected) {\n      this.client.send(data);\n    }\n  }\n\n  // Changes where this connection points\n  _changeUrl(url) {\n    this.endpoint = url;\n  }\n\n  _onConnect(client) {\n    if (client !== this.client) {\n      // This connection is not from the last call to _launchConnection.\n      // But _launchConnection calls _cleanup which closes previous connections.\n      // It's our belief that this stifles future 'open' events, but maybe\n      // we are wrong?\n      throw new Error('Got open from inactive client ' + !!this.client);\n    }\n\n    if (this._forcedToDisconnect) {\n      // We were asked to disconnect between trying to open the connection and\n      // actually opening it. Let's just pretend this never happened.\n      this.client.close();\n      this.client = null;\n      return;\n    }\n\n    if (this.currentStatus.connected) {\n      // We already have a connection. It must have been the case that we\n      // started two parallel connection attempts (because we wanted to\n      // 'reconnect now' on a hanging connection and we had no way to cancel the\n      // connection attempt.) But this shouldn't happen (similarly to the client\n      // !== this.client check above).\n      throw new Error('Two parallel connections?');\n    }\n\n    this._clearConnectionTimer();\n\n    // update status\n    this.currentStatus.status = 'connected';\n    this.currentStatus.connected = true;\n    this.currentStatus.retryCount = 0;\n    this.statusChanged();\n\n    // fire resets. This must come after status change so that clients\n    // can call send from within a reset callback.\n    this.forEachCallback('reset', callback => {\n      callback();\n    });\n  }\n\n  _cleanup(maybeError) {\n    this._clearConnectionTimer();\n    if (this.client) {\n      var client = this.client;\n      this.client = null;\n      client.close();\n\n      this.forEachCallback('disconnect', callback => {\n        callback(maybeError);\n      });\n    }\n  }\n\n  _clearConnectionTimer() {\n    if (this.connectionTimer) {\n      clearTimeout(this.connectionTimer);\n      this.connectionTimer = null;\n    }\n  }\n\n  _getProxyUrl(targetUrl) {\n    // Similar to code in tools/http-helpers.js.\n    var proxy = process.env.HTTP_PROXY || process.env.http_proxy || null;\n    var noproxy = process.env.NO_PROXY || process.env.no_proxy || null;\n    // if we're going to a secure url, try the https_proxy env variable first.\n    if (targetUrl.match(/^wss:/) || targetUrl.match(/^https:/)) {\n      proxy = process.env.HTTPS_PROXY || process.env.https_proxy || proxy;\n    }\n    if (targetUrl.indexOf('localhost') != -1 || targetUrl.indexOf('127.0.0.1') != -1) {\n      return null;\n    }\n    if (noproxy) {\n      for (let item of noproxy.split(',')) {\n        if (targetUrl.indexOf(item.trim().replace(/\\*/, '')) !== -1) {\n          proxy = null;\n        }\n      }\n    }\n    return proxy;\n  }\n\n  _launchConnection() {\n    this._cleanup(); // cleanup the old socket, if there was one.\n\n    // Since server-to-server DDP is still an experimental feature, we only\n    // require the module if we actually create a server-to-server\n    // connection.\n    var FayeWebSocket = Npm.require('faye-websocket');\n    var deflate = Npm.require('permessage-deflate');\n\n    var targetUrl = toWebsocketUrl(this.endpoint);\n    var fayeOptions = {\n      headers: this.headers,\n      extensions: [deflate]\n    };\n    fayeOptions = Object.assign(fayeOptions, this.npmFayeOptions);\n    var proxyUrl = this._getProxyUrl(targetUrl);\n    if (proxyUrl) {\n      fayeOptions.proxy = { origin: proxyUrl };\n    }\n\n    // We would like to specify 'ddp' as the subprotocol here. The npm module we\n    // used to use as a client would fail the handshake if we ask for a\n    // subprotocol and the server doesn't send one back (and sockjs doesn't).\n    // Faye doesn't have that behavior; it's unclear from reading RFC 6455 if\n    // Faye is erroneous or not.  So for now, we don't specify protocols.\n    var subprotocols = [];\n\n    var client = (this.client = new FayeWebSocket.Client(\n      targetUrl,\n      subprotocols,\n      fayeOptions\n    ));\n\n    this._clearConnectionTimer();\n    this.connectionTimer = Meteor.setTimeout(() => {\n      this._lostConnection(new this.ConnectionError('DDP connection timed out'));\n    }, this.CONNECT_TIMEOUT);\n\n    this.client.on(\n      'open',\n      Meteor.bindEnvironment(() => {\n        return this._onConnect(client);\n      }, 'stream connect callback')\n    );\n\n    var clientOnIfCurrent = (event, description, callback) => {\n      this.client.on(\n        event,\n        Meteor.bindEnvironment((...args) => {\n          // Ignore events from any connection we've already cleaned up.\n          if (client !== this.client) return;\n          callback(...args);\n        }, description)\n      );\n    };\n\n    clientOnIfCurrent('error', 'stream error callback', error => {\n      if (!this.options._dontPrintErrors)\n        Meteor._debug('stream error', error.message);\n\n      // Faye's 'error' object is not a JS error (and among other things,\n      // doesn't stringify well). Convert it to one.\n      this._lostConnection(new this.ConnectionError(error.message));\n    });\n\n    clientOnIfCurrent('close', 'stream close callback', () => {\n      this._lostConnection();\n    });\n\n    clientOnIfCurrent('message', 'stream message callback', message => {\n      // Ignore binary frames, where message.data is a Buffer\n      if (typeof message.data !== 'string') return;\n\n      this.forEachCallback('message', callback => {\n        callback(message.data);\n      });\n    });\n  }\n}\n"]},"sourceType":"module","hash":"62cfb9827eb21e9f3924bd93cfc81e9f4ab42226"}
